{"id":"bc5a214bba1c2a889dcc25f405bfe6a5","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlUpgradeable.sol\";\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../utils/StringsUpgradeable.sol\";\nimport \"../utils/introspection/ERC165Upgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControlUpgradeable, ERC165Upgradeable {\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        StringsUpgradeable.toHexString(account),\n                        \" is missing role \",\n                        StringsUpgradeable.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControlUpgradeable {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967Upgradeable {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/IERC1967Upgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721Upgradeable.sol\";\nimport \"./IERC721ReceiverUpgradeable.sol\";\nimport \"./extensions/IERC721MetadataUpgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport \"../../utils/StringsUpgradeable.sol\";\nimport \"../../utils/introspection/ERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC721Upgradeable, IERC721MetadataUpgradeable {\n    using AddressUpgradeable for address;\n    using StringsUpgradeable for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    function __ERC721_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC721_init_unchained(name_, symbol_);\n    }\n\n    function __ERC721_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {\n        return\n            interfaceId == type(IERC721Upgradeable).interfaceId ||\n            interfaceId == type(IERC721MetadataUpgradeable).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721Upgradeable.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721Upgradeable.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721Upgradeable.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721Upgradeable.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721Upgradeable.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721Upgradeable.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721Upgradeable.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721ReceiverUpgradeable.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[44] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721Upgradeable.sol\";\nimport \"./IERC721EnumerableUpgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n * enumerability of all the token ids in the contract as well as all token ids owned by each\n * account.\n */\nabstract contract ERC721EnumerableUpgradeable is Initializable, ERC721Upgradeable, IERC721EnumerableUpgradeable {\n    function __ERC721Enumerable_init() internal onlyInitializing {\n    }\n\n    function __ERC721Enumerable_init_unchained() internal onlyInitializing {\n    }\n    // Mapping from owner to list of owned token IDs\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\n\n    // Mapping from token ID to index of the owner tokens list\n    mapping(uint256 => uint256) private _ownedTokensIndex;\n\n    // Array with all token ids, used for enumeration\n    uint256[] private _allTokens;\n\n    // Mapping from token id to position in the allTokens array\n    mapping(uint256 => uint256) private _allTokensIndex;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165Upgradeable, ERC721Upgradeable) returns (bool) {\n        return interfaceId == type(IERC721EnumerableUpgradeable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721Upgradeable.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\");\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721EnumerableUpgradeable.totalSupply(), \"ERC721Enumerable: global index out of bounds\");\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev See {ERC721-_beforeTokenTransfer}.\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual override {\n        super._beforeTokenTransfer(from, to, firstTokenId, batchSize);\n\n        if (batchSize > 1) {\n            // Will only trigger during construction. Batch transferring (minting) is not available afterwards.\n            revert(\"ERC721Enumerable: consecutive transfers not supported\");\n        }\n\n        uint256 tokenId = firstTokenId;\n\n        if (from == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (from != to) {\n            _removeTokenFromOwnerEnumeration(from, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (to != from) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = ERC721Upgradeable.balanceOf(to);\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = ERC721Upgradeable.balanceOf(from) - 1;\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokens[from][lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[46] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721EnumerableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Upgradeable.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721EnumerableUpgradeable is IERC721Upgradeable {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Upgradeable.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721MetadataUpgradeable is IERC721Upgradeable {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721ReceiverUpgradeable {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165Upgradeable.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721Upgradeable is IERC165Upgradeable {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary CountersUpgradeable {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMathUpgradeable {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/MathUpgradeable.sol\";\nimport \"./math/SignedMathUpgradeable.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary StringsUpgradeable {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = MathUpgradeable.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMathUpgradeable.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableMapUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableMap.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableMap.js.\n\npragma solidity ^0.8.0;\n\nimport \"./EnumerableSetUpgradeable.sol\";\n\n/**\n * @dev Library for managing an enumerable variant of Solidity's\n * https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\n * type.\n *\n * Maps have the following properties:\n *\n * - Entries are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Entries are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableMap for EnumerableMap.UintToAddressMap;\n *\n *     // Declare a set state variable\n *     EnumerableMap.UintToAddressMap private myMap;\n * }\n * ```\n *\n * The following map types are supported:\n *\n * - `uint256 -> address` (`UintToAddressMap`) since v3.0.0\n * - `address -> uint256` (`AddressToUintMap`) since v4.6.0\n * - `bytes32 -> bytes32` (`Bytes32ToBytes32Map`) since v4.6.0\n * - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0\n * - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableMap.\n * ====\n */\nlibrary EnumerableMapUpgradeable {\n    using EnumerableSetUpgradeable for EnumerableSetUpgradeable.Bytes32Set;\n\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Map type with\n    // bytes32 keys and values.\n    // The Map implementation uses private functions, and user-facing\n    // implementations (such as Uint256ToAddressMap) are just wrappers around\n    // the underlying Map.\n    // This means that we can only create new EnumerableMaps for types that fit\n    // in bytes32.\n\n    struct Bytes32ToBytes32Map {\n        // Storage of keys\n        EnumerableSetUpgradeable.Bytes32Set _keys;\n        mapping(bytes32 => bytes32) _values;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(Bytes32ToBytes32Map storage map, bytes32 key, bytes32 value) internal returns (bool) {\n        map._values[key] = value;\n        return map._keys.add(key);\n    }\n\n    /**\n     * @dev Removes a key-value pair from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(Bytes32ToBytes32Map storage map, bytes32 key) internal returns (bool) {\n        delete map._values[key];\n        return map._keys.remove(key);\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool) {\n        return map._keys.contains(key);\n    }\n\n    /**\n     * @dev Returns the number of key-value pairs in the map. O(1).\n     */\n    function length(Bytes32ToBytes32Map storage map) internal view returns (uint256) {\n        return map._keys.length();\n    }\n\n    /**\n     * @dev Returns the key-value pair stored at position `index` in the map. O(1).\n     *\n     * Note that there are no guarantees on the ordering of entries inside the\n     * array, and it may change when more entries are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32ToBytes32Map storage map, uint256 index) internal view returns (bytes32, bytes32) {\n        bytes32 key = map._keys.at(index);\n        return (key, map._values[key]);\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool, bytes32) {\n        bytes32 value = map._values[key];\n        if (value == bytes32(0)) {\n            return (contains(map, key), bytes32(0));\n        } else {\n            return (true, value);\n        }\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bytes32) {\n        bytes32 value = map._values[key];\n        require(value != 0 || contains(map, key), \"EnumerableMap: nonexistent key\");\n        return value;\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(\n        Bytes32ToBytes32Map storage map,\n        bytes32 key,\n        string memory errorMessage\n    ) internal view returns (bytes32) {\n        bytes32 value = map._values[key];\n        require(value != 0 || contains(map, key), errorMessage);\n        return value;\n    }\n\n    /**\n     * @dev Return the an array containing all the keys\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function keys(Bytes32ToBytes32Map storage map) internal view returns (bytes32[] memory) {\n        return map._keys.values();\n    }\n\n    // UintToUintMap\n\n    struct UintToUintMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(UintToUintMap storage map, uint256 key, uint256 value) internal returns (bool) {\n        return set(map._inner, bytes32(key), bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(UintToUintMap storage map, uint256 key) internal returns (bool) {\n        return remove(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(UintToUintMap storage map, uint256 key) internal view returns (bool) {\n        return contains(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(UintToUintMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the map. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintToUintMap storage map, uint256 index) internal view returns (uint256, uint256) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (uint256(key), uint256(value));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(UintToUintMap storage map, uint256 key) internal view returns (bool, uint256) {\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(key));\n        return (success, uint256(value));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(UintToUintMap storage map, uint256 key) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(key)));\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(UintToUintMap storage map, uint256 key, string memory errorMessage) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(key), errorMessage));\n    }\n\n    /**\n     * @dev Return the an array containing all the keys\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function keys(UintToUintMap storage map) internal view returns (uint256[] memory) {\n        bytes32[] memory store = keys(map._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintToAddressMap\n\n    struct UintToAddressMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(UintToAddressMap storage map, uint256 key, address value) internal returns (bool) {\n        return set(map._inner, bytes32(key), bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(UintToAddressMap storage map, uint256 key) internal returns (bool) {\n        return remove(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {\n        return contains(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(UintToAddressMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the map. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintToAddressMap storage map, uint256 index) internal view returns (uint256, address) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (uint256(key), address(uint160(uint256(value))));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(UintToAddressMap storage map, uint256 key) internal view returns (bool, address) {\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(key));\n        return (success, address(uint160(uint256(value))));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(UintToAddressMap storage map, uint256 key) internal view returns (address) {\n        return address(uint160(uint256(get(map._inner, bytes32(key)))));\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(\n        UintToAddressMap storage map,\n        uint256 key,\n        string memory errorMessage\n    ) internal view returns (address) {\n        return address(uint160(uint256(get(map._inner, bytes32(key), errorMessage))));\n    }\n\n    /**\n     * @dev Return the an array containing all the keys\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function keys(UintToAddressMap storage map) internal view returns (uint256[] memory) {\n        bytes32[] memory store = keys(map._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressToUintMap\n\n    struct AddressToUintMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(AddressToUintMap storage map, address key, uint256 value) internal returns (bool) {\n        return set(map._inner, bytes32(uint256(uint160(key))), bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(AddressToUintMap storage map, address key) internal returns (bool) {\n        return remove(map._inner, bytes32(uint256(uint160(key))));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(AddressToUintMap storage map, address key) internal view returns (bool) {\n        return contains(map._inner, bytes32(uint256(uint160(key))));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(AddressToUintMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the map. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressToUintMap storage map, uint256 index) internal view returns (address, uint256) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (address(uint160(uint256(key))), uint256(value));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(AddressToUintMap storage map, address key) internal view returns (bool, uint256) {\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(uint256(uint160(key))));\n        return (success, uint256(value));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(AddressToUintMap storage map, address key) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(uint256(uint160(key)))));\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(\n        AddressToUintMap storage map,\n        address key,\n        string memory errorMessage\n    ) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(uint256(uint160(key))), errorMessage));\n    }\n\n    /**\n     * @dev Return the an array containing all the keys\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function keys(AddressToUintMap storage map) internal view returns (address[] memory) {\n        bytes32[] memory store = keys(map._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // Bytes32ToUintMap\n\n    struct Bytes32ToUintMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(Bytes32ToUintMap storage map, bytes32 key, uint256 value) internal returns (bool) {\n        return set(map._inner, key, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(Bytes32ToUintMap storage map, bytes32 key) internal returns (bool) {\n        return remove(map._inner, key);\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(Bytes32ToUintMap storage map, bytes32 key) internal view returns (bool) {\n        return contains(map._inner, key);\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(Bytes32ToUintMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the map. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32ToUintMap storage map, uint256 index) internal view returns (bytes32, uint256) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (key, uint256(value));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(Bytes32ToUintMap storage map, bytes32 key) internal view returns (bool, uint256) {\n        (bool success, bytes32 value) = tryGet(map._inner, key);\n        return (success, uint256(value));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(Bytes32ToUintMap storage map, bytes32 key) internal view returns (uint256) {\n        return uint256(get(map._inner, key));\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(\n        Bytes32ToUintMap storage map,\n        bytes32 key,\n        string memory errorMessage\n    ) internal view returns (uint256) {\n        return uint256(get(map._inner, key, errorMessage));\n    }\n\n    /**\n     * @dev Return the an array containing all the keys\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function keys(Bytes32ToUintMap storage map) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = keys(map._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSetUpgradeable {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/interfaces/IDataStorageCartridge.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\ninterface IDataStorageCartridge {\n    function fetch() external view returns (string memory);\n\n    function create(bytes calldata args) external payable returns (bool);\n\n    function remove(bytes calldata args) external payable returns (bool);\n\n    function typeOf() external pure returns (bytes32);\n\n}\n"},"contracts/Profile.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableMapUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol\";\n\nimport \"./interfaces/IDataStorageCartridge.sol\";\n\n    error TokenTransferProhibited();\n    error StorageZeroAddress();\n\ncontract Profile is Initializable, ERC721Upgradeable, OwnableUpgradeable, AccessControlUpgradeable, UUPSUpgradeable {\n    using StringsUpgradeable for uint256;\n    using CountersUpgradeable for CountersUpgradeable.Counter;\n    using EnumerableMapUpgradeable for EnumerableMapUpgradeable.AddressToUintMap;\n    using EnumerableMapUpgradeable for EnumerableMapUpgradeable.UintToAddressMap;\n\n    // Mapping from token ID to owner address\n    EnumerableMapUpgradeable.UintToAddressMap private _ownerMap;\n    EnumerableMapUpgradeable.AddressToUintMap private _tokenMap;\n\n    // Token Id\n    CountersUpgradeable.Counter private _tokenId;\n\n    mapping(address => IDataStorageCartridge) private _dataStorageProviders;\n\n    struct UserProfile {\n        bytes32 checksum;\n        address issuedBy;\n        uint32 issuedAt;\n        bytes signature;\n        string metadata;\n        address storageAddress;\n    }\n\n    mapping(address => UserProfile) private _profiles;\n\n    event Mint(address indexed to, uint256 tokenId);\n    event Burn(address indexed to, uint256 tokenId);\n\n    /// @notice the constructor is not used since the contract is upgradeable except to disable initializers in the implementations that are deployed.\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(string memory name, string memory symbol, address admin) public initializer {\n        __Ownable_init();\n        __AccessControl_init();\n        __ERC721_init(name, symbol);\n        __UUPSUpgradeable_init();\n\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\n    }\n\n    function tokenURI(uint256 tokenId) public view override(ERC721Upgradeable) returns (string memory) {\n        address owner = _ownerMap.get(tokenId, \"Token not exist\");\n        return bytes(_profiles[owner].metadata).length > 0 ? _profiles[owner].metadata : \"\";\n    }\n\n    function mint(UserProfile memory profile, string memory data) external payable returns (uint256)  {\n        if (profile.storageAddress == address(0)) revert StorageZeroAddress();\n        require(address(_dataStorageProviders[profile.storageAddress]) != address(0), \"storage not initialized\");\n\n        uint256 tokenId = 0;\n        if (_tokenMap.contains(msg.sender)) {\n            tokenId = _tokenMap.get(msg.sender);\n            UserProfile memory prevProfile = _profiles[msg.sender];\n            if (prevProfile.storageAddress != profile.storageAddress) {\n                _dataStorageProviders[prevProfile.storageAddress].remove(abi.encode(msg.sender));\n            }\n        } else {\n            _tokenId.increment();\n            tokenId = _tokenId.current();\n            _tokenMap.set(msg.sender, tokenId);\n            _ownerMap.set(tokenId, msg.sender);\n        }\n\n        _profiles[msg.sender] = profile;\n        bool result = _dataStorageProviders[profile.storageAddress].create(abi.encode(msg.sender, data));\n        require(result == true, \"invalid response from data storage\");\n\n        emit Mint(msg.sender, tokenId);\n\n        return tokenId;\n    }\n\n    function burn() external payable {\n        require(_tokenMap.contains(msg.sender), \"The account does not have profile\");\n\n        uint256 tokenId = _tokenMap.get(msg.sender);\n\n        _tokenMap.remove(msg.sender);\n        _ownerMap.remove(tokenId);\n\n        UserProfile memory profile = _profiles[msg.sender];\n        bool result = _dataStorageProviders[profile.storageAddress].remove(abi.encode(msg.sender));\n        require(result == true, \"invalid response from data storage\");\n        delete _profiles[msg.sender];\n\n        emit Burn(msg.sender, tokenId);\n    }\n\n    function getUserProfile(uint256 tokenId) public view returns (UserProfile memory)  {\n        address owner = _ownerMap.get(tokenId, \"Invalid tokenId\");\n        UserProfile memory profile = _profiles[owner];\n        return profile;\n    }\n\n    function balanceOf(address owner) public view override(ERC721Upgradeable) returns (uint256) {\n        (bool success,) = _tokenMap.tryGet(owner);\n        return success ? 1 : 0;\n    }\n\n    function tokenIdOf(address from) public view returns (uint256) {\n        return _tokenMap.get(from, \"The wallet does not have a completed profile\");\n    }\n\n    function ownerOf(uint256 tokenId) public view override(ERC721Upgradeable) returns (address) {\n        return _ownerMap.get(tokenId, \"Invalid tokenId\");\n    }\n\n    function totalSupply() external view returns (uint256) {\n        return _tokenMap.length();\n    }\n\n    function isAdmin(address account) external view returns (bool) {\n        return hasRole(DEFAULT_ADMIN_ROLE, account);\n    }\n\n    function supportsInterface(bytes4 interfaceId)\n    public\n    view\n    override(ERC721Upgradeable, AccessControlUpgradeable)\n    returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override(ERC721Upgradeable) {\n        if (from != address(0)) revert TokenTransferProhibited();\n        super.safeTransferFrom(from, to, tokenId);\n    }\n\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override(ERC721Upgradeable) {\n        if (from != address(0)) revert TokenTransferProhibited();\n        super.safeTransferFrom(from, to, tokenId);\n    }\n\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override(ERC721Upgradeable) {\n        if (from != address(0)) revert TokenTransferProhibited();\n        super.safeTransferFrom(from, to, tokenId, data);\n    }\n\n    function setDataStorageProvider(address _address) external onlyOwner {\n        require(_address != address(0), \"storage zero address\");\n        _dataStorageProviders[_address] = IDataStorageCartridge(_address);\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal onlyOwner override {}\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["storageLayout","abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[335],"AddressUpgradeable":[3058],"ContextUpgradeable":[3100],"ERC165Upgradeable":[3557],"IAccessControlUpgradeable":[408],"IERC165Upgradeable":[3569],"Initializable":[1074],"MathUpgradeable":[4435],"SignedMathUpgradeable":[4540],"StringsUpgradeable":[3513]},"id":336,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","file":"./IAccessControlUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":336,"sourceUnit":409,"src":"133:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":336,"sourceUnit":3101,"src":"175:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","file":"../utils/StringsUpgradeable.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":336,"sourceUnit":3514,"src":"217:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":336,"sourceUnit":3558,"src":"259:54:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":6,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":336,"sourceUnit":1075,"src":"314:42:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":8,"name":"Initializable","nameLocations":["2065:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"2065:13:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"2065:13:0"},{"baseName":{"id":10,"name":"ContextUpgradeable","nameLocations":["2080:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":3100,"src":"2080:18:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"2080:18:0"},{"baseName":{"id":12,"name":"IAccessControlUpgradeable","nameLocations":["2100:25:0"],"nodeType":"IdentifierPath","referencedDeclaration":408,"src":"2100:25:0"},"id":13,"nodeType":"InheritanceSpecifier","src":"2100:25:0"},{"baseName":{"id":14,"name":"ERC165Upgradeable","nameLocations":["2127:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":3557,"src":"2127:17:0"},"id":15,"nodeType":"InheritanceSpecifier","src":"2127:17:0"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":7,"nodeType":"StructuredDocumentation","src":"358:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":335,"linearizedBaseContracts":[335,3557,3569,408,3100,1074],"name":"AccessControlUpgradeable","nameLocation":"2037:24:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":20,"nodeType":"Block","src":"2209:7:0","statements":[]},"id":21,"implemented":true,"kind":"function","modifiers":[{"id":18,"kind":"modifierInvocation","modifierName":{"id":17,"name":"onlyInitializing","nameLocations":["2192:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"2192:16:0"},"nodeType":"ModifierInvocation","src":"2192:16:0"}],"name":"__AccessControl_init","nameLocation":"2160:20:0","nodeType":"FunctionDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"2180:2:0"},"returnParameters":{"id":19,"nodeType":"ParameterList","parameters":[],"src":"2209:0:0"},"scope":335,"src":"2151:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":26,"nodeType":"Block","src":"2290:7:0","statements":[]},"id":27,"implemented":true,"kind":"function","modifiers":[{"id":24,"kind":"modifierInvocation","modifierName":{"id":23,"name":"onlyInitializing","nameLocations":["2273:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"2273:16:0"},"nodeType":"ModifierInvocation","src":"2273:16:0"}],"name":"__AccessControl_init_unchained","nameLocation":"2231:30:0","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"2261:2:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"2290:0:0"},"scope":335,"src":"2222:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"canonicalName":"AccessControlUpgradeable.RoleData","id":34,"members":[{"constant":false,"id":31,"mutability":"mutable","name":"members","nameLocation":"2353:7:0","nodeType":"VariableDeclaration","scope":34,"src":"2328:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":30,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"2336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2328:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":29,"name":"bool","nodeType":"ElementaryTypeName","src":"2347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":33,"mutability":"mutable","name":"adminRole","nameLocation":"2378:9:0","nodeType":"VariableDeclaration","scope":34,"src":"2370:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2370:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2309:8:0","nodeType":"StructDefinition","scope":335,"src":"2302:92:0","visibility":"public"},{"constant":false,"id":39,"mutability":"mutable","name":"_roles","nameLocation":"2437:6:0","nodeType":"VariableDeclaration","scope":335,"src":"2400:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":38,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":35,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2408:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2400:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":37,"nodeType":"UserDefinedTypeName","pathNode":{"id":36,"name":"RoleData","nameLocations":["2419:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":34,"src":"2419:8:0"},"referencedDeclaration":34,"src":"2419:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$34_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":42,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2474:18:0","nodeType":"VariableDeclaration","scope":335,"src":"2450:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":40,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2450:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":41,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":52,"nodeType":"Block","src":"2918:44:0","statements":[{"expression":{"arguments":[{"id":48,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"2939:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":47,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[107,146],"referencedDeclaration":107,"src":"2928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2928:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":50,"nodeType":"ExpressionStatement","src":"2928:16:0"},{"id":51,"nodeType":"PlaceholderStatement","src":"2954:1:0"}]},"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"2506:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":53,"name":"onlyRole","nameLocation":"2895:8:0","nodeType":"ModifierDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"role","nameLocation":"2912:4:0","nodeType":"VariableDeclaration","scope":53,"src":"2904:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":44,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2904:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2903:14:0"},"src":"2886:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[3551],"body":{"id":74,"nodeType":"Block","src":"3120:122:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"3137:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":64,"name":"IAccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"3157:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlUpgradeable_$408_$","typeString":"type(contract IAccessControlUpgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlUpgradeable_$408_$","typeString":"type(contract IAccessControlUpgradeable)"}],"id":63,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3152:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3152:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlUpgradeable_$408","typeString":"type(contract IAccessControlUpgradeable)"}},"id":66,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3184:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"3152:43:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3137:58:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":70,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"3223:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":68,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3199:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$335_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":69,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3205:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3551,"src":"3199:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":71,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3137:98:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":61,"id":73,"nodeType":"Return","src":"3130:105:0"}]},"documentation":{"id":54,"nodeType":"StructuredDocumentation","src":"2968:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":75,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3038:17:0","nodeType":"FunctionDefinition","overrides":{"id":58,"nodeType":"OverrideSpecifier","overrides":[],"src":"3096:8:0"},"parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"interfaceId","nameLocation":"3063:11:0","nodeType":"VariableDeclaration","scope":75,"src":"3056:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":55,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3056:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3055:20:0"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":75,"src":"3114:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":59,"name":"bool","nodeType":"ElementaryTypeName","src":"3114:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3113:6:0"},"scope":335,"src":"3029:213:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[375],"body":{"id":93,"nodeType":"Block","src":"3421:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":86,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"3438:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":88,"indexExpression":{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"3445:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3438:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$34_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":89,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3451:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":31,"src":"3438:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":91,"indexExpression":{"id":90,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3459:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3438:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":85,"id":92,"nodeType":"Return","src":"3431:36:0"}]},"documentation":{"id":76,"nodeType":"StructuredDocumentation","src":"3248:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":94,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3338:7:0","nodeType":"FunctionDefinition","overrides":{"id":82,"nodeType":"OverrideSpecifier","overrides":[],"src":"3397:8:0"},"parameters":{"id":81,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"role","nameLocation":"3354:4:0","nodeType":"VariableDeclaration","scope":94,"src":"3346:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":77,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3346:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":80,"mutability":"mutable","name":"account","nameLocation":"3368:7:0","nodeType":"VariableDeclaration","scope":94,"src":"3360:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":79,"name":"address","nodeType":"ElementaryTypeName","src":"3360:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3345:31:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":94,"src":"3415:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":83,"name":"bool","nodeType":"ElementaryTypeName","src":"3415:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3414:6:0"},"scope":335,"src":"3329:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":106,"nodeType":"Block","src":"3824:47:0","statements":[{"expression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3845:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":102,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"3851:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[107,146],"referencedDeclaration":146,"src":"3834:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3834:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":105,"nodeType":"ExpressionStatement","src":"3834:30:0"}]},"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"3480:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":107,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3777:10:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"mutability":"mutable","name":"role","nameLocation":"3796:4:0","nodeType":"VariableDeclaration","scope":107,"src":"3788:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":96,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3788:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3787:14:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3824:0:0"},"scope":335,"src":"3768:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":145,"nodeType":"Block","src":"4225:428:0","statements":[{"condition":{"id":119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4239:23:0","subExpression":{"arguments":[{"id":116,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"4248:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":117,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"4254:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":115,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"4240:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":144,"nodeType":"IfStatement","src":"4235:412:0","trueBody":{"id":143,"nodeType":"Block","src":"4264:383:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4372:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":128,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"4454:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":126,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"4423:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$3513_$","typeString":"type(library StringsUpgradeable)"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4442:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":3487,"src":"4423:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4423:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4488:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":135,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"4572:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4564:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":133,"name":"uint256","nodeType":"ElementaryTypeName","src":"4564:7:0","typeDescriptions":{}}},"id":136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4564:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4579:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":131,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"4533:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$3513_$","typeString":"type(library StringsUpgradeable)"}},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4552:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":3467,"src":"4533:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4533:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":123,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4330:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4334:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"4330:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:274:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4302:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":121,"name":"string","nodeType":"ElementaryTypeName","src":"4302:6:0","typeDescriptions":{}}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:320:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":120,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"4278:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4278:358:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":142,"nodeType":"ExpressionStatement","src":"4278:358:0"}]}}]},"documentation":{"id":108,"nodeType":"StructuredDocumentation","src":"3877:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4161:10:0","nodeType":"FunctionDefinition","parameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":110,"mutability":"mutable","name":"role","nameLocation":"4180:4:0","nodeType":"VariableDeclaration","scope":146,"src":"4172:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":109,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4172:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":112,"mutability":"mutable","name":"account","nameLocation":"4194:7:0","nodeType":"VariableDeclaration","scope":146,"src":"4186:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"4186:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4171:31:0"},"returnParameters":{"id":114,"nodeType":"ParameterList","parameters":[],"src":"4225:0:0"},"scope":335,"src":"4152:501:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[383],"body":{"id":160,"nodeType":"Block","src":"4917:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":155,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"4934:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":157,"indexExpression":{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"4941:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4934:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$34_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4947:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":33,"src":"4934:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":154,"id":159,"nodeType":"Return","src":"4927:29:0"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4659:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":161,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4843:12:0","nodeType":"FunctionDefinition","overrides":{"id":151,"nodeType":"OverrideSpecifier","overrides":[],"src":"4890:8:0"},"parameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"role","nameLocation":"4864:4:0","nodeType":"VariableDeclaration","scope":161,"src":"4856:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4856:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4855:14:0"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":161,"src":"4908:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4908:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4907:9:0"},"scope":335,"src":"4834:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[391],"body":{"id":180,"nodeType":"Block","src":"5362:42:0","statements":[{"expression":{"arguments":[{"id":176,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"5383:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":177,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"5389:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":175,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"5372:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5372:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":179,"nodeType":"ExpressionStatement","src":"5372:25:0"}]},"documentation":{"id":162,"nodeType":"StructuredDocumentation","src":"4969:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":181,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":171,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"5355:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":170,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"5342:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5342:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":173,"kind":"modifierInvocation","modifierName":{"id":169,"name":"onlyRole","nameLocations":["5333:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":53,"src":"5333:8:0"},"nodeType":"ModifierInvocation","src":"5333:28:0"}],"name":"grantRole","nameLocation":"5268:9:0","nodeType":"FunctionDefinition","overrides":{"id":168,"nodeType":"OverrideSpecifier","overrides":[],"src":"5324:8:0"},"parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"role","nameLocation":"5286:4:0","nodeType":"VariableDeclaration","scope":181,"src":"5278:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5278:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"account","nameLocation":"5300:7:0","nodeType":"VariableDeclaration","scope":181,"src":"5292:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":165,"name":"address","nodeType":"ElementaryTypeName","src":"5292:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5277:31:0"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"5362:0:0"},"scope":335,"src":"5259:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[399],"body":{"id":200,"nodeType":"Block","src":"5788:43:0","statements":[{"expression":{"arguments":[{"id":196,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"5810:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":197,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"5816:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":195,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"5798:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5798:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":199,"nodeType":"ExpressionStatement","src":"5798:26:0"}]},"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"5410:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":201,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":191,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"5781:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":190,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"5768:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5768:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":193,"kind":"modifierInvocation","modifierName":{"id":189,"name":"onlyRole","nameLocations":["5759:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":53,"src":"5759:8:0"},"nodeType":"ModifierInvocation","src":"5759:28:0"}],"name":"revokeRole","nameLocation":"5693:10:0","nodeType":"FunctionDefinition","overrides":{"id":188,"nodeType":"OverrideSpecifier","overrides":[],"src":"5750:8:0"},"parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"role","nameLocation":"5712:4:0","nodeType":"VariableDeclaration","scope":201,"src":"5704:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5704:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"account","nameLocation":"5726:7:0","nodeType":"VariableDeclaration","scope":201,"src":"5718:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"5718:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5703:31:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"5788:0:0"},"scope":335,"src":"5684:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[407],"body":{"id":223,"nodeType":"Block","src":"6445:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":211,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"6463:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":212,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"6474:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6474:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6463:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6488:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":210,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6455:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6455:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":217,"nodeType":"ExpressionStatement","src":"6455:83:0"},{"expression":{"arguments":[{"id":219,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"6561:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":220,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"6567:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":218,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"6549:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6549:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":222,"nodeType":"ExpressionStatement","src":"6549:26:0"}]},"documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"5837:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":224,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6377:12:0","nodeType":"FunctionDefinition","overrides":{"id":208,"nodeType":"OverrideSpecifier","overrides":[],"src":"6436:8:0"},"parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"role","nameLocation":"6398:4:0","nodeType":"VariableDeclaration","scope":224,"src":"6390:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6390:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"account","nameLocation":"6412:7:0","nodeType":"VariableDeclaration","scope":224,"src":"6404:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"6404:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6389:31:0"},"returnParameters":{"id":209,"nodeType":"ParameterList","parameters":[],"src":"6445:0:0"},"scope":335,"src":"6368:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":237,"nodeType":"Block","src":"7335:42:0","statements":[{"expression":{"arguments":[{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"7356:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":234,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"7362:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":232,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"7345:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7345:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":236,"nodeType":"ExpressionStatement","src":"7345:25:0"}]},"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"6588:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":238,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"7276:10:0","nodeType":"FunctionDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"role","nameLocation":"7295:4:0","nodeType":"VariableDeclaration","scope":238,"src":"7287:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7287:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":229,"mutability":"mutable","name":"account","nameLocation":"7309:7:0","nodeType":"VariableDeclaration","scope":238,"src":"7301:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"7301:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7286:31:0"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[],"src":"7335:0:0"},"scope":335,"src":"7267:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":265,"nodeType":"Block","src":"7575:174:0","statements":[{"assignments":[247],"declarations":[{"constant":false,"id":247,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7593:17:0","nodeType":"VariableDeclaration","scope":265,"src":"7585:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7585:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[{"id":249,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"7626:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":248,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"7613:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7613:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7585:46:0"},{"expression":{"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":252,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"7641:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":254,"indexExpression":{"id":253,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"7648:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7641:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$34_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7654:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":33,"src":"7641:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":256,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"7666:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7641:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":258,"nodeType":"ExpressionStatement","src":"7641:34:0"},{"eventCall":{"arguments":[{"id":260,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"7707:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":261,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"7713:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":262,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"7732:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":259,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"7690:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7690:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":264,"nodeType":"EmitStatement","src":"7685:57:0"}]},"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"7383:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":266,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7511:13:0","nodeType":"FunctionDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"role","nameLocation":"7533:4:0","nodeType":"VariableDeclaration","scope":266,"src":"7525:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7525:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"adminRole","nameLocation":"7547:9:0","nodeType":"VariableDeclaration","scope":266,"src":"7539:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7539:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7524:33:0"},"returnParameters":{"id":245,"nodeType":"ParameterList","parameters":[],"src":"7575:0:0"},"scope":335,"src":"7502:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":297,"nodeType":"Block","src":"7985:165:0","statements":[{"condition":{"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7999:23:0","subExpression":{"arguments":[{"id":275,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"8008:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":276,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"8014:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":274,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"8000:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8000:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":296,"nodeType":"IfStatement","src":"7995:149:0","trueBody":{"id":295,"nodeType":"Block","src":"8024:120:0","statements":[{"expression":{"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":279,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"8038:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":281,"indexExpression":{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"8045:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8038:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$34_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8051:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":31,"src":"8038:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":284,"indexExpression":{"id":283,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"8059:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8038:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8070:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8038:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":287,"nodeType":"ExpressionStatement","src":"8038:36:0"},{"eventCall":{"arguments":[{"id":289,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"8105:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":290,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"8111:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":291,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"8120:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8120:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":288,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"8093:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8093:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":294,"nodeType":"EmitStatement","src":"8088:45:0"}]}}]},"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"7755:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":298,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7926:10:0","nodeType":"FunctionDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"role","nameLocation":"7945:4:0","nodeType":"VariableDeclaration","scope":298,"src":"7937:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":268,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7937:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"account","nameLocation":"7959:7:0","nodeType":"VariableDeclaration","scope":298,"src":"7951:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"7951:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7936:31:0"},"returnParameters":{"id":273,"nodeType":"ParameterList","parameters":[],"src":"7985:0:0"},"scope":335,"src":"7917:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":328,"nodeType":"Block","src":"8390:165:0","statements":[{"condition":{"arguments":[{"id":307,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"8412:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":308,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"8418:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":306,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"8404:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8404:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":327,"nodeType":"IfStatement","src":"8400:149:0","trueBody":{"id":326,"nodeType":"Block","src":"8428:121:0","statements":[{"expression":{"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":310,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"8442:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":312,"indexExpression":{"id":311,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"8449:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8442:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$34_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8455:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":31,"src":"8442:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":315,"indexExpression":{"id":314,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"8463:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8442:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8474:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8442:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":318,"nodeType":"ExpressionStatement","src":"8442:37:0"},{"eventCall":{"arguments":[{"id":320,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"8510:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":321,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"8516:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":322,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"8525:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8525:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":319,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"8498:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8498:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":325,"nodeType":"EmitStatement","src":"8493:45:0"}]}}]},"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"8156:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":329,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"8330:11:0","nodeType":"FunctionDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"role","nameLocation":"8350:4:0","nodeType":"VariableDeclaration","scope":329,"src":"8342:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8342:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"account","nameLocation":"8364:7:0","nodeType":"VariableDeclaration","scope":329,"src":"8356:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"8356:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8341:31:0"},"returnParameters":{"id":305,"nodeType":"ParameterList","parameters":[],"src":"8390:0:0"},"scope":335,"src":"8321:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"8561:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":334,"mutability":"mutable","name":"__gap","nameLocation":"8840:5:0","nodeType":"VariableDeclaration","scope":335,"src":"8820:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"8820:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":333,"length":{"hexValue":"3439","id":332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8828:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"8820:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":336,"src":"2019:6829:0","usedErrors":[]}],"src":"108:8741:0"},"id":0},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","exportedSymbols":{"IAccessControlUpgradeable":[408]},"id":409,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":337,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControlUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":338,"nodeType":"StructuredDocumentation","src":"119:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":408,"linearizedBaseContracts":[408],"name":"IAccessControlUpgradeable","nameLocation":"219:25:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":339,"nodeType":"StructuredDocumentation","src":"251:292:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":347,"name":"RoleAdminChanged","nameLocation":"554:16:1","nodeType":"EventDefinition","parameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"587:4:1","nodeType":"VariableDeclaration","scope":347,"src":"571:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"571:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":343,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"609:17:1","nodeType":"VariableDeclaration","scope":347,"src":"593:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":342,"name":"bytes32","nodeType":"ElementaryTypeName","src":"593:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":345,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"644:12:1","nodeType":"VariableDeclaration","scope":347,"src":"628:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"628:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"570:87:1"},"src":"548:110:1"},{"anonymous":false,"documentation":{"id":348,"nodeType":"StructuredDocumentation","src":"664:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":356,"name":"RoleGranted","nameLocation":"887:11:1","nodeType":"EventDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":350,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"915:4:1","nodeType":"VariableDeclaration","scope":356,"src":"899:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":349,"name":"bytes32","nodeType":"ElementaryTypeName","src":"899:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":352,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"937:7:1","nodeType":"VariableDeclaration","scope":356,"src":"921:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":354,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"962:6:1","nodeType":"VariableDeclaration","scope":356,"src":"946:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"946:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"898:71:1"},"src":"881:89:1"},{"anonymous":false,"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"976:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":365,"name":"RoleRevoked","nameLocation":"1262:11:1","nodeType":"EventDefinition","parameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1290:4:1","nodeType":"VariableDeclaration","scope":365,"src":"1274:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1274:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":361,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1312:7:1","nodeType":"VariableDeclaration","scope":365,"src":"1296:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"1296:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":363,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1337:6:1","nodeType":"VariableDeclaration","scope":365,"src":"1321:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":362,"name":"address","nodeType":"ElementaryTypeName","src":"1321:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1273:71:1"},"src":"1256:89:1"},{"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"1351:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":375,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1441:7:1","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"role","nameLocation":"1457:4:1","nodeType":"VariableDeclaration","scope":375,"src":"1449:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1449:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"account","nameLocation":"1471:7:1","nodeType":"VariableDeclaration","scope":375,"src":"1463:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":369,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1448:31:1"},"returnParameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":375,"src":"1503:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":372,"name":"bool","nodeType":"ElementaryTypeName","src":"1503:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1502:6:1"},"scope":408,"src":"1432:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"1515:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":383,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1713:12:1","nodeType":"FunctionDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"role","nameLocation":"1734:4:1","nodeType":"VariableDeclaration","scope":383,"src":"1726:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1726:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1725:14:1"},"returnParameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":383,"src":"1763:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1763:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1762:9:1"},"scope":408,"src":"1704:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"1778:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":391,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2031:9:1","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"role","nameLocation":"2049:4:1","nodeType":"VariableDeclaration","scope":391,"src":"2041:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2041:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"account","nameLocation":"2063:7:1","nodeType":"VariableDeclaration","scope":391,"src":"2055:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"2055:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2040:31:1"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"2080:0:1"},"scope":408,"src":"2022:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"2087:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":399,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2324:10:1","nodeType":"FunctionDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"role","nameLocation":"2343:4:1","nodeType":"VariableDeclaration","scope":399,"src":"2335:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2335:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"account","nameLocation":"2357:7:1","nodeType":"VariableDeclaration","scope":399,"src":"2349:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"2349:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2334:31:1"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[],"src":"2374:0:1"},"scope":408,"src":"2315:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":400,"nodeType":"StructuredDocumentation","src":"2381:480:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":407,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2875:12:1","nodeType":"FunctionDefinition","parameters":{"id":405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"role","nameLocation":"2896:4:1","nodeType":"VariableDeclaration","scope":407,"src":"2888:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":401,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2888:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":404,"mutability":"mutable","name":"account","nameLocation":"2910:7:1","nodeType":"VariableDeclaration","scope":407,"src":"2902:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":403,"name":"address","nodeType":"ElementaryTypeName","src":"2902:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2887:31:1"},"returnParameters":{"id":406,"nodeType":"ParameterList","parameters":[],"src":"2927:0:1"},"scope":408,"src":"2866:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":409,"src":"209:2721:1","usedErrors":[]}],"src":"94:2837:1"},"id":1},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3058],"ContextUpgradeable":[3100],"Initializable":[1074],"OwnableUpgradeable":[540]},"id":541,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":410,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":411,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":541,"sourceUnit":3101,"src":"127:41:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":412,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":541,"sourceUnit":1075,"src":"169:42:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":414,"name":"Initializable","nameLocations":["748:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"748:13:2"},"id":415,"nodeType":"InheritanceSpecifier","src":"748:13:2"},{"baseName":{"id":416,"name":"ContextUpgradeable","nameLocations":["763:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":3100,"src":"763:18:2"},"id":417,"nodeType":"InheritanceSpecifier","src":"763:18:2"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"213:494:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":540,"linearizedBaseContracts":[540,3100,1074],"name":"OwnableUpgradeable","nameLocation":"726:18:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":419,"mutability":"mutable","name":"_owner","nameLocation":"804:6:2","nodeType":"VariableDeclaration","scope":540,"src":"788:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":425,"name":"OwnershipTransferred","nameLocation":"823:20:2","nodeType":"EventDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"860:13:2","nodeType":"VariableDeclaration","scope":425,"src":"844:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":423,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"891:8:2","nodeType":"VariableDeclaration","scope":425,"src":"875:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"843:57:2"},"src":"817:84:2"},{"body":{"id":434,"nodeType":"Block","src":"1055:43:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":431,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"1065:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1065:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":433,"nodeType":"ExpressionStatement","src":"1065:26:2"}]},"documentation":{"id":426,"nodeType":"StructuredDocumentation","src":"907:91:2","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":435,"implemented":true,"kind":"function","modifiers":[{"id":429,"kind":"modifierInvocation","modifierName":{"id":428,"name":"onlyInitializing","nameLocations":["1038:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"1038:16:2"},"nodeType":"ModifierInvocation","src":"1038:16:2"}],"name":"__Ownable_init","nameLocation":"1012:14:2","nodeType":"FunctionDefinition","parameters":{"id":427,"nodeType":"ParameterList","parameters":[],"src":"1026:2:2"},"returnParameters":{"id":430,"nodeType":"ParameterList","parameters":[],"src":"1055:0:2"},"scope":540,"src":"1003:95:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":445,"nodeType":"Block","src":"1166:49:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":441,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"1195:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1195:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":440,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"1176:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1176:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":444,"nodeType":"ExpressionStatement","src":"1176:32:2"}]},"id":446,"implemented":true,"kind":"function","modifiers":[{"id":438,"kind":"modifierInvocation","modifierName":{"id":437,"name":"onlyInitializing","nameLocations":["1149:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"1149:16:2"},"nodeType":"ModifierInvocation","src":"1149:16:2"}],"name":"__Ownable_init_unchained","nameLocation":"1113:24:2","nodeType":"FunctionDefinition","parameters":{"id":436,"nodeType":"ParameterList","parameters":[],"src":"1137:2:2"},"returnParameters":{"id":439,"nodeType":"ParameterList","parameters":[],"src":"1166:0:2"},"scope":540,"src":"1104:111:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":453,"nodeType":"Block","src":"1324:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":449,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"1334:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1334:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":451,"nodeType":"ExpressionStatement","src":"1334:13:2"},{"id":452,"nodeType":"PlaceholderStatement","src":"1357:1:2"}]},"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"1221:77:2","text":" @dev Throws if called by any account other than the owner."},"id":454,"name":"onlyOwner","nameLocation":"1312:9:2","nodeType":"ModifierDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[],"src":"1321:2:2"},"src":"1303:62:2","virtual":false,"visibility":"internal"},{"body":{"id":462,"nodeType":"Block","src":"1496:30:2","statements":[{"expression":{"id":460,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"1513:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":459,"id":461,"nodeType":"Return","src":"1506:13:2"}]},"documentation":{"id":455,"nodeType":"StructuredDocumentation","src":"1371:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":463,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1450:5:2","nodeType":"FunctionDefinition","parameters":{"id":456,"nodeType":"ParameterList","parameters":[],"src":"1455:2:2"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":463,"src":"1487:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":457,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1486:9:2"},"scope":540,"src":"1441:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":476,"nodeType":"Block","src":"1644:85:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":468,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"1662:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1662:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":470,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"1673:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1673:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1662:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1687:34:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":467,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1654:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1654:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"ExpressionStatement","src":"1654:68:2"}]},"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"1532:62:2","text":" @dev Throws if the sender is not the owner."},"id":477,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1608:11:2","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"1619:2:2"},"returnParameters":{"id":466,"nodeType":"ParameterList","parameters":[],"src":"1644:0:2"},"scope":540,"src":"1599:130:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":490,"nodeType":"Block","src":"2118:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2147:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"2147:7:2","typeDescriptions":{}}},"id":487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2147:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":483,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"2128:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2128:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"ExpressionStatement","src":"2128:30:2"}]},"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"1735:324:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":491,"implemented":true,"kind":"function","modifiers":[{"id":481,"kind":"modifierInvocation","modifierName":{"id":480,"name":"onlyOwner","nameLocations":["2108:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":454,"src":"2108:9:2"},"nodeType":"ModifierInvocation","src":"2108:9:2"}],"name":"renounceOwnership","nameLocation":"2073:17:2","nodeType":"FunctionDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[],"src":"2090:2:2"},"returnParameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"2118:0:2"},"scope":540,"src":"2064:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":513,"nodeType":"Block","src":"2384:128:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":500,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"2402:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2422:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2414:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":501,"name":"address","nodeType":"ElementaryTypeName","src":"2414:7:2","typeDescriptions":{}}},"id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2414:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2402:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2426:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":499,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2394:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2394:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":508,"nodeType":"ExpressionStatement","src":"2394:73:2"},{"expression":{"arguments":[{"id":510,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"2496:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":509,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"2477:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2477:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":512,"nodeType":"ExpressionStatement","src":"2477:28:2"}]},"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"2171:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":514,"implemented":true,"kind":"function","modifiers":[{"id":497,"kind":"modifierInvocation","modifierName":{"id":496,"name":"onlyOwner","nameLocations":["2374:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":454,"src":"2374:9:2"},"nodeType":"ModifierInvocation","src":"2374:9:2"}],"name":"transferOwnership","nameLocation":"2323:17:2","nodeType":"FunctionDefinition","parameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"newOwner","nameLocation":"2349:8:2","nodeType":"VariableDeclaration","scope":514,"src":"2341:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2340:18:2"},"returnParameters":{"id":498,"nodeType":"ParameterList","parameters":[],"src":"2384:0:2"},"scope":540,"src":"2314:198:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":533,"nodeType":"Block","src":"2729:124:2","statements":[{"assignments":[521],"declarations":[{"constant":false,"id":521,"mutability":"mutable","name":"oldOwner","nameLocation":"2747:8:2","nodeType":"VariableDeclaration","scope":533,"src":"2739:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":520,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":523,"initialValue":{"id":522,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"2758:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2739:25:2"},{"expression":{"id":526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":524,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"2774:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":525,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"2783:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2774:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":527,"nodeType":"ExpressionStatement","src":"2774:17:2"},{"eventCall":{"arguments":[{"id":529,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"2827:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":530,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"2837:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":528,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"2806:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2806:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":532,"nodeType":"EmitStatement","src":"2801:45:2"}]},"documentation":{"id":515,"nodeType":"StructuredDocumentation","src":"2518:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":534,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2675:18:2","nodeType":"FunctionDefinition","parameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"newOwner","nameLocation":"2702:8:2","nodeType":"VariableDeclaration","scope":534,"src":"2694:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"2694:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2693:18:2"},"returnParameters":{"id":519,"nodeType":"ParameterList","parameters":[],"src":"2729:0:2"},"scope":540,"src":"2666:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"2859:254:2","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":539,"mutability":"mutable","name":"__gap","nameLocation":"3138:5:2","nodeType":"VariableDeclaration","scope":540,"src":"3118:25:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":536,"name":"uint256","nodeType":"ElementaryTypeName","src":"3118:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":538,"length":{"hexValue":"3439","id":537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3126:2:2","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3118:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":541,"src":"708:2438:2","usedErrors":[]}],"src":"102:3045:2"},"id":2},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol","exportedSymbols":{"IERC1967Upgradeable":[561]},"id":562,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":542,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"132:133:3","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"},"fullyImplemented":true,"id":561,"linearizedBaseContracts":[561],"name":"IERC1967Upgradeable","nameLocation":"276:19:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":544,"nodeType":"StructuredDocumentation","src":"302:68:3","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":548,"name":"Upgraded","nameLocation":"381:8:3","nodeType":"EventDefinition","parameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"406:14:3","nodeType":"VariableDeclaration","scope":548,"src":"390:30:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":545,"name":"address","nodeType":"ElementaryTypeName","src":"390:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"389:32:3"},"src":"375:47:3"},{"anonymous":false,"documentation":{"id":549,"nodeType":"StructuredDocumentation","src":"428:67:3","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":555,"name":"AdminChanged","nameLocation":"506:12:3","nodeType":"EventDefinition","parameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"527:13:3","nodeType":"VariableDeclaration","scope":555,"src":"519:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":550,"name":"address","nodeType":"ElementaryTypeName","src":"519:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":553,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"550:8:3","nodeType":"VariableDeclaration","scope":555,"src":"542:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"542:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"518:41:3"},"src":"500:60:3"},{"anonymous":false,"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"566:59:3","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":560,"name":"BeaconUpgraded","nameLocation":"636:14:3","nodeType":"EventDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"667:6:3","nodeType":"VariableDeclaration","scope":560,"src":"651:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"651:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"650:24:3"},"src":"630:45:3"}],"scope":562,"src":"266:411:3","usedErrors":[]}],"src":"107:571:3"},"id":3},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","exportedSymbols":{"IERC1822ProxiableUpgradeable":[571]},"id":572,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":563,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822ProxiableUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"138:203:4","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":571,"linearizedBaseContracts":[571],"name":"IERC1822ProxiableUpgradeable","nameLocation":"352:28:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":565,"nodeType":"StructuredDocumentation","src":"387:438:4","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":570,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"839:13:4","nodeType":"FunctionDefinition","parameters":{"id":566,"nodeType":"ParameterList","parameters":[],"src":"852:2:4"},"returnParameters":{"id":569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":570,"src":"878:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":567,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:9:4"},"scope":571,"src":"830:57:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":572,"src":"342:547:4","usedErrors":[]}],"src":"113:777:4"},"id":4},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3058],"ERC1967UpgradeUpgradeable":[895],"IBeaconUpgradeable":[905],"IERC1822ProxiableUpgradeable":[571],"IERC1967Upgradeable":[561],"Initializable":[1074],"StorageSlotUpgradeable":[3284]},"id":896,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":573,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","file":"../beacon/IBeaconUpgradeable.sol","id":574,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":896,"sourceUnit":906,"src":"141:42:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol","file":"../../interfaces/IERC1967Upgradeable.sol","id":575,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":896,"sourceUnit":562,"src":"184:50:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":576,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":896,"sourceUnit":572,"src":"235:56:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":577,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":896,"sourceUnit":3059,"src":"292:44:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","file":"../../utils/StorageSlotUpgradeable.sol","id":578,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":896,"sourceUnit":3285,"src":"337:48:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../utils/Initializable.sol","id":579,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":896,"sourceUnit":1075,"src":"386:36:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":581,"name":"Initializable","nameLocations":["656:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"656:13:5"},"id":582,"nodeType":"InheritanceSpecifier","src":"656:13:5"},{"baseName":{"id":583,"name":"IERC1967Upgradeable","nameLocations":["671:19:5"],"nodeType":"IdentifierPath","referencedDeclaration":561,"src":"671:19:5"},"id":584,"nodeType":"InheritanceSpecifier","src":"671:19:5"}],"canonicalName":"ERC1967UpgradeUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"424:184:5","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"},"fullyImplemented":true,"id":895,"linearizedBaseContracts":[895,561,1074],"name":"ERC1967UpgradeUpgradeable","nameLocation":"627:25:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":589,"nodeType":"Block","src":"756:7:5","statements":[]},"id":590,"implemented":true,"kind":"function","modifiers":[{"id":587,"kind":"modifierInvocation","modifierName":{"id":586,"name":"onlyInitializing","nameLocations":["739:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"739:16:5"},"nodeType":"ModifierInvocation","src":"739:16:5"}],"name":"__ERC1967Upgrade_init","nameLocation":"706:21:5","nodeType":"FunctionDefinition","parameters":{"id":585,"nodeType":"ParameterList","parameters":[],"src":"727:2:5"},"returnParameters":{"id":588,"nodeType":"ParameterList","parameters":[],"src":"756:0:5"},"scope":895,"src":"697:66:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":595,"nodeType":"Block","src":"838:7:5","statements":[]},"id":596,"implemented":true,"kind":"function","modifiers":[{"id":593,"kind":"modifierInvocation","modifierName":{"id":592,"name":"onlyInitializing","nameLocations":["821:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"821:16:5"},"nodeType":"ModifierInvocation","src":"821:16:5"}],"name":"__ERC1967Upgrade_init_unchained","nameLocation":"778:31:5","nodeType":"FunctionDefinition","parameters":{"id":591,"nodeType":"ParameterList","parameters":[],"src":"809:2:5"},"returnParameters":{"id":594,"nodeType":"ParameterList","parameters":[],"src":"838:0:5"},"scope":895,"src":"769:76:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"id":599,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"954:14:5","nodeType":"VariableDeclaration","scope":895,"src":"929:108:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"929:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"971:66:5","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":600,"nodeType":"StructuredDocumentation","src":"1044:214:5","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":603,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1289:20:5","nodeType":"VariableDeclaration","scope":895,"src":"1263:115:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":601,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1312:66:5","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"body":{"id":615,"nodeType":"Block","src":"1519:89:5","statements":[{"expression":{"expression":{"arguments":[{"id":611,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"1574:20:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":609,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"1536:22:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$3284_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1559:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3206,"src":"1536:37:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3180_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1536:59:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3180_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1596:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3179,"src":"1536:65:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":608,"id":614,"nodeType":"Return","src":"1529:72:5"}]},"documentation":{"id":604,"nodeType":"StructuredDocumentation","src":"1385:67:5","text":" @dev Returns the current implementation address."},"id":616,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1466:18:5","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[],"src":"1484:2:5"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":616,"src":"1510:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"1510:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1509:9:5"},"scope":895,"src":"1457:151:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":639,"nodeType":"Block","src":"1762:218:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":625,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"1810:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":623,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"1780:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$3058_$","typeString":"type(library AddressUpgradeable)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1799:10:5","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2746,"src":"1780:29:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1780:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1830:47:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":622,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1772:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1772:106:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":629,"nodeType":"ExpressionStatement","src":"1772:106:5"},{"expression":{"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":633,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"1926:20:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":630,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"1888:22:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$3284_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1911:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3206,"src":"1888:37:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3180_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:59:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3180_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1948:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3179,"src":"1888:65:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":636,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"1956:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1888:85:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":638,"nodeType":"ExpressionStatement","src":"1888:85:5"}]},"documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"1614:80:5","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":640,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1708:18:5","nodeType":"FunctionDefinition","parameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"newImplementation","nameLocation":"1735:17:5","nodeType":"VariableDeclaration","scope":640,"src":"1727:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":618,"name":"address","nodeType":"ElementaryTypeName","src":"1727:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1726:27:5"},"returnParameters":{"id":621,"nodeType":"ParameterList","parameters":[],"src":"1762:0:5"},"scope":895,"src":"1699:281:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":654,"nodeType":"Block","src":"2142:96:5","statements":[{"expression":{"arguments":[{"id":647,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"2171:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":646,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"2152:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2152:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":649,"nodeType":"ExpressionStatement","src":"2152:37:5"},{"eventCall":{"arguments":[{"id":651,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"2213:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":650,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"2204:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2204:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"EmitStatement","src":"2199:32:5"}]},"documentation":{"id":641,"nodeType":"StructuredDocumentation","src":"1986:95:5","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":655,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"2095:10:5","nodeType":"FunctionDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":643,"mutability":"mutable","name":"newImplementation","nameLocation":"2114:17:5","nodeType":"VariableDeclaration","scope":655,"src":"2106:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":642,"name":"address","nodeType":"ElementaryTypeName","src":"2106:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2105:27:5"},"returnParameters":{"id":645,"nodeType":"ParameterList","parameters":[],"src":"2142:0:5"},"scope":895,"src":"2086:152:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":684,"nodeType":"Block","src":"2470:178:5","statements":[{"expression":{"arguments":[{"id":666,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2491:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":665,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"2480:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2480:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":668,"nodeType":"ExpressionStatement","src":"2480:29:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":669,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"2523:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2528:6:5","memberName":"length","nodeType":"MemberAccess","src":"2523:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2537:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2523:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":673,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"2542:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2523:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":683,"nodeType":"IfStatement","src":"2519:123:5","trueBody":{"id":682,"nodeType":"Block","src":"2553:89:5","statements":[{"expression":{"arguments":[{"id":678,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2607:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":679,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"2626:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":675,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"2567:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$3058_$","typeString":"type(library AddressUpgradeable)"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2586:20:5","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2945,"src":"2567:39:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:64:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":681,"nodeType":"ExpressionStatement","src":"2567:64:5"}]}}]},"documentation":{"id":656,"nodeType":"StructuredDocumentation","src":"2244:123:5","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":685,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2381:17:5","nodeType":"FunctionDefinition","parameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"mutability":"mutable","name":"newImplementation","nameLocation":"2407:17:5","nodeType":"VariableDeclaration","scope":685,"src":"2399:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":657,"name":"address","nodeType":"ElementaryTypeName","src":"2399:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":660,"mutability":"mutable","name":"data","nameLocation":"2439:4:5","nodeType":"VariableDeclaration","scope":685,"src":"2426:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":659,"name":"bytes","nodeType":"ElementaryTypeName","src":"2426:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":662,"mutability":"mutable","name":"forceCall","nameLocation":"2450:9:5","nodeType":"VariableDeclaration","scope":685,"src":"2445:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":661,"name":"bool","nodeType":"ElementaryTypeName","src":"2445:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2398:62:5"},"returnParameters":{"id":664,"nodeType":"ParameterList","parameters":[],"src":"2470:0:5"},"scope":895,"src":"2372:276:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":737,"nodeType":"Block","src":"2922:842:5","statements":[{"condition":{"expression":{"arguments":[{"id":697,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"3274:14:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":695,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"3236:22:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$3284_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3259:14:5","memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":3217,"src":"3236:37:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$3183_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3236:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3183_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot storage pointer"}},"id":699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3290:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3182,"src":"3236:59:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":735,"nodeType":"Block","src":"3365:393:5","statements":[{"clauses":[{"block":{"id":720,"nodeType":"Block","src":"3470:115:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":714,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"3496:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":715,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"3504:20:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3496:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3526:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":713,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3488:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3488:82:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":719,"nodeType":"ExpressionStatement","src":"3488:82:5"}]},"errorName":"","id":721,"nodeType":"TryCatchClause","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"slot","nameLocation":"3464:4:5","nodeType":"VariableDeclaration","scope":721,"src":"3456:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3456:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3455:14:5"},"src":"3447:138:5"},{"block":{"id":726,"nodeType":"Block","src":"3592:89:5","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3617:48:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":722,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3610:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3610:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":725,"nodeType":"ExpressionStatement","src":"3610:56:5"}]},"errorName":"","id":727,"nodeType":"TryCatchClause","src":"3586:95:5"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":706,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"3412:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":705,"name":"IERC1822ProxiableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"3383:28:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822ProxiableUpgradeable_$571_$","typeString":"type(contract IERC1822ProxiableUpgradeable)"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3383:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822ProxiableUpgradeable_$571","typeString":"contract IERC1822ProxiableUpgradeable"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3431:13:5","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":570,"src":"3383:61:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3383:63:5","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":728,"nodeType":"TryStatement","src":"3379:302:5"},{"expression":{"arguments":[{"id":730,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"3712:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":731,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"3731:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":732,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"3737:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":729,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"3694:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3694:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":734,"nodeType":"ExpressionStatement","src":"3694:53:5"}]},"id":736,"nodeType":"IfStatement","src":"3232:526:5","trueBody":{"id":704,"nodeType":"Block","src":"3297:62:5","statements":[{"expression":{"arguments":[{"id":701,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"3330:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":700,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"3311:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3311:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":703,"nodeType":"ExpressionStatement","src":"3311:37:5"}]}}]},"documentation":{"id":686,"nodeType":"StructuredDocumentation","src":"2654:161:5","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":738,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2829:21:5","nodeType":"FunctionDefinition","parameters":{"id":693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":688,"mutability":"mutable","name":"newImplementation","nameLocation":"2859:17:5","nodeType":"VariableDeclaration","scope":738,"src":"2851:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":687,"name":"address","nodeType":"ElementaryTypeName","src":"2851:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":690,"mutability":"mutable","name":"data","nameLocation":"2891:4:5","nodeType":"VariableDeclaration","scope":738,"src":"2878:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":689,"name":"bytes","nodeType":"ElementaryTypeName","src":"2878:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":692,"mutability":"mutable","name":"forceCall","nameLocation":"2902:9:5","nodeType":"VariableDeclaration","scope":738,"src":"2897:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":691,"name":"bool","nodeType":"ElementaryTypeName","src":"2897:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2850:62:5"},"returnParameters":{"id":694,"nodeType":"ParameterList","parameters":[],"src":"2922:0:5"},"scope":895,"src":"2820:944:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":739,"nodeType":"StructuredDocumentation","src":"3770:189:5","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":742,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"3990:11:5","nodeType":"VariableDeclaration","scope":895,"src":"3964:106:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3964:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4004:66:5","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":754,"nodeType":"Block","src":"4185:80:5","statements":[{"expression":{"expression":{"arguments":[{"id":750,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"4240:11:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":748,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"4202:22:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$3284_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4225:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3206,"src":"4202:37:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3180_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4202:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3180_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4253:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3179,"src":"4202:56:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":747,"id":753,"nodeType":"Return","src":"4195:63:5"}]},"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"4077:50:5","text":" @dev Returns the current admin."},"id":755,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"4141:9:5","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"4150:2:5"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":755,"src":"4176:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"4176:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4175:9:5"},"scope":895,"src":"4132:133:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":780,"nodeType":"Block","src":"4392:167:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":762,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"4410:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4430:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4422:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"4422:7:5","typeDescriptions":{}}},"id":766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4422:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4410:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4434:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":761,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4402:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4402:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":770,"nodeType":"ExpressionStatement","src":"4402:73:5"},{"expression":{"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":774,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"4523:11:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":771,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"4485:22:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$3284_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4508:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3206,"src":"4485:37:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3180_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3180_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":776,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4536:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3179,"src":"4485:56:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":777,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"4544:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4485:67:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":779,"nodeType":"ExpressionStatement","src":"4485:67:5"}]},"documentation":{"id":756,"nodeType":"StructuredDocumentation","src":"4271:71:5","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":781,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4356:9:5","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"mutability":"mutable","name":"newAdmin","nameLocation":"4374:8:5","nodeType":"VariableDeclaration","scope":781,"src":"4366:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":757,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4365:18:5"},"returnParameters":{"id":760,"nodeType":"ParameterList","parameters":[],"src":"4392:0:5"},"scope":895,"src":"4347:212:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":797,"nodeType":"Block","src":"4719:86:5","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":788,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"4747:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":790,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"4760:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":787,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"4734:12:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4734:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":792,"nodeType":"EmitStatement","src":"4729:40:5"},{"expression":{"arguments":[{"id":794,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"4789:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":793,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"4779:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4779:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":796,"nodeType":"ExpressionStatement","src":"4779:19:5"}]},"documentation":{"id":782,"nodeType":"StructuredDocumentation","src":"4565:100:5","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":798,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4679:12:5","nodeType":"FunctionDefinition","parameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"mutability":"mutable","name":"newAdmin","nameLocation":"4700:8:5","nodeType":"VariableDeclaration","scope":798,"src":"4692:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"4692:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4691:18:5"},"returnParameters":{"id":786,"nodeType":"ParameterList","parameters":[],"src":"4719:0:5"},"scope":895,"src":"4670:135:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"4811:232:5","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":802,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"5074:12:5","nodeType":"VariableDeclaration","scope":895,"src":"5048:107:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5048:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5089:66:5","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":814,"nodeType":"Block","src":"5272:81:5","statements":[{"expression":{"expression":{"arguments":[{"id":810,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"5327:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":808,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"5289:22:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$3284_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5312:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3206,"src":"5289:37:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3180_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5289:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3180_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5341:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3179,"src":"5289:57:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":807,"id":813,"nodeType":"Return","src":"5282:64:5"}]},"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"5162:51:5","text":" @dev Returns the current beacon."},"id":815,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"5227:10:5","nodeType":"FunctionDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[],"src":"5237:2:5"},"returnParameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":815,"src":"5263:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"5263:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5262:9:5"},"scope":895,"src":"5218:135:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":850,"nodeType":"Block","src":"5482:368:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":824,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"5530:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":822,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"5500:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$3058_$","typeString":"type(library AddressUpgradeable)"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5519:10:5","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2746,"src":"5500:29:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5500:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5542:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":821,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5492:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5492:90:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":828,"nodeType":"ExpressionStatement","src":"5492:90:5"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":833,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"5662:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":832,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"5643:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$905_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$905","typeString":"contract IBeaconUpgradeable"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5673:14:5","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":904,"src":"5643:44:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":830,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"5613:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$3058_$","typeString":"type(library AddressUpgradeable)"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5632:10:5","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2746,"src":"5613:29:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5613:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5704:50:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":829,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5592:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5592:172:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":840,"nodeType":"ExpressionStatement","src":"5592:172:5"},{"expression":{"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":844,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"5812:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":841,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"5774:22:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$3284_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5797:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3206,"src":"5774:37:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3180_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5774:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3180_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":846,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5826:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3179,"src":"5774:57:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":847,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"5834:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5774:69:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":849,"nodeType":"ExpressionStatement","src":"5774:69:5"}]},"documentation":{"id":816,"nodeType":"StructuredDocumentation","src":"5359:71:5","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":851,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5444:10:5","nodeType":"FunctionDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"newBeacon","nameLocation":"5463:9:5","nodeType":"VariableDeclaration","scope":851,"src":"5455:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":817,"name":"address","nodeType":"ElementaryTypeName","src":"5455:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5454:19:5"},"returnParameters":{"id":820,"nodeType":"ParameterList","parameters":[],"src":"5482:0:5"},"scope":895,"src":"5435:415:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":888,"nodeType":"Block","src":"6249:239:5","statements":[{"expression":{"arguments":[{"id":862,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"6270:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":861,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"6259:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6259:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":864,"nodeType":"ExpressionStatement","src":"6259:21:5"},{"eventCall":{"arguments":[{"id":866,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"6310:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":865,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"6295:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6295:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":868,"nodeType":"EmitStatement","src":"6290:30:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":869,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"6334:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6339:6:5","memberName":"length","nodeType":"MemberAccess","src":"6334:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6348:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6334:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":873,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"6353:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6334:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":887,"nodeType":"IfStatement","src":"6330:152:5","trueBody":{"id":886,"nodeType":"Block","src":"6364:118:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":879,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"6437:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":878,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"6418:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$905_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6418:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$905","typeString":"contract IBeaconUpgradeable"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6448:14:5","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":904,"src":"6418:44:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6418:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":883,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"6466:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":875,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"6378:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$3058_$","typeString":"type(library AddressUpgradeable)"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:20:5","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2945,"src":"6378:39:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6378:93:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":885,"nodeType":"ExpressionStatement","src":"6378:93:5"}]}}]},"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"5856:292:5","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":889,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"6162:23:5","nodeType":"FunctionDefinition","parameters":{"id":859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"newBeacon","nameLocation":"6194:9:5","nodeType":"VariableDeclaration","scope":889,"src":"6186:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"6186:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"data","nameLocation":"6218:4:5","nodeType":"VariableDeclaration","scope":889,"src":"6205:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":855,"name":"bytes","nodeType":"ElementaryTypeName","src":"6205:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":858,"mutability":"mutable","name":"forceCall","nameLocation":"6229:9:5","nodeType":"VariableDeclaration","scope":889,"src":"6224:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":857,"name":"bool","nodeType":"ElementaryTypeName","src":"6224:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6185:54:5"},"returnParameters":{"id":860,"nodeType":"ParameterList","parameters":[],"src":"6249:0:5"},"scope":895,"src":"6153:335:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"6494:254:5","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":894,"mutability":"mutable","name":"__gap","nameLocation":"6773:5:5","nodeType":"VariableDeclaration","scope":895,"src":"6753:25:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":891,"name":"uint256","nodeType":"ElementaryTypeName","src":"6753:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":893,"length":{"hexValue":"3530","id":892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6761:2:5","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"6753:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":896,"src":"609:6172:5","usedErrors":[]}],"src":"116:6666:5"},"id":5},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","exportedSymbols":{"IBeaconUpgradeable":[905]},"id":906,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":897,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeaconUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":898,"nodeType":"StructuredDocumentation","src":"118:79:6","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":905,"linearizedBaseContracts":[905],"name":"IBeaconUpgradeable","nameLocation":"208:18:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":899,"nodeType":"StructuredDocumentation","src":"233:162:6","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":904,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"409:14:6","nodeType":"FunctionDefinition","parameters":{"id":900,"nodeType":"ParameterList","parameters":[],"src":"423:2:6"},"returnParameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":904,"src":"449:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"449:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"448:9:6"},"scope":905,"src":"400:58:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":906,"src":"198:262:6","usedErrors":[]}],"src":"93:368:6"},"id":6},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[3058],"Initializable":[1074]},"id":1075,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":907,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":908,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1075,"sourceUnit":3059,"src":"138:44:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":909,"nodeType":"StructuredDocumentation","src":"184:2209:7","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":1074,"linearizedBaseContracts":[1074],"name":"Initializable","nameLocation":"2412:13:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":910,"nodeType":"StructuredDocumentation","src":"2432:109:7","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":912,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:7","nodeType":"VariableDeclaration","scope":1074,"src":"2546:26:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":911,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"2579:91:7","text":" @dev Indicates that the contract is in the process of being initialized."},"id":915,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:7","nodeType":"VariableDeclaration","scope":1074,"src":"2675:26:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":914,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":916,"nodeType":"StructuredDocumentation","src":"2708:90:7","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":920,"name":"Initialized","nameLocation":"2809:11:7","nodeType":"EventDefinition","parameters":{"id":919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:7","nodeType":"VariableDeclaration","scope":920,"src":"2821:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":917,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:7"},"src":"2803:33:7"},{"body":{"id":975,"nodeType":"Block","src":"3269:483:7","statements":[{"assignments":[924],"declarations":[{"constant":false,"id":924,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:7","nodeType":"VariableDeclaration","scope":975,"src":"3279:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":923,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":927,"initialValue":{"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:7","subExpression":{"id":925,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"3302:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":929,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"3347:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":930,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"3365:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":934,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:7","subExpression":{"arguments":[{"arguments":[{"id":939,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$1074","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$1074","typeString":"contract Initializable"}],"id":938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:7","typeDescriptions":{}}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":935,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"3388:18:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$3058_$","typeString":"type(library AddressUpgradeable)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:7","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2746,"src":"3388:29:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":943,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"3436:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":928,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":951,"nodeType":"ExpressionStatement","src":"3325:201:7"},{"expression":{"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":952,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"3536:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":955,"nodeType":"ExpressionStatement","src":"3536:16:7"},{"condition":{"id":956,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"3566:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":962,"nodeType":"IfStatement","src":"3562:65:7","trueBody":{"id":961,"nodeType":"Block","src":"3582:45:7","statements":[{"expression":{"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":957,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"3596:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":960,"nodeType":"ExpressionStatement","src":"3596:20:7"}]}},{"id":963,"nodeType":"PlaceholderStatement","src":"3636:1:7"},{"condition":{"id":964,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"3651:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":974,"nodeType":"IfStatement","src":"3647:99:7","trueBody":{"id":973,"nodeType":"Block","src":"3667:79:7","statements":[{"expression":{"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":965,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"3681:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":968,"nodeType":"ExpressionStatement","src":"3681:21:7"},{"eventCall":{"arguments":[{"hexValue":"31","id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":969,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"3721:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":972,"nodeType":"EmitStatement","src":"3716:19:7"}]}}]},"documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"2842:399:7","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":976,"name":"initializer","nameLocation":"3255:11:7","nodeType":"ModifierDefinition","parameters":{"id":922,"nodeType":"ParameterList","parameters":[],"src":"3266:2:7"},"src":"3246:506:7","virtual":false,"visibility":"internal"},{"body":{"id":1008,"nodeType":"Block","src":"4863:255:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:7","subExpression":{"id":982,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"4882:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":984,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"4899:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":985,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"4914:7:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":981,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":990,"nodeType":"ExpressionStatement","src":"4873:99:7"},{"expression":{"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":991,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"4982:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":992,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"4997:7:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":994,"nodeType":"ExpressionStatement","src":"4982:22:7"},{"expression":{"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":995,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"5014:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":998,"nodeType":"ExpressionStatement","src":"5014:20:7"},{"id":999,"nodeType":"PlaceholderStatement","src":"5044:1:7"},{"expression":{"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1000,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"5055:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1003,"nodeType":"ExpressionStatement","src":"5055:21:7"},{"eventCall":{"arguments":[{"id":1005,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"5103:7:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1004,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"5091:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1007,"nodeType":"EmitStatement","src":"5086:25:7"}]},"documentation":{"id":977,"nodeType":"StructuredDocumentation","src":"3758:1062:7","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":1009,"name":"reinitializer","nameLocation":"4834:13:7","nodeType":"ModifierDefinition","parameters":{"id":980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"mutability":"mutable","name":"version","nameLocation":"4854:7:7","nodeType":"VariableDeclaration","scope":1009,"src":"4848:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":978,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:7"},"src":"4825:293:7","virtual":false,"visibility":"internal"},{"body":{"id":1018,"nodeType":"Block","src":"5356:97:7","statements":[{"expression":{"arguments":[{"id":1013,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"5374:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":1014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":1012,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1016,"nodeType":"ExpressionStatement","src":"5366:69:7"},{"id":1017,"nodeType":"PlaceholderStatement","src":"5445:1:7"}]},"documentation":{"id":1010,"nodeType":"StructuredDocumentation","src":"5124:199:7","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":1019,"name":"onlyInitializing","nameLocation":"5337:16:7","nodeType":"ModifierDefinition","parameters":{"id":1011,"nodeType":"ParameterList","parameters":[],"src":"5353:2:7"},"src":"5328:125:7","virtual":false,"visibility":"internal"},{"body":{"id":1054,"nodeType":"Block","src":"5988:231:7","statements":[{"expression":{"arguments":[{"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:7","subExpression":{"id":1024,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"6007:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":1023,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1028,"nodeType":"ExpressionStatement","src":"5998:66:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1029,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"6078:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1031,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1030,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:7","memberName":"max","nodeType":"MemberAccess","src":"6094:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1053,"nodeType":"IfStatement","src":"6074:139:7","trueBody":{"id":1052,"nodeType":"Block","src":"6111:102:7","statements":[{"expression":{"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1036,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"6125:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":1039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1038,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1037,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:7","memberName":"max","nodeType":"MemberAccess","src":"6140:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1043,"nodeType":"ExpressionStatement","src":"6125:30:7"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":1047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1046,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1045,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:7","memberName":"max","nodeType":"MemberAccess","src":"6186:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1044,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"6174:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1051,"nodeType":"EmitStatement","src":"6169:33:7"}]}}]},"documentation":{"id":1020,"nodeType":"StructuredDocumentation","src":"5459:475:7","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":1055,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:7","nodeType":"FunctionDefinition","parameters":{"id":1021,"nodeType":"ParameterList","parameters":[],"src":"5968:2:7"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[],"src":"5988:0:7"},"scope":1074,"src":"5939:280:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1063,"nodeType":"Block","src":"6393:36:7","statements":[{"expression":{"id":1061,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"6410:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1060,"id":1062,"nodeType":"Return","src":"6403:19:7"}]},"documentation":{"id":1056,"nodeType":"StructuredDocumentation","src":"6225:99:7","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":1064,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:7","nodeType":"FunctionDefinition","parameters":{"id":1057,"nodeType":"ParameterList","parameters":[],"src":"6360:2:7"},"returnParameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1064,"src":"6386:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1058,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:7"},"scope":1074,"src":"6329:100:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1072,"nodeType":"Block","src":"6601:37:7","statements":[{"expression":{"id":1070,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"6618:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1069,"id":1071,"nodeType":"Return","src":"6611:20:7"}]},"documentation":{"id":1065,"nodeType":"StructuredDocumentation","src":"6435:105:7","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":1073,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:7","nodeType":"FunctionDefinition","parameters":{"id":1066,"nodeType":"ParameterList","parameters":[],"src":"6569:2:7"},"returnParameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1073,"src":"6595:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1067,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:7"},"scope":1074,"src":"6545:93:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1075,"src":"2394:4246:7","usedErrors":[]}],"src":"113:6528:7"},"id":7},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3058],"ERC1967UpgradeUpgradeable":[895],"IBeaconUpgradeable":[905],"IERC1822ProxiableUpgradeable":[571],"IERC1967Upgradeable":[561],"Initializable":[1074],"StorageSlotUpgradeable":[3284],"UUPSUpgradeable":[1210]},"id":1211,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1076,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:8"},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":1077,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1211,"sourceUnit":572,"src":"140:56:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","file":"../ERC1967/ERC1967UpgradeUpgradeable.sol","id":1078,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1211,"sourceUnit":896,"src":"197:50:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":1079,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1211,"sourceUnit":1075,"src":"248:29:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1081,"name":"Initializable","nameLocations":["965:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"965:13:8"},"id":1082,"nodeType":"InheritanceSpecifier","src":"965:13:8"},{"baseName":{"id":1083,"name":"IERC1822ProxiableUpgradeable","nameLocations":["980:28:8"],"nodeType":"IdentifierPath","referencedDeclaration":571,"src":"980:28:8"},"id":1084,"nodeType":"InheritanceSpecifier","src":"980:28:8"},{"baseName":{"id":1085,"name":"ERC1967UpgradeUpgradeable","nameLocations":["1010:25:8"],"nodeType":"IdentifierPath","referencedDeclaration":895,"src":"1010:25:8"},"id":1086,"nodeType":"InheritanceSpecifier","src":"1010:25:8"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"279:648:8","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"},"fullyImplemented":false,"id":1210,"linearizedBaseContracts":[1210,895,561,571,1074],"name":"UUPSUpgradeable","nameLocation":"946:15:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1091,"nodeType":"Block","src":"1102:7:8","statements":[]},"id":1092,"implemented":true,"kind":"function","modifiers":[{"id":1089,"kind":"modifierInvocation","modifierName":{"id":1088,"name":"onlyInitializing","nameLocations":["1085:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"1085:16:8"},"nodeType":"ModifierInvocation","src":"1085:16:8"}],"name":"__UUPSUpgradeable_init","nameLocation":"1051:22:8","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[],"src":"1073:2:8"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[],"src":"1102:0:8"},"scope":1210,"src":"1042:67:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1097,"nodeType":"Block","src":"1185:7:8","statements":[]},"id":1098,"implemented":true,"kind":"function","modifiers":[{"id":1095,"kind":"modifierInvocation","modifierName":{"id":1094,"name":"onlyInitializing","nameLocations":["1168:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"1168:16:8"},"nodeType":"ModifierInvocation","src":"1168:16:8"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"1124:32:8","nodeType":"FunctionDefinition","parameters":{"id":1093,"nodeType":"ParameterList","parameters":[],"src":"1156:2:8"},"returnParameters":{"id":1096,"nodeType":"ParameterList","parameters":[],"src":"1185:0:8"},"scope":1210,"src":"1115:77:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":1099,"nodeType":"StructuredDocumentation","src":"1197:87:8","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"id":1105,"mutability":"immutable","name":"__self","nameLocation":"1315:6:8","nodeType":"VariableDeclaration","scope":1210,"src":"1289:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":1103,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1332:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1210","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1210","typeString":"contract UUPSUpgradeable"}],"id":1102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1324:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1101,"name":"address","nodeType":"ElementaryTypeName","src":"1324:7:8","typeDescriptions":{}}},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1324:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":1127,"nodeType":"Block","src":"1863:205:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1111,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1889:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1210","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1210","typeString":"contract UUPSUpgradeable"}],"id":1110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1881:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1109,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:8","typeDescriptions":{}}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1881:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1113,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"1898:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1881:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:46:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""},"value":"Function must be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""}],"id":1108,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1873:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1873:80:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1117,"nodeType":"ExpressionStatement","src":"1873:80:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1119,"name":"_getImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"1971:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1971:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1121,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"1995:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1971:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879","id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2003:46:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""},"value":"Function must be called through active proxy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""}],"id":1118,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1963:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1963:87:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1125,"nodeType":"ExpressionStatement","src":"1963:87:8"},{"id":1126,"nodeType":"PlaceholderStatement","src":"2060:1:8"}]},"documentation":{"id":1106,"nodeType":"StructuredDocumentation","src":"1344:493:8","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":1128,"name":"onlyProxy","nameLocation":"1851:9:8","nodeType":"ModifierDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[],"src":"1860:2:8"},"src":"1842:226:8","virtual":false,"visibility":"internal"},{"body":{"id":1142,"nodeType":"Block","src":"2298:120:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1134,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2324:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1210","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1210","typeString":"contract UUPSUpgradeable"}],"id":1133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2316:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:8","typeDescriptions":{}}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1136,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"2333:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2316:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2341:58:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""},"value":"UUPSUpgradeable: must not be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""}],"id":1131,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2308:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2308:92:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1140,"nodeType":"ExpressionStatement","src":"2308:92:8"},{"id":1141,"nodeType":"PlaceholderStatement","src":"2410:1:8"}]},"documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"2074:195:8","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":1143,"name":"notDelegated","nameLocation":"2283:12:8","nodeType":"ModifierDefinition","parameters":{"id":1130,"nodeType":"ParameterList","parameters":[],"src":"2295:2:8"},"src":"2274:144:8","virtual":false,"visibility":"internal"},{"baseFunctions":[570],"body":{"id":1154,"nodeType":"Block","src":"3093:44:8","statements":[{"expression":{"id":1152,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"3110:20:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1151,"id":1153,"nodeType":"Return","src":"3103:27:8"}]},"documentation":{"id":1144,"nodeType":"StructuredDocumentation","src":"2424:577:8","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":1155,"implemented":true,"kind":"function","modifiers":[{"id":1148,"kind":"modifierInvocation","modifierName":{"id":1147,"name":"notDelegated","nameLocations":["3062:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1143,"src":"3062:12:8"},"nodeType":"ModifierInvocation","src":"3062:12:8"}],"name":"proxiableUUID","nameLocation":"3015:13:8","nodeType":"FunctionDefinition","overrides":{"id":1146,"nodeType":"OverrideSpecifier","overrides":[],"src":"3053:8:8"},"parameters":{"id":1145,"nodeType":"ParameterList","parameters":[],"src":"3028:2:8"},"returnParameters":{"id":1151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1155,"src":"3084:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3084:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3083:9:8"},"scope":1210,"src":"3006:131:8","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":1176,"nodeType":"Block","src":"3458:124:8","statements":[{"expression":{"arguments":[{"id":1164,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"3486:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1163,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"3468:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3468:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1166,"nodeType":"ExpressionStatement","src":"3468:36:8"},{"expression":{"arguments":[{"id":1168,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"3536:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3565:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3555:9:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1169,"name":"bytes","nodeType":"ElementaryTypeName","src":"3559:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3555:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3569:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1167,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"3514:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3514:61:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1175,"nodeType":"ExpressionStatement","src":"3514:61:8"}]},"documentation":{"id":1156,"nodeType":"StructuredDocumentation","src":"3143:239:8","text":" @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"3659cfe6","id":1177,"implemented":true,"kind":"function","modifiers":[{"id":1161,"kind":"modifierInvocation","modifierName":{"id":1160,"name":"onlyProxy","nameLocations":["3448:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":1128,"src":"3448:9:8"},"nodeType":"ModifierInvocation","src":"3448:9:8"}],"name":"upgradeTo","nameLocation":"3396:9:8","nodeType":"FunctionDefinition","parameters":{"id":1159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1158,"mutability":"mutable","name":"newImplementation","nameLocation":"3414:17:8","nodeType":"VariableDeclaration","scope":1177,"src":"3406:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1157,"name":"address","nodeType":"ElementaryTypeName","src":"3406:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3405:27:8"},"returnParameters":{"id":1162,"nodeType":"ParameterList","parameters":[],"src":"3458:0:8"},"scope":1210,"src":"3387:195:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1197,"nodeType":"Block","src":"4006:115:8","statements":[{"expression":{"arguments":[{"id":1188,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"4034:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1187,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"4016:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4016:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1190,"nodeType":"ExpressionStatement","src":"4016:36:8"},{"expression":{"arguments":[{"id":1192,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"4084:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1193,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"4103:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4109:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1191,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"4062:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4062:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1196,"nodeType":"ExpressionStatement","src":"4062:52:8"}]},"documentation":{"id":1178,"nodeType":"StructuredDocumentation","src":"3588:308:8","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":1198,"implemented":true,"kind":"function","modifiers":[{"id":1185,"kind":"modifierInvocation","modifierName":{"id":1184,"name":"onlyProxy","nameLocations":["3996:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":1128,"src":"3996:9:8"},"nodeType":"ModifierInvocation","src":"3996:9:8"}],"name":"upgradeToAndCall","nameLocation":"3910:16:8","nodeType":"FunctionDefinition","parameters":{"id":1183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"newImplementation","nameLocation":"3935:17:8","nodeType":"VariableDeclaration","scope":1198,"src":"3927:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"3927:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1182,"mutability":"mutable","name":"data","nameLocation":"3967:4:8","nodeType":"VariableDeclaration","scope":1198,"src":"3954:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1181,"name":"bytes","nodeType":"ElementaryTypeName","src":"3954:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3926:46:8"},"returnParameters":{"id":1186,"nodeType":"ParameterList","parameters":[],"src":"4006:0:8"},"scope":1210,"src":"3901:220:8","stateMutability":"payable","virtual":true,"visibility":"public"},{"documentation":{"id":1199,"nodeType":"StructuredDocumentation","src":"4127:397:8","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"},"id":1204,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"4538:17:8","nodeType":"FunctionDefinition","parameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"newImplementation","nameLocation":"4564:17:8","nodeType":"VariableDeclaration","scope":1204,"src":"4556:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1200,"name":"address","nodeType":"ElementaryTypeName","src":"4556:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4555:27:8"},"returnParameters":{"id":1203,"nodeType":"ParameterList","parameters":[],"src":"4599:0:8"},"scope":1210,"src":"4529:71:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1205,"nodeType":"StructuredDocumentation","src":"4606:254:8","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1209,"mutability":"mutable","name":"__gap","nameLocation":"4885:5:8","nodeType":"VariableDeclaration","scope":1210,"src":"4865:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"4865:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1208,"length":{"hexValue":"3530","id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4873:2:8","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"4865:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1211,"src":"928:3965:8","usedErrors":[]}],"src":"115:4779:8"},"id":8},"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3058],"ContextUpgradeable":[3100],"ERC165Upgradeable":[3557],"ERC721Upgradeable":[2162],"IERC165Upgradeable":[3569],"IERC721MetadataUpgradeable":[2728],"IERC721ReceiverUpgradeable":[2180],"IERC721Upgradeable":[2296],"Initializable":[1074],"MathUpgradeable":[4435],"SignedMathUpgradeable":[4540],"StringsUpgradeable":[3513]},"id":2163,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1212,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:9"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol","file":"./IERC721Upgradeable.sol","id":1213,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2163,"sourceUnit":2297,"src":"132:34:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol","file":"./IERC721ReceiverUpgradeable.sol","id":1214,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2163,"sourceUnit":2181,"src":"167:42:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol","file":"./extensions/IERC721MetadataUpgradeable.sol","id":1215,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2163,"sourceUnit":2729,"src":"210:53:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":1216,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2163,"sourceUnit":3059,"src":"264:44:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":1217,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2163,"sourceUnit":3101,"src":"309:44:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","file":"../../utils/StringsUpgradeable.sol","id":1218,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2163,"sourceUnit":3514,"src":"354:44:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../../utils/introspection/ERC165Upgradeable.sol","id":1219,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2163,"sourceUnit":3558,"src":"399:57:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":1220,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2163,"sourceUnit":1075,"src":"457:45:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1222,"name":"Initializable","nameLocations":["781:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"781:13:9"},"id":1223,"nodeType":"InheritanceSpecifier","src":"781:13:9"},{"baseName":{"id":1224,"name":"ContextUpgradeable","nameLocations":["796:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":3100,"src":"796:18:9"},"id":1225,"nodeType":"InheritanceSpecifier","src":"796:18:9"},{"baseName":{"id":1226,"name":"ERC165Upgradeable","nameLocations":["816:17:9"],"nodeType":"IdentifierPath","referencedDeclaration":3557,"src":"816:17:9"},"id":1227,"nodeType":"InheritanceSpecifier","src":"816:17:9"},{"baseName":{"id":1228,"name":"IERC721Upgradeable","nameLocations":["835:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":2296,"src":"835:18:9"},"id":1229,"nodeType":"InheritanceSpecifier","src":"835:18:9"},{"baseName":{"id":1230,"name":"IERC721MetadataUpgradeable","nameLocations":["855:26:9"],"nodeType":"IdentifierPath","referencedDeclaration":2728,"src":"855:26:9"},"id":1231,"nodeType":"InheritanceSpecifier","src":"855:26:9"}],"canonicalName":"ERC721Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1221,"nodeType":"StructuredDocumentation","src":"504:246:9","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":2162,"linearizedBaseContracts":[2162,2728,2296,3557,3569,3100,1074],"name":"ERC721Upgradeable","nameLocation":"760:17:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1234,"libraryName":{"id":1232,"name":"AddressUpgradeable","nameLocations":["894:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":3058,"src":"894:18:9"},"nodeType":"UsingForDirective","src":"888:37:9","typeName":{"id":1233,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"global":false,"id":1237,"libraryName":{"id":1235,"name":"StringsUpgradeable","nameLocations":["936:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":3513,"src":"936:18:9"},"nodeType":"UsingForDirective","src":"930:37:9","typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"959:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1239,"mutability":"mutable","name":"_name","nameLocation":"1006:5:9","nodeType":"VariableDeclaration","scope":2162,"src":"991:20:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1238,"name":"string","nodeType":"ElementaryTypeName","src":"991:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1241,"mutability":"mutable","name":"_symbol","nameLocation":"1053:7:9","nodeType":"VariableDeclaration","scope":2162,"src":"1038:22:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1240,"name":"string","nodeType":"ElementaryTypeName","src":"1038:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1245,"mutability":"mutable","name":"_owners","nameLocation":"1149:7:9","nodeType":"VariableDeclaration","scope":2162,"src":"1113:43:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1244,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1242,"name":"uint256","nodeType":"ElementaryTypeName","src":"1121:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1113:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1243,"name":"address","nodeType":"ElementaryTypeName","src":"1132:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1249,"mutability":"mutable","name":"_balances","nameLocation":"1243:9:9","nodeType":"VariableDeclaration","scope":2162,"src":"1207:45:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1248,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"1215:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1207:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1226:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1253,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1344:15:9","nodeType":"VariableDeclaration","scope":2162,"src":"1308:51:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1252,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1250,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1308:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1251,"name":"address","nodeType":"ElementaryTypeName","src":"1327:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1259,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1467:18:9","nodeType":"VariableDeclaration","scope":2162,"src":"1414:71:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1258,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"1422:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1414:44:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1257,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1255,"name":"address","nodeType":"ElementaryTypeName","src":"1441:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1433:24:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1256,"name":"bool","nodeType":"ElementaryTypeName","src":"1452:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1274,"nodeType":"Block","src":"1698:56:9","statements":[{"expression":{"arguments":[{"id":1270,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"1732:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1271,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"1739:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1269,"name":"__ERC721_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"1708:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1708:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1273,"nodeType":"ExpressionStatement","src":"1708:39:9"}]},"documentation":{"id":1260,"nodeType":"StructuredDocumentation","src":"1492:108:9","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1275,"implemented":true,"kind":"function","modifiers":[{"id":1267,"kind":"modifierInvocation","modifierName":{"id":1266,"name":"onlyInitializing","nameLocations":["1681:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"1681:16:9"},"nodeType":"ModifierInvocation","src":"1681:16:9"}],"name":"__ERC721_init","nameLocation":"1614:13:9","nodeType":"FunctionDefinition","parameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"name_","nameLocation":"1642:5:9","nodeType":"VariableDeclaration","scope":1275,"src":"1628:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1261,"name":"string","nodeType":"ElementaryTypeName","src":"1628:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1264,"mutability":"mutable","name":"symbol_","nameLocation":"1663:7:9","nodeType":"VariableDeclaration","scope":1275,"src":"1649:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1263,"name":"string","nodeType":"ElementaryTypeName","src":"1649:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1627:44:9"},"returnParameters":{"id":1268,"nodeType":"ParameterList","parameters":[],"src":"1698:0:9"},"scope":2162,"src":"1605:149:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1292,"nodeType":"Block","src":"1863:57:9","statements":[{"expression":{"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1284,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"1873:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1285,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"1881:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1873:13:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1287,"nodeType":"ExpressionStatement","src":"1873:13:9"},{"expression":{"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1288,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"1896:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1289,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"1906:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1896:17:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1291,"nodeType":"ExpressionStatement","src":"1896:17:9"}]},"id":1293,"implemented":true,"kind":"function","modifiers":[{"id":1282,"kind":"modifierInvocation","modifierName":{"id":1281,"name":"onlyInitializing","nameLocations":["1846:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"1846:16:9"},"nodeType":"ModifierInvocation","src":"1846:16:9"}],"name":"__ERC721_init_unchained","nameLocation":"1769:23:9","nodeType":"FunctionDefinition","parameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1277,"mutability":"mutable","name":"name_","nameLocation":"1807:5:9","nodeType":"VariableDeclaration","scope":1293,"src":"1793:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1276,"name":"string","nodeType":"ElementaryTypeName","src":"1793:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1279,"mutability":"mutable","name":"symbol_","nameLocation":"1828:7:9","nodeType":"VariableDeclaration","scope":1293,"src":"1814:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1278,"name":"string","nodeType":"ElementaryTypeName","src":"1814:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1792:44:9"},"returnParameters":{"id":1283,"nodeType":"ParameterList","parameters":[],"src":"1863:0:9"},"scope":2162,"src":"1760:160:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3551,3568],"body":{"id":1323,"nodeType":"Block","src":"2117:214:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1304,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"2146:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1306,"name":"IERC721Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"2166:18:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Upgradeable_$2296_$","typeString":"type(contract IERC721Upgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Upgradeable_$2296_$","typeString":"type(contract IERC721Upgradeable)"}],"id":1305,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2161:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Upgradeable_$2296","typeString":"type(contract IERC721Upgradeable)"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2186:11:9","memberName":"interfaceId","nodeType":"MemberAccess","src":"2161:36:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2146:51:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1310,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"2213:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1312,"name":"IERC721MetadataUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"2233:26:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721MetadataUpgradeable_$2728_$","typeString":"type(contract IERC721MetadataUpgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721MetadataUpgradeable_$2728_$","typeString":"type(contract IERC721MetadataUpgradeable)"}],"id":1311,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2228:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2228:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721MetadataUpgradeable_$2728","typeString":"type(contract IERC721MetadataUpgradeable)"}},"id":1314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2261:11:9","memberName":"interfaceId","nodeType":"MemberAccess","src":"2228:44:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2213:59:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2146:126:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1319,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"2312:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1317,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2288:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Upgradeable_$2162_$","typeString":"type(contract super ERC721Upgradeable)"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2294:17:9","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3551,"src":"2288:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2288:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2146:178:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1303,"id":1322,"nodeType":"Return","src":"2127:197:9"}]},"documentation":{"id":1294,"nodeType":"StructuredDocumentation","src":"1926:56:9","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1324,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1996:17:9","nodeType":"FunctionDefinition","overrides":{"id":1300,"nodeType":"OverrideSpecifier","overrides":[{"id":1298,"name":"ERC165Upgradeable","nameLocations":["2063:17:9"],"nodeType":"IdentifierPath","referencedDeclaration":3557,"src":"2063:17:9"},{"id":1299,"name":"IERC165Upgradeable","nameLocations":["2082:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":3569,"src":"2082:18:9"}],"src":"2054:47:9"},"parameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1296,"mutability":"mutable","name":"interfaceId","nameLocation":"2021:11:9","nodeType":"VariableDeclaration","scope":1324,"src":"2014:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1295,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2014:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2013:20:9"},"returnParameters":{"id":1303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1324,"src":"2111:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1301,"name":"bool","nodeType":"ElementaryTypeName","src":"2111:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2110:6:9"},"scope":2162,"src":"1987:344:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2221],"body":{"id":1347,"nodeType":"Block","src":"2471:123:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1334,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"2489:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2506:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2498:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1335,"name":"address","nodeType":"ElementaryTypeName","src":"2498:7:9","typeDescriptions":{}}},"id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2498:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2489:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2510:43:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":1333,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2481:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2481:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1342,"nodeType":"ExpressionStatement","src":"2481:73:9"},{"expression":{"baseExpression":{"id":1343,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"2571:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1345,"indexExpression":{"id":1344,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"2581:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2571:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1332,"id":1346,"nodeType":"Return","src":"2564:23:9"}]},"documentation":{"id":1325,"nodeType":"StructuredDocumentation","src":"2337:48:9","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1348,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2399:9:9","nodeType":"FunctionDefinition","overrides":{"id":1329,"nodeType":"OverrideSpecifier","overrides":[],"src":"2444:8:9"},"parameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"owner","nameLocation":"2417:5:9","nodeType":"VariableDeclaration","scope":1348,"src":"2409:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"2409:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2408:15:9"},"returnParameters":{"id":1332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1348,"src":"2462:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1330,"name":"uint256","nodeType":"ElementaryTypeName","src":"2462:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2461:9:9"},"scope":2162,"src":"2390:204:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2229],"body":{"id":1375,"nodeType":"Block","src":"2732:138:9","statements":[{"assignments":[1358],"declarations":[{"constant":false,"id":1358,"mutability":"mutable","name":"owner","nameLocation":"2750:5:9","nodeType":"VariableDeclaration","scope":1375,"src":"2742:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1357,"name":"address","nodeType":"ElementaryTypeName","src":"2742:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1362,"initialValue":{"arguments":[{"id":1360,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"2767:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1359,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"2758:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2758:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2742:33:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1364,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"2793:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2802:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"2802:7:9","typeDescriptions":{}}},"id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2802:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2793:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2814:26:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1363,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2785:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:56:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1372,"nodeType":"ExpressionStatement","src":"2785:56:9"},{"expression":{"id":1373,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"2858:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1356,"id":1374,"nodeType":"Return","src":"2851:12:9"}]},"documentation":{"id":1349,"nodeType":"StructuredDocumentation","src":"2600:46:9","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1376,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2660:7:9","nodeType":"FunctionDefinition","overrides":{"id":1353,"nodeType":"OverrideSpecifier","overrides":[],"src":"2705:8:9"},"parameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"tokenId","nameLocation":"2676:7:9","nodeType":"VariableDeclaration","scope":1376,"src":"2668:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1350,"name":"uint256","nodeType":"ElementaryTypeName","src":"2668:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:17:9"},"returnParameters":{"id":1356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1376,"src":"2723:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1354,"name":"address","nodeType":"ElementaryTypeName","src":"2723:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2722:9:9"},"scope":2162,"src":"2651:219:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2713],"body":{"id":1385,"nodeType":"Block","src":"3001:29:9","statements":[{"expression":{"id":1383,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"3018:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1382,"id":1384,"nodeType":"Return","src":"3011:12:9"}]},"documentation":{"id":1377,"nodeType":"StructuredDocumentation","src":"2876:51:9","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1386,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2941:4:9","nodeType":"FunctionDefinition","overrides":{"id":1379,"nodeType":"OverrideSpecifier","overrides":[],"src":"2968:8:9"},"parameters":{"id":1378,"nodeType":"ParameterList","parameters":[],"src":"2945:2:9"},"returnParameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1386,"src":"2986:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1380,"name":"string","nodeType":"ElementaryTypeName","src":"2986:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2985:15:9"},"scope":2162,"src":"2932:98:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2719],"body":{"id":1395,"nodeType":"Block","src":"3165:31:9","statements":[{"expression":{"id":1393,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"3182:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1392,"id":1394,"nodeType":"Return","src":"3175:14:9"}]},"documentation":{"id":1387,"nodeType":"StructuredDocumentation","src":"3036:53:9","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1396,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"3103:6:9","nodeType":"FunctionDefinition","overrides":{"id":1389,"nodeType":"OverrideSpecifier","overrides":[],"src":"3132:8:9"},"parameters":{"id":1388,"nodeType":"ParameterList","parameters":[],"src":"3109:2:9"},"returnParameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1396,"src":"3150:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1390,"name":"string","nodeType":"ElementaryTypeName","src":"3150:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3149:15:9"},"scope":2162,"src":"3094:102:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2727],"body":{"id":1434,"nodeType":"Block","src":"3350:188:9","statements":[{"expression":{"arguments":[{"id":1406,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"3375:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1405,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"3360:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3360:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1408,"nodeType":"ExpressionStatement","src":"3360:23:9"},{"assignments":[1410],"declarations":[{"constant":false,"id":1410,"mutability":"mutable","name":"baseURI","nameLocation":"3408:7:9","nodeType":"VariableDeclaration","scope":1434,"src":"3394:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1409,"name":"string","nodeType":"ElementaryTypeName","src":"3394:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1413,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1411,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"3418:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"3394:34:9"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1416,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"3451:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3445:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1414,"name":"bytes","nodeType":"ElementaryTypeName","src":"3445:5:9","typeDescriptions":{}}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3445:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3460:6:9","memberName":"length","nodeType":"MemberAccess","src":"3445:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3469:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3445:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3529:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3445:86:9","trueExpression":{"arguments":[{"arguments":[{"id":1425,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"3497:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1426,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"3506:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3514:8:9","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3343,"src":"3506:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3506:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1423,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3480:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3484:12:9","memberName":"encodePacked","nodeType":"MemberAccess","src":"3480:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3480:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3473:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1421,"name":"string","nodeType":"ElementaryTypeName","src":"3473:6:9","typeDescriptions":{}}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3473:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1404,"id":1433,"nodeType":"Return","src":"3438:93:9"}]},"documentation":{"id":1397,"nodeType":"StructuredDocumentation","src":"3202:55:9","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1435,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"3271:8:9","nodeType":"FunctionDefinition","overrides":{"id":1401,"nodeType":"OverrideSpecifier","overrides":[],"src":"3317:8:9"},"parameters":{"id":1400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1399,"mutability":"mutable","name":"tokenId","nameLocation":"3288:7:9","nodeType":"VariableDeclaration","scope":1435,"src":"3280:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"3280:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3279:17:9"},"returnParameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1435,"src":"3335:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1402,"name":"string","nodeType":"ElementaryTypeName","src":"3335:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3334:15:9"},"scope":2162,"src":"3262:276:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1443,"nodeType":"Block","src":"3846:26:9","statements":[{"expression":{"hexValue":"","id":1441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3863:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1440,"id":1442,"nodeType":"Return","src":"3856:9:9"}]},"documentation":{"id":1436,"nodeType":"StructuredDocumentation","src":"3544:231:9","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1444,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3789:8:9","nodeType":"FunctionDefinition","parameters":{"id":1437,"nodeType":"ParameterList","parameters":[],"src":"3797:2:9"},"returnParameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1444,"src":"3831:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1438,"name":"string","nodeType":"ElementaryTypeName","src":"3831:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3830:15:9"},"scope":2162,"src":"3780:92:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2269],"body":{"id":1486,"nodeType":"Block","src":"3999:347:9","statements":[{"assignments":[1454],"declarations":[{"constant":false,"id":1454,"mutability":"mutable","name":"owner","nameLocation":"4017:5:9","nodeType":"VariableDeclaration","scope":1486,"src":"4009:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1453,"name":"address","nodeType":"ElementaryTypeName","src":"4009:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1459,"initialValue":{"arguments":[{"id":1457,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"4051:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1455,"name":"ERC721Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"4025:17:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Upgradeable_$2162_$","typeString":"type(contract ERC721Upgradeable)"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4043:7:9","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"4025:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4025:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4009:50:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1461,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4077:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1462,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"4083:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4077:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4090:35:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":1460,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4069:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4069:57:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1466,"nodeType":"ExpressionStatement","src":"4069:57:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1468,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"4158:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4158:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1470,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"4174:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4158:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1473,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"4200:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1474,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"4207:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4207:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1472,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"4183:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4183:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4158:62:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4234:63:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""},"value":"ERC721: approve caller is not token owner or approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""}],"id":1467,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4137:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4137:170:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1480,"nodeType":"ExpressionStatement","src":"4137:170:9"},{"expression":{"arguments":[{"id":1482,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4327:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1483,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"4331:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1481,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"4318:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1485,"nodeType":"ExpressionStatement","src":"4318:21:9"}]},"documentation":{"id":1445,"nodeType":"StructuredDocumentation","src":"3878:46:9","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1487,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3938:7:9","nodeType":"FunctionDefinition","overrides":{"id":1451,"nodeType":"OverrideSpecifier","overrides":[],"src":"3990:8:9"},"parameters":{"id":1450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1447,"mutability":"mutable","name":"to","nameLocation":"3954:2:9","nodeType":"VariableDeclaration","scope":1487,"src":"3946:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1446,"name":"address","nodeType":"ElementaryTypeName","src":"3946:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1449,"mutability":"mutable","name":"tokenId","nameLocation":"3966:7:9","nodeType":"VariableDeclaration","scope":1487,"src":"3958:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1448,"name":"uint256","nodeType":"ElementaryTypeName","src":"3958:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3945:29:9"},"returnParameters":{"id":1452,"nodeType":"ParameterList","parameters":[],"src":"3999:0:9"},"scope":2162,"src":"3929:417:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2285],"body":{"id":1504,"nodeType":"Block","src":"4492:82:9","statements":[{"expression":{"arguments":[{"id":1497,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"4517:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1496,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"4502:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1499,"nodeType":"ExpressionStatement","src":"4502:23:9"},{"expression":{"baseExpression":{"id":1500,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"4543:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1502,"indexExpression":{"id":1501,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"4559:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4543:24:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1495,"id":1503,"nodeType":"Return","src":"4536:31:9"}]},"documentation":{"id":1488,"nodeType":"StructuredDocumentation","src":"4352:50:9","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1505,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4416:11:9","nodeType":"FunctionDefinition","overrides":{"id":1492,"nodeType":"OverrideSpecifier","overrides":[],"src":"4465:8:9"},"parameters":{"id":1491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1490,"mutability":"mutable","name":"tokenId","nameLocation":"4436:7:9","nodeType":"VariableDeclaration","scope":1505,"src":"4428:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"4428:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4427:17:9"},"returnParameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1505,"src":"4483:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"4483:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4482:9:9"},"scope":2162,"src":"4407:167:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2277],"body":{"id":1521,"nodeType":"Block","src":"4725:69:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1515,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"4754:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4754:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1517,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"4768:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1518,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"4778:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1514,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"4735:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4735:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1520,"nodeType":"ExpressionStatement","src":"4735:52:9"}]},"documentation":{"id":1506,"nodeType":"StructuredDocumentation","src":"4580:56:9","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1522,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4650:17:9","nodeType":"FunctionDefinition","overrides":{"id":1512,"nodeType":"OverrideSpecifier","overrides":[],"src":"4716:8:9"},"parameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1508,"mutability":"mutable","name":"operator","nameLocation":"4676:8:9","nodeType":"VariableDeclaration","scope":1522,"src":"4668:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1507,"name":"address","nodeType":"ElementaryTypeName","src":"4668:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1510,"mutability":"mutable","name":"approved","nameLocation":"4691:8:9","nodeType":"VariableDeclaration","scope":1522,"src":"4686:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1509,"name":"bool","nodeType":"ElementaryTypeName","src":"4686:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4667:33:9"},"returnParameters":{"id":1513,"nodeType":"ParameterList","parameters":[],"src":"4725:0:9"},"scope":2162,"src":"4641:153:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2295],"body":{"id":1539,"nodeType":"Block","src":"4963:59:9","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1533,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"4980:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1535,"indexExpression":{"id":1534,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"4999:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4980:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1537,"indexExpression":{"id":1536,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"5006:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4980:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1532,"id":1538,"nodeType":"Return","src":"4973:42:9"}]},"documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"4800:55:9","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1540,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4869:16:9","nodeType":"FunctionDefinition","overrides":{"id":1529,"nodeType":"OverrideSpecifier","overrides":[],"src":"4939:8:9"},"parameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"owner","nameLocation":"4894:5:9","nodeType":"VariableDeclaration","scope":1540,"src":"4886:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1524,"name":"address","nodeType":"ElementaryTypeName","src":"4886:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1527,"mutability":"mutable","name":"operator","nameLocation":"4909:8:9","nodeType":"VariableDeclaration","scope":1540,"src":"4901:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"4901:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4885:33:9"},"returnParameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1540,"src":"4957:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1530,"name":"bool","nodeType":"ElementaryTypeName","src":"4957:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4956:6:9"},"scope":2162,"src":"4860:162:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2261],"body":{"id":1566,"nodeType":"Block","src":"5173:207:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1553,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"5262:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1555,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"5276:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1552,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"5243:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5243:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5286:47:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":1551,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5235:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5235:99:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1559,"nodeType":"ExpressionStatement","src":"5235:99:9"},{"expression":{"arguments":[{"id":1561,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"5355:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1562,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"5361:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1563,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"5365:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1560,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"5345:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5345:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1565,"nodeType":"ExpressionStatement","src":"5345:28:9"}]},"documentation":{"id":1541,"nodeType":"StructuredDocumentation","src":"5028:51:9","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1567,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5093:12:9","nodeType":"FunctionDefinition","overrides":{"id":1549,"nodeType":"OverrideSpecifier","overrides":[],"src":"5164:8:9"},"parameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1543,"mutability":"mutable","name":"from","nameLocation":"5114:4:9","nodeType":"VariableDeclaration","scope":1567,"src":"5106:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1542,"name":"address","nodeType":"ElementaryTypeName","src":"5106:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1545,"mutability":"mutable","name":"to","nameLocation":"5128:2:9","nodeType":"VariableDeclaration","scope":1567,"src":"5120:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1544,"name":"address","nodeType":"ElementaryTypeName","src":"5120:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1547,"mutability":"mutable","name":"tokenId","nameLocation":"5140:7:9","nodeType":"VariableDeclaration","scope":1567,"src":"5132:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1546,"name":"uint256","nodeType":"ElementaryTypeName","src":"5132:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5105:43:9"},"returnParameters":{"id":1550,"nodeType":"ParameterList","parameters":[],"src":"5173:0:9"},"scope":2162,"src":"5084:296:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2251],"body":{"id":1585,"nodeType":"Block","src":"5539:56:9","statements":[{"expression":{"arguments":[{"id":1579,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"5566:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1580,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"5572:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1581,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"5576:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5585:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1578,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1586,1616],"referencedDeclaration":1616,"src":"5549:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5549:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1584,"nodeType":"ExpressionStatement","src":"5549:39:9"}]},"documentation":{"id":1568,"nodeType":"StructuredDocumentation","src":"5386:55:9","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1586,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5455:16:9","nodeType":"FunctionDefinition","overrides":{"id":1576,"nodeType":"OverrideSpecifier","overrides":[],"src":"5530:8:9"},"parameters":{"id":1575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1570,"mutability":"mutable","name":"from","nameLocation":"5480:4:9","nodeType":"VariableDeclaration","scope":1586,"src":"5472:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1569,"name":"address","nodeType":"ElementaryTypeName","src":"5472:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1572,"mutability":"mutable","name":"to","nameLocation":"5494:2:9","nodeType":"VariableDeclaration","scope":1586,"src":"5486:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1571,"name":"address","nodeType":"ElementaryTypeName","src":"5486:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1574,"mutability":"mutable","name":"tokenId","nameLocation":"5506:7:9","nodeType":"VariableDeclaration","scope":1586,"src":"5498:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1573,"name":"uint256","nodeType":"ElementaryTypeName","src":"5498:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5471:43:9"},"returnParameters":{"id":1577,"nodeType":"ParameterList","parameters":[],"src":"5539:0:9"},"scope":2162,"src":"5446:149:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2241],"body":{"id":1615,"nodeType":"Block","src":"5773:164:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1601,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"5810:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5810:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1603,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"5824:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1600,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"5791:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5791:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5834:47:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":1599,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5783:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5783:99:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1607,"nodeType":"ExpressionStatement","src":"5783:99:9"},{"expression":{"arguments":[{"id":1609,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"5906:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1610,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"5912:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1611,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"5916:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1612,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"5925:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1608,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"5892:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5892:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1614,"nodeType":"ExpressionStatement","src":"5892:38:9"}]},"documentation":{"id":1587,"nodeType":"StructuredDocumentation","src":"5601:55:9","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1616,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5670:16:9","nodeType":"FunctionDefinition","overrides":{"id":1597,"nodeType":"OverrideSpecifier","overrides":[],"src":"5764:8:9"},"parameters":{"id":1596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1589,"mutability":"mutable","name":"from","nameLocation":"5695:4:9","nodeType":"VariableDeclaration","scope":1616,"src":"5687:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1588,"name":"address","nodeType":"ElementaryTypeName","src":"5687:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1591,"mutability":"mutable","name":"to","nameLocation":"5709:2:9","nodeType":"VariableDeclaration","scope":1616,"src":"5701:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1590,"name":"address","nodeType":"ElementaryTypeName","src":"5701:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1593,"mutability":"mutable","name":"tokenId","nameLocation":"5721:7:9","nodeType":"VariableDeclaration","scope":1616,"src":"5713:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"5713:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1595,"mutability":"mutable","name":"data","nameLocation":"5743:4:9","nodeType":"VariableDeclaration","scope":1616,"src":"5730:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1594,"name":"bytes","nodeType":"ElementaryTypeName","src":"5730:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5686:62:9"},"returnParameters":{"id":1598,"nodeType":"ParameterList","parameters":[],"src":"5773:0:9"},"scope":2162,"src":"5661:276:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1644,"nodeType":"Block","src":"6900:165:9","statements":[{"expression":{"arguments":[{"id":1629,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"6920:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1630,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"6926:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1631,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"6930:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1628,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"6910:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6910:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1633,"nodeType":"ExpressionStatement","src":"6910:28:9"},{"expression":{"arguments":[{"arguments":[{"id":1636,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"6979:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1637,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"6985:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1638,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"6989:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1639,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"6998:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1635,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"6956:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6956:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7005:52:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1634,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6948:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6948:110:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1643,"nodeType":"ExpressionStatement","src":"6948:110:9"}]},"documentation":{"id":1617,"nodeType":"StructuredDocumentation","src":"5943:850:9","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1645,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6807:13:9","nodeType":"FunctionDefinition","parameters":{"id":1626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"mutability":"mutable","name":"from","nameLocation":"6829:4:9","nodeType":"VariableDeclaration","scope":1645,"src":"6821:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1618,"name":"address","nodeType":"ElementaryTypeName","src":"6821:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1621,"mutability":"mutable","name":"to","nameLocation":"6843:2:9","nodeType":"VariableDeclaration","scope":1645,"src":"6835:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1620,"name":"address","nodeType":"ElementaryTypeName","src":"6835:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1623,"mutability":"mutable","name":"tokenId","nameLocation":"6855:7:9","nodeType":"VariableDeclaration","scope":1645,"src":"6847:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1622,"name":"uint256","nodeType":"ElementaryTypeName","src":"6847:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1625,"mutability":"mutable","name":"data","nameLocation":"6877:4:9","nodeType":"VariableDeclaration","scope":1645,"src":"6864:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1624,"name":"bytes","nodeType":"ElementaryTypeName","src":"6864:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6820:62:9"},"returnParameters":{"id":1627,"nodeType":"ParameterList","parameters":[],"src":"6900:0:9"},"scope":2162,"src":"6798:267:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1657,"nodeType":"Block","src":"7249:40:9","statements":[{"expression":{"baseExpression":{"id":1653,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"7266:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1655,"indexExpression":{"id":1654,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"7274:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7266:16:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1652,"id":1656,"nodeType":"Return","src":"7259:23:9"}]},"documentation":{"id":1646,"nodeType":"StructuredDocumentation","src":"7071:98:9","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"},"id":1658,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"7183:8:9","nodeType":"FunctionDefinition","parameters":{"id":1649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1648,"mutability":"mutable","name":"tokenId","nameLocation":"7200:7:9","nodeType":"VariableDeclaration","scope":1658,"src":"7192:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"7192:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7191:17:9"},"returnParameters":{"id":1652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1658,"src":"7240:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1650,"name":"address","nodeType":"ElementaryTypeName","src":"7240:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7239:9:9"},"scope":2162,"src":"7174:115:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1675,"nodeType":"Block","src":"7663:55:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1667,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"7689:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1666,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"7680:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7680:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7709:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7701:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1669,"name":"address","nodeType":"ElementaryTypeName","src":"7701:7:9","typeDescriptions":{}}},"id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7701:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7680:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1665,"id":1674,"nodeType":"Return","src":"7673:38:9"}]},"documentation":{"id":1659,"nodeType":"StructuredDocumentation","src":"7295:292:9","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":1676,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7601:7:9","nodeType":"FunctionDefinition","parameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1661,"mutability":"mutable","name":"tokenId","nameLocation":"7617:7:9","nodeType":"VariableDeclaration","scope":1676,"src":"7609:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"7609:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7608:17:9"},"returnParameters":{"id":1665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1676,"src":"7657:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1663,"name":"bool","nodeType":"ElementaryTypeName","src":"7657:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7656:6:9"},"scope":2162,"src":"7592:126:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1709,"nodeType":"Block","src":"7975:173:9","statements":[{"assignments":[1687],"declarations":[{"constant":false,"id":1687,"mutability":"mutable","name":"owner","nameLocation":"7993:5:9","nodeType":"VariableDeclaration","scope":1709,"src":"7985:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1686,"name":"address","nodeType":"ElementaryTypeName","src":"7985:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1692,"initialValue":{"arguments":[{"id":1690,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"8027:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1688,"name":"ERC721Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"8001:17:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Upgradeable_$2162_$","typeString":"type(contract ERC721Upgradeable)"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8019:7:9","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"8001:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8001:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7985:50:9"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1693,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"8053:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1694,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"8064:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8053:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1697,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"8090:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1698,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"8097:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1696,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"8073:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8073:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8053:52:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1702,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"8121:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1701,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"8109:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8109:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1704,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"8133:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8109:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8053:87:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1707,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8052:89:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1685,"id":1708,"nodeType":"Return","src":"8045:96:9"}]},"documentation":{"id":1677,"nodeType":"StructuredDocumentation","src":"7724:147:9","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":1710,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7885:18:9","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"mutability":"mutable","name":"spender","nameLocation":"7912:7:9","nodeType":"VariableDeclaration","scope":1710,"src":"7904:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"7904:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1681,"mutability":"mutable","name":"tokenId","nameLocation":"7929:7:9","nodeType":"VariableDeclaration","scope":1710,"src":"7921:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"7921:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:34:9"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1710,"src":"7969:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1683,"name":"bool","nodeType":"ElementaryTypeName","src":"7969:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7968:6:9"},"scope":2162,"src":"7876:272:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1724,"nodeType":"Block","src":"8543:43:9","statements":[{"expression":{"arguments":[{"id":1719,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"8563:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1720,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"8567:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8576:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1718,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1725,1754],"referencedDeclaration":1754,"src":"8553:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8553:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1723,"nodeType":"ExpressionStatement","src":"8553:26:9"}]},"documentation":{"id":1711,"nodeType":"StructuredDocumentation","src":"8154:319:9","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1725,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8487:9:9","nodeType":"FunctionDefinition","parameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1713,"mutability":"mutable","name":"to","nameLocation":"8505:2:9","nodeType":"VariableDeclaration","scope":1725,"src":"8497:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1712,"name":"address","nodeType":"ElementaryTypeName","src":"8497:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1715,"mutability":"mutable","name":"tokenId","nameLocation":"8517:7:9","nodeType":"VariableDeclaration","scope":1725,"src":"8509:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"8509:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8496:29:9"},"returnParameters":{"id":1717,"nodeType":"ParameterList","parameters":[],"src":"8543:0:9"},"scope":2162,"src":"8478:108:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1753,"nodeType":"Block","src":"8891:195:9","statements":[{"expression":{"arguments":[{"id":1736,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"8907:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1737,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"8911:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1735,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"8901:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8901:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1739,"nodeType":"ExpressionStatement","src":"8901:18:9"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":1744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8981:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8973:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1742,"name":"address","nodeType":"ElementaryTypeName","src":"8973:7:9","typeDescriptions":{}}},"id":1745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8973:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1746,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"8985:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1747,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"8989:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1748,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"8998:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1741,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"8950:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8950:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9017:52:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1740,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8929:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8929:150:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1752,"nodeType":"ExpressionStatement","src":"8929:150:9"}]},"documentation":{"id":1726,"nodeType":"StructuredDocumentation","src":"8592:210:9","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1754,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8816:9:9","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"mutability":"mutable","name":"to","nameLocation":"8834:2:9","nodeType":"VariableDeclaration","scope":1754,"src":"8826:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1727,"name":"address","nodeType":"ElementaryTypeName","src":"8826:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1730,"mutability":"mutable","name":"tokenId","nameLocation":"8846:7:9","nodeType":"VariableDeclaration","scope":1754,"src":"8838:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1729,"name":"uint256","nodeType":"ElementaryTypeName","src":"8838:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1732,"mutability":"mutable","name":"data","nameLocation":"8868:4:9","nodeType":"VariableDeclaration","scope":1754,"src":"8855:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1731,"name":"bytes","nodeType":"ElementaryTypeName","src":"8855:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8825:48:9"},"returnParameters":{"id":1734,"nodeType":"ParameterList","parameters":[],"src":"8891:0:9"},"scope":2162,"src":"8807:279:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1830,"nodeType":"Block","src":"9469:859:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1763,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"9487:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9501:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9493:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1764,"name":"address","nodeType":"ElementaryTypeName","src":"9493:7:9","typeDescriptions":{}}},"id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9493:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9487:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":1769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9505:34:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":1762,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9479:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9479:61:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1771,"nodeType":"ExpressionStatement","src":"9479:61:9"},{"expression":{"arguments":[{"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9558:17:9","subExpression":{"arguments":[{"id":1774,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"9567:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1773,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"9559:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9559:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":1777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9577:30:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":1772,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9550:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9550:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1779,"nodeType":"ExpressionStatement","src":"9550:58:9"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9648:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9640:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1781,"name":"address","nodeType":"ElementaryTypeName","src":"9640:7:9","typeDescriptions":{}}},"id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9640:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1785,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"9652:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1786,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"9656:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9665:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1780,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"9619:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9619:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1789,"nodeType":"ExpressionStatement","src":"9619:48:9"},{"expression":{"arguments":[{"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9762:17:9","subExpression":{"arguments":[{"id":1792,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"9771:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1791,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"9763:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9763:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9781:30:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":1790,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9754:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9754:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1797,"nodeType":"ExpressionStatement","src":"9754:58:9"},{"id":1804,"nodeType":"UncheckedBlock","src":"9823:360:9","statements":[{"expression":{"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1798,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"10154:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1800,"indexExpression":{"id":1799,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"10164:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10154:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10154:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1803,"nodeType":"ExpressionStatement","src":"10154:18:9"}]},{"expression":{"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1805,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"10193:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1807,"indexExpression":{"id":1806,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"10201:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10193:16:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1808,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"10212:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10193:21:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1810,"nodeType":"ExpressionStatement","src":"10193:21:9"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10247:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10239:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1812,"name":"address","nodeType":"ElementaryTypeName","src":"10239:7:9","typeDescriptions":{}}},"id":1815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10239:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1816,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"10251:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1817,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"10255:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1811,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"10230:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10230:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1819,"nodeType":"EmitStatement","src":"10225:38:9"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10302:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10294:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1821,"name":"address","nodeType":"ElementaryTypeName","src":"10294:7:9","typeDescriptions":{}}},"id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10294:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1825,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"10306:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1826,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"10310:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1820,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"10274:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10274:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1829,"nodeType":"ExpressionStatement","src":"10274:47:9"}]},"documentation":{"id":1755,"nodeType":"StructuredDocumentation","src":"9092:311:9","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1831,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9417:5:9","nodeType":"FunctionDefinition","parameters":{"id":1760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"mutability":"mutable","name":"to","nameLocation":"9431:2:9","nodeType":"VariableDeclaration","scope":1831,"src":"9423:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1756,"name":"address","nodeType":"ElementaryTypeName","src":"9423:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1759,"mutability":"mutable","name":"tokenId","nameLocation":"9443:7:9","nodeType":"VariableDeclaration","scope":1831,"src":"9435:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1758,"name":"uint256","nodeType":"ElementaryTypeName","src":"9435:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9422:29:9"},"returnParameters":{"id":1761,"nodeType":"ParameterList","parameters":[],"src":"9469:0:9"},"scope":2162,"src":"9408:920:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1897,"nodeType":"Block","src":"10703:735:9","statements":[{"assignments":[1838],"declarations":[{"constant":false,"id":1838,"mutability":"mutable","name":"owner","nameLocation":"10721:5:9","nodeType":"VariableDeclaration","scope":1897,"src":"10713:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1837,"name":"address","nodeType":"ElementaryTypeName","src":"10713:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1843,"initialValue":{"arguments":[{"id":1841,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"10755:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1839,"name":"ERC721Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"10729:17:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Upgradeable_$2162_$","typeString":"type(contract ERC721Upgradeable)"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10747:7:9","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"10729:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10729:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10713:50:9"},{"expression":{"arguments":[{"id":1845,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"10795:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10810:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10802:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1846,"name":"address","nodeType":"ElementaryTypeName","src":"10802:7:9","typeDescriptions":{}}},"id":1849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10802:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1850,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"10814:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10823:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1844,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"10774:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10774:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1853,"nodeType":"ExpressionStatement","src":"10774:51:9"},{"expression":{"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1854,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"10927:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1857,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"10961:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1855,"name":"ERC721Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"10935:17:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Upgradeable_$2162_$","typeString":"type(contract ERC721Upgradeable)"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10953:7:9","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"10935:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10935:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10927:42:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1860,"nodeType":"ExpressionStatement","src":"10927:42:9"},{"expression":{"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11007:31:9","subExpression":{"baseExpression":{"id":1861,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"11014:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1863,"indexExpression":{"id":1862,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"11030:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11014:24:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1865,"nodeType":"ExpressionStatement","src":"11007:31:9"},{"id":1872,"nodeType":"UncheckedBlock","src":"11049:237:9","statements":[{"expression":{"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1866,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"11254:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1868,"indexExpression":{"id":1867,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"11264:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11254:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11254:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1871,"nodeType":"ExpressionStatement","src":"11254:21:9"}]},{"expression":{"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11295:23:9","subExpression":{"baseExpression":{"id":1873,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"11302:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1875,"indexExpression":{"id":1874,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"11310:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11302:16:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1877,"nodeType":"ExpressionStatement","src":"11295:23:9"},{"eventCall":{"arguments":[{"id":1879,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"11343:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11358:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11350:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1880,"name":"address","nodeType":"ElementaryTypeName","src":"11350:7:9","typeDescriptions":{}}},"id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11350:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1884,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"11362:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1878,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"11334:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11334:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1886,"nodeType":"EmitStatement","src":"11329:41:9"},{"expression":{"arguments":[{"id":1888,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"11401:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11416:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11408:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1889,"name":"address","nodeType":"ElementaryTypeName","src":"11408:7:9","typeDescriptions":{}}},"id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11408:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1893,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"11420:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11429:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1887,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"11381:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11381:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1896,"nodeType":"ExpressionStatement","src":"11381:50:9"}]},"documentation":{"id":1832,"nodeType":"StructuredDocumentation","src":"10334:315:9","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1898,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10663:5:9","nodeType":"FunctionDefinition","parameters":{"id":1835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"tokenId","nameLocation":"10677:7:9","nodeType":"VariableDeclaration","scope":1898,"src":"10669:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1833,"name":"uint256","nodeType":"ElementaryTypeName","src":"10669:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10668:17:9"},"returnParameters":{"id":1836,"nodeType":"ParameterList","parameters":[],"src":"10703:0:9"},"scope":2162,"src":"10654:784:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1982,"nodeType":"Block","src":"11841:1146:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1911,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"11885:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1909,"name":"ERC721Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"11859:17:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Upgradeable_$2162_$","typeString":"type(contract ERC721Upgradeable)"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11877:7:9","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"11859:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11859:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1913,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"11897:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11859:42:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":1915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11903:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":1908,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11851:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11851:92:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1917,"nodeType":"ExpressionStatement","src":"11851:92:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1919,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"11961:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11975:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11967:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1920,"name":"address","nodeType":"ElementaryTypeName","src":"11967:7:9","typeDescriptions":{}}},"id":1923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11967:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11961:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11979:38:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":1918,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11953:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11953:65:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1927,"nodeType":"ExpressionStatement","src":"11953:65:9"},{"expression":{"arguments":[{"id":1929,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"12050:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1930,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"12056:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1931,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"12060:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12069:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1928,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"12029:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12029:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1934,"nodeType":"ExpressionStatement","src":"12029:42:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1938,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"12197:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1936,"name":"ERC721Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"12171:17:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Upgradeable_$2162_$","typeString":"type(contract ERC721Upgradeable)"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12189:7:9","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"12171:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12171:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1940,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"12209:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12171:42:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12215:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":1935,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12163:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12163:92:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1944,"nodeType":"ExpressionStatement","src":"12163:92:9"},{"expression":{"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"12317:31:9","subExpression":{"baseExpression":{"id":1945,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"12324:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1947,"indexExpression":{"id":1946,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"12340:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12324:24:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1949,"nodeType":"ExpressionStatement","src":"12317:31:9"},{"id":1962,"nodeType":"UncheckedBlock","src":"12359:496:9","statements":[{"expression":{"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1950,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"12792:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1952,"indexExpression":{"id":1951,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"12802:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12792:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12811:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12792:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1955,"nodeType":"ExpressionStatement","src":"12792:20:9"},{"expression":{"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1956,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"12826:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1958,"indexExpression":{"id":1957,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"12836:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12826:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12843:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12826:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1961,"nodeType":"ExpressionStatement","src":"12826:18:9"}]},{"expression":{"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1963,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"12864:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1965,"indexExpression":{"id":1964,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"12872:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12864:16:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1966,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"12883:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12864:21:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1968,"nodeType":"ExpressionStatement","src":"12864:21:9"},{"eventCall":{"arguments":[{"id":1970,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"12910:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1971,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"12916:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1972,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"12920:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1969,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"12901:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12901:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1974,"nodeType":"EmitStatement","src":"12896:32:9"},{"expression":{"arguments":[{"id":1976,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"12959:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1977,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"12965:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1978,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"12969:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12978:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1975,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"12939:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12939:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1981,"nodeType":"ExpressionStatement","src":"12939:41:9"}]},"documentation":{"id":1899,"nodeType":"StructuredDocumentation","src":"11444:313:9","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1983,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11771:9:9","nodeType":"FunctionDefinition","parameters":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1901,"mutability":"mutable","name":"from","nameLocation":"11789:4:9","nodeType":"VariableDeclaration","scope":1983,"src":"11781:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1900,"name":"address","nodeType":"ElementaryTypeName","src":"11781:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1903,"mutability":"mutable","name":"to","nameLocation":"11803:2:9","nodeType":"VariableDeclaration","scope":1983,"src":"11795:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1902,"name":"address","nodeType":"ElementaryTypeName","src":"11795:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1905,"mutability":"mutable","name":"tokenId","nameLocation":"11815:7:9","nodeType":"VariableDeclaration","scope":1983,"src":"11807:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1904,"name":"uint256","nodeType":"ElementaryTypeName","src":"11807:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11780:43:9"},"returnParameters":{"id":1907,"nodeType":"ParameterList","parameters":[],"src":"11841:0:9"},"scope":2162,"src":"11762:1225:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2006,"nodeType":"Block","src":"13163:118:9","statements":[{"expression":{"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1991,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"13173:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1993,"indexExpression":{"id":1992,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"13189:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13173:24:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1994,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"13200:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13173:29:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1996,"nodeType":"ExpressionStatement","src":"13173:29:9"},{"eventCall":{"arguments":[{"arguments":[{"id":2000,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"13252:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1998,"name":"ERC721Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"13226:17:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Upgradeable_$2162_$","typeString":"type(contract ERC721Upgradeable)"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13244:7:9","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1376,"src":"13226:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13226:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2002,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"13262:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2003,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"13266:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1997,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"13217:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13217:57:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2005,"nodeType":"EmitStatement","src":"13212:62:9"}]},"documentation":{"id":1984,"nodeType":"StructuredDocumentation","src":"12993:101:9","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":2007,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"13108:8:9","nodeType":"FunctionDefinition","parameters":{"id":1989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1986,"mutability":"mutable","name":"to","nameLocation":"13125:2:9","nodeType":"VariableDeclaration","scope":2007,"src":"13117:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1985,"name":"address","nodeType":"ElementaryTypeName","src":"13117:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1988,"mutability":"mutable","name":"tokenId","nameLocation":"13137:7:9","nodeType":"VariableDeclaration","scope":2007,"src":"13129:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1987,"name":"uint256","nodeType":"ElementaryTypeName","src":"13129:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13116:29:9"},"returnParameters":{"id":1990,"nodeType":"ParameterList","parameters":[],"src":"13163:0:9"},"scope":2162,"src":"13099:182:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2038,"nodeType":"Block","src":"13510:184:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2018,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"13528:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2019,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"13537:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13528:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13547:27:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":2017,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13520:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13520:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2023,"nodeType":"ExpressionStatement","src":"13520:55:9"},{"expression":{"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2024,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"13585:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2027,"indexExpression":{"id":2025,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"13604:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13585:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2028,"indexExpression":{"id":2026,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"13611:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13585:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2029,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"13623:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13585:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2031,"nodeType":"ExpressionStatement","src":"13585:46:9"},{"eventCall":{"arguments":[{"id":2033,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"13661:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2034,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"13668:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2035,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"13678:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2032,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"13646:14:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13646:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2037,"nodeType":"EmitStatement","src":"13641:46:9"}]},"documentation":{"id":2008,"nodeType":"StructuredDocumentation","src":"13287:125:9","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":2039,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13426:18:9","nodeType":"FunctionDefinition","parameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"owner","nameLocation":"13453:5:9","nodeType":"VariableDeclaration","scope":2039,"src":"13445:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2009,"name":"address","nodeType":"ElementaryTypeName","src":"13445:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2012,"mutability":"mutable","name":"operator","nameLocation":"13468:8:9","nodeType":"VariableDeclaration","scope":2039,"src":"13460:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2011,"name":"address","nodeType":"ElementaryTypeName","src":"13460:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2014,"mutability":"mutable","name":"approved","nameLocation":"13483:8:9","nodeType":"VariableDeclaration","scope":2039,"src":"13478:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2013,"name":"bool","nodeType":"ElementaryTypeName","src":"13478:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13444:48:9"},"returnParameters":{"id":2016,"nodeType":"ParameterList","parameters":[],"src":"13510:0:9"},"scope":2162,"src":"13417:277:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2052,"nodeType":"Block","src":"13841:70:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2047,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"13867:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2046,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"13859:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13859:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13877:26:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":2045,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13851:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13851:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2051,"nodeType":"ExpressionStatement","src":"13851:53:9"}]},"documentation":{"id":2040,"nodeType":"StructuredDocumentation","src":"13700:73:9","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":2053,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"13787:14:9","nodeType":"FunctionDefinition","parameters":{"id":2043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2042,"mutability":"mutable","name":"tokenId","nameLocation":"13810:7:9","nodeType":"VariableDeclaration","scope":2053,"src":"13802:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2041,"name":"uint256","nodeType":"ElementaryTypeName","src":"13802:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13801:17:9"},"returnParameters":{"id":2044,"nodeType":"ParameterList","parameters":[],"src":"13841:0:9"},"scope":2162,"src":"13778:133:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2114,"nodeType":"Block","src":"14618:698:9","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2067,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"14632:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14635:10:9","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2746,"src":"14632:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14632:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2112,"nodeType":"Block","src":"15274:36:9","statements":[{"expression":{"hexValue":"74727565","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15295:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2066,"id":2111,"nodeType":"Return","src":"15288:11:9"}]},"id":2113,"nodeType":"IfStatement","src":"14628:682:9","trueBody":{"id":2109,"nodeType":"Block","src":"14649:619:9","statements":[{"clauses":[{"block":{"id":2089,"nodeType":"Block","src":"14774:102:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2083,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"14799:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":2084,"name":"IERC721ReceiverUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"14809:26:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721ReceiverUpgradeable_$2180_$","typeString":"type(contract IERC721ReceiverUpgradeable)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14836:16:9","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2179,"src":"14809:43:9","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721ReceiverUpgradeable.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14853:8:9","memberName":"selector","nodeType":"MemberAccess","src":"14809:52:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14799:62:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2066,"id":2088,"nodeType":"Return","src":"14792:69:9"}]},"errorName":"","id":2090,"nodeType":"TryCatchClause","parameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2081,"mutability":"mutable","name":"retval","nameLocation":"14766:6:9","nodeType":"VariableDeclaration","scope":2090,"src":"14759:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2080,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14759:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14758:15:9"},"src":"14750:126:9"},{"block":{"id":2106,"nodeType":"Block","src":"14905:353:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2094,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"14927:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14934:6:9","memberName":"length","nodeType":"MemberAccess","src":"14927:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14944:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14927:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2104,"nodeType":"Block","src":"15054:190:9","statements":[{"AST":{"nodeType":"YulBlock","src":"15140:86:9","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15177:2:9","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"15181:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15173:3:9"},"nodeType":"YulFunctionCall","src":"15173:15:9"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"15196:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15190:5:9"},"nodeType":"YulFunctionCall","src":"15190:13:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15166:6:9"},"nodeType":"YulFunctionCall","src":"15166:38:9"},"nodeType":"YulExpressionStatement","src":"15166:38:9"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2092,"isOffset":false,"isSlot":false,"src":"15181:6:9","valueSize":1},{"declaration":2092,"isOffset":false,"isSlot":false,"src":"15196:6:9","valueSize":1}],"id":2103,"nodeType":"InlineAssembly","src":"15131:95:9"}]},"id":2105,"nodeType":"IfStatement","src":"14923:321:9","trueBody":{"id":2102,"nodeType":"Block","src":"14947:101:9","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14976:52:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":2098,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14969:6:9","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14969:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2101,"nodeType":"ExpressionStatement","src":"14969:60:9"}]}}]},"errorName":"","id":2107,"nodeType":"TryCatchClause","parameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"reason","nameLocation":"14897:6:9","nodeType":"VariableDeclaration","scope":2107,"src":"14884:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2091,"name":"bytes","nodeType":"ElementaryTypeName","src":"14884:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14883:21:9"},"src":"14877:381:9"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2074,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"14715:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14715:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2076,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"14729:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2077,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"14735:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2078,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"14744:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2071,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"14694:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2070,"name":"IERC721ReceiverUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"14667:26:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721ReceiverUpgradeable_$2180_$","typeString":"type(contract IERC721ReceiverUpgradeable)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14667:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721ReceiverUpgradeable_$2180","typeString":"contract IERC721ReceiverUpgradeable"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14698:16:9","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2179,"src":"14667:47:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14667:82:9","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2108,"nodeType":"TryStatement","src":"14663:595:9"}]}}]},"documentation":{"id":2054,"nodeType":"StructuredDocumentation","src":"13917:541:9","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":2115,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"14472:22:9","nodeType":"FunctionDefinition","parameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2056,"mutability":"mutable","name":"from","nameLocation":"14512:4:9","nodeType":"VariableDeclaration","scope":2115,"src":"14504:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2055,"name":"address","nodeType":"ElementaryTypeName","src":"14504:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2058,"mutability":"mutable","name":"to","nameLocation":"14534:2:9","nodeType":"VariableDeclaration","scope":2115,"src":"14526:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2057,"name":"address","nodeType":"ElementaryTypeName","src":"14526:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2060,"mutability":"mutable","name":"tokenId","nameLocation":"14554:7:9","nodeType":"VariableDeclaration","scope":2115,"src":"14546:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2059,"name":"uint256","nodeType":"ElementaryTypeName","src":"14546:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2062,"mutability":"mutable","name":"data","nameLocation":"14584:4:9","nodeType":"VariableDeclaration","scope":2115,"src":"14571:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2061,"name":"bytes","nodeType":"ElementaryTypeName","src":"14571:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14494:100:9"},"returnParameters":{"id":2066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2115,"src":"14612:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2064,"name":"bool","nodeType":"ElementaryTypeName","src":"14612:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14611:6:9"},"scope":2162,"src":"14463:853:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2127,"nodeType":"Block","src":"16146:2:9","statements":[]},"documentation":{"id":2116,"nodeType":"StructuredDocumentation","src":"15322:705:9","text":" @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2128,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"16041:20:9","nodeType":"FunctionDefinition","parameters":{"id":2125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2118,"mutability":"mutable","name":"from","nameLocation":"16070:4:9","nodeType":"VariableDeclaration","scope":2128,"src":"16062:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2117,"name":"address","nodeType":"ElementaryTypeName","src":"16062:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2120,"mutability":"mutable","name":"to","nameLocation":"16084:2:9","nodeType":"VariableDeclaration","scope":2128,"src":"16076:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2119,"name":"address","nodeType":"ElementaryTypeName","src":"16076:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2122,"mutability":"mutable","name":"firstTokenId","nameLocation":"16096:12:9","nodeType":"VariableDeclaration","scope":2128,"src":"16088:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2121,"name":"uint256","nodeType":"ElementaryTypeName","src":"16088:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2124,"mutability":"mutable","name":"batchSize","nameLocation":"16118:9:9","nodeType":"VariableDeclaration","scope":2128,"src":"16110:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2123,"name":"uint256","nodeType":"ElementaryTypeName","src":"16110:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16061:67:9"},"returnParameters":{"id":2126,"nodeType":"ParameterList","parameters":[],"src":"16146:0:9"},"scope":2162,"src":"16032:116:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2140,"nodeType":"Block","src":"16967:2:9","statements":[]},"documentation":{"id":2129,"nodeType":"StructuredDocumentation","src":"16154:695:9","text":" @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2141,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"16863:19:9","nodeType":"FunctionDefinition","parameters":{"id":2138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"from","nameLocation":"16891:4:9","nodeType":"VariableDeclaration","scope":2141,"src":"16883:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2130,"name":"address","nodeType":"ElementaryTypeName","src":"16883:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2133,"mutability":"mutable","name":"to","nameLocation":"16905:2:9","nodeType":"VariableDeclaration","scope":2141,"src":"16897:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2132,"name":"address","nodeType":"ElementaryTypeName","src":"16897:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2135,"mutability":"mutable","name":"firstTokenId","nameLocation":"16917:12:9","nodeType":"VariableDeclaration","scope":2141,"src":"16909:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2134,"name":"uint256","nodeType":"ElementaryTypeName","src":"16909:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2137,"mutability":"mutable","name":"batchSize","nameLocation":"16939:9:9","nodeType":"VariableDeclaration","scope":2141,"src":"16931:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2136,"name":"uint256","nodeType":"ElementaryTypeName","src":"16931:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16882:67:9"},"returnParameters":{"id":2139,"nodeType":"ParameterList","parameters":[],"src":"16967:0:9"},"scope":2162,"src":"16854:115:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2155,"nodeType":"Block","src":"17518:45:9","statements":[{"expression":{"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2149,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"17528:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2151,"indexExpression":{"id":2150,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"17538:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17528:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2152,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"17550:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17528:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2154,"nodeType":"ExpressionStatement","src":"17528:28:9"}]},"documentation":{"id":2142,"nodeType":"StructuredDocumentation","src":"16975:409:9","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."},"id":2156,"implemented":true,"kind":"function","modifiers":[],"name":"__unsafe_increaseBalance","nameLocation":"17451:24:9","nodeType":"FunctionDefinition","parameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2144,"mutability":"mutable","name":"account","nameLocation":"17484:7:9","nodeType":"VariableDeclaration","scope":2156,"src":"17476:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2143,"name":"address","nodeType":"ElementaryTypeName","src":"17476:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2146,"mutability":"mutable","name":"amount","nameLocation":"17501:6:9","nodeType":"VariableDeclaration","scope":2156,"src":"17493:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2145,"name":"uint256","nodeType":"ElementaryTypeName","src":"17493:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17475:33:9"},"returnParameters":{"id":2148,"nodeType":"ParameterList","parameters":[],"src":"17518:0:9"},"scope":2162,"src":"17442:121:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":2157,"nodeType":"StructuredDocumentation","src":"17569:254:9","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2161,"mutability":"mutable","name":"__gap","nameLocation":"17848:5:9","nodeType":"VariableDeclaration","scope":2162,"src":"17828:25:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$44_storage","typeString":"uint256[44]"},"typeName":{"baseType":{"id":2158,"name":"uint256","nodeType":"ElementaryTypeName","src":"17828:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2160,"length":{"hexValue":"3434","id":2159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17836:2:9","typeDescriptions":{"typeIdentifier":"t_rational_44_by_1","typeString":"int_const 44"},"value":"44"},"nodeType":"ArrayTypeName","src":"17828:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$44_storage_ptr","typeString":"uint256[44]"}},"visibility":"private"}],"scope":2163,"src":"751:17105:9","usedErrors":[]}],"src":"107:17750:9"},"id":9},"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol","exportedSymbols":{"IERC721ReceiverUpgradeable":[2180]},"id":2181,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2164,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721ReceiverUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2165,"nodeType":"StructuredDocumentation","src":"141:152:10","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":2180,"linearizedBaseContracts":[2180],"name":"IERC721ReceiverUpgradeable","nameLocation":"304:26:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2166,"nodeType":"StructuredDocumentation","src":"337:493:10","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2179,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"844:16:10","nodeType":"FunctionDefinition","parameters":{"id":2175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"operator","nameLocation":"878:8:10","nodeType":"VariableDeclaration","scope":2179,"src":"870:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2167,"name":"address","nodeType":"ElementaryTypeName","src":"870:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2170,"mutability":"mutable","name":"from","nameLocation":"904:4:10","nodeType":"VariableDeclaration","scope":2179,"src":"896:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2169,"name":"address","nodeType":"ElementaryTypeName","src":"896:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2172,"mutability":"mutable","name":"tokenId","nameLocation":"926:7:10","nodeType":"VariableDeclaration","scope":2179,"src":"918:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2171,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2174,"mutability":"mutable","name":"data","nameLocation":"958:4:10","nodeType":"VariableDeclaration","scope":2179,"src":"943:19:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2173,"name":"bytes","nodeType":"ElementaryTypeName","src":"943:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"860:108:10"},"returnParameters":{"id":2178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2179,"src":"987:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2176,"name":"bytes4","nodeType":"ElementaryTypeName","src":"987:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"986:8:10"},"scope":2180,"src":"835:160:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2181,"src":"294:703:10","usedErrors":[]}],"src":"116:882:10"},"id":10},"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol","exportedSymbols":{"IERC165Upgradeable":[3569],"IERC721Upgradeable":[2296]},"id":2297,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2182,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:11"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","file":"../../utils/introspection/IERC165Upgradeable.sol","id":2183,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2297,"sourceUnit":3570,"src":"133:58:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2185,"name":"IERC165Upgradeable","nameLocations":["293:18:11"],"nodeType":"IdentifierPath","referencedDeclaration":3569,"src":"293:18:11"},"id":2186,"nodeType":"InheritanceSpecifier","src":"293:18:11"}],"canonicalName":"IERC721Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2184,"nodeType":"StructuredDocumentation","src":"193:67:11","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":2296,"linearizedBaseContracts":[2296,3569],"name":"IERC721Upgradeable","nameLocation":"271:18:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2187,"nodeType":"StructuredDocumentation","src":"318:88:11","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2195,"name":"Transfer","nameLocation":"417:8:11","nodeType":"EventDefinition","parameters":{"id":2194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2189,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"442:4:11","nodeType":"VariableDeclaration","scope":2195,"src":"426:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2188,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2191,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"464:2:11","nodeType":"VariableDeclaration","scope":2195,"src":"448:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2190,"name":"address","nodeType":"ElementaryTypeName","src":"448:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2193,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"484:7:11","nodeType":"VariableDeclaration","scope":2195,"src":"468:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2192,"name":"uint256","nodeType":"ElementaryTypeName","src":"468:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:67:11"},"src":"411:82:11"},{"anonymous":false,"documentation":{"id":2196,"nodeType":"StructuredDocumentation","src":"499:94:11","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2204,"name":"Approval","nameLocation":"604:8:11","nodeType":"EventDefinition","parameters":{"id":2203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2198,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"629:5:11","nodeType":"VariableDeclaration","scope":2204,"src":"613:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2197,"name":"address","nodeType":"ElementaryTypeName","src":"613:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2200,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"652:8:11","nodeType":"VariableDeclaration","scope":2204,"src":"636:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2199,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2202,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"678:7:11","nodeType":"VariableDeclaration","scope":2204,"src":"662:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2201,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"612:74:11"},"src":"598:89:11"},{"anonymous":false,"documentation":{"id":2205,"nodeType":"StructuredDocumentation","src":"693:117:11","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":2213,"name":"ApprovalForAll","nameLocation":"821:14:11","nodeType":"EventDefinition","parameters":{"id":2212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2207,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"852:5:11","nodeType":"VariableDeclaration","scope":2213,"src":"836:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2206,"name":"address","nodeType":"ElementaryTypeName","src":"836:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2209,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"875:8:11","nodeType":"VariableDeclaration","scope":2213,"src":"859:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2208,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2211,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"890:8:11","nodeType":"VariableDeclaration","scope":2213,"src":"885:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2210,"name":"bool","nodeType":"ElementaryTypeName","src":"885:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"835:64:11"},"src":"815:85:11"},{"documentation":{"id":2214,"nodeType":"StructuredDocumentation","src":"906:76:11","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2221,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"996:9:11","nodeType":"FunctionDefinition","parameters":{"id":2217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2216,"mutability":"mutable","name":"owner","nameLocation":"1014:5:11","nodeType":"VariableDeclaration","scope":2221,"src":"1006:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2215,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1005:15:11"},"returnParameters":{"id":2220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2219,"mutability":"mutable","name":"balance","nameLocation":"1052:7:11","nodeType":"VariableDeclaration","scope":2221,"src":"1044:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2218,"name":"uint256","nodeType":"ElementaryTypeName","src":"1044:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1043:17:11"},"scope":2296,"src":"987:74:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2222,"nodeType":"StructuredDocumentation","src":"1067:131:11","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2229,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1212:7:11","nodeType":"FunctionDefinition","parameters":{"id":2225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2224,"mutability":"mutable","name":"tokenId","nameLocation":"1228:7:11","nodeType":"VariableDeclaration","scope":2229,"src":"1220:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2223,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1219:17:11"},"returnParameters":{"id":2228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2227,"mutability":"mutable","name":"owner","nameLocation":"1268:5:11","nodeType":"VariableDeclaration","scope":2229,"src":"1260:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2226,"name":"address","nodeType":"ElementaryTypeName","src":"1260:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1259:15:11"},"scope":2296,"src":"1203:72:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2230,"nodeType":"StructuredDocumentation","src":"1281:556:11","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2241,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1851:16:11","nodeType":"FunctionDefinition","parameters":{"id":2239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2232,"mutability":"mutable","name":"from","nameLocation":"1876:4:11","nodeType":"VariableDeclaration","scope":2241,"src":"1868:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2231,"name":"address","nodeType":"ElementaryTypeName","src":"1868:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2234,"mutability":"mutable","name":"to","nameLocation":"1890:2:11","nodeType":"VariableDeclaration","scope":2241,"src":"1882:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2233,"name":"address","nodeType":"ElementaryTypeName","src":"1882:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2236,"mutability":"mutable","name":"tokenId","nameLocation":"1902:7:11","nodeType":"VariableDeclaration","scope":2241,"src":"1894:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2235,"name":"uint256","nodeType":"ElementaryTypeName","src":"1894:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2238,"mutability":"mutable","name":"data","nameLocation":"1926:4:11","nodeType":"VariableDeclaration","scope":2241,"src":"1911:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2237,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1867:64:11"},"returnParameters":{"id":2240,"nodeType":"ParameterList","parameters":[],"src":"1940:0:11"},"scope":2296,"src":"1842:99:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2242,"nodeType":"StructuredDocumentation","src":"1947:687:11","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2251,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2648:16:11","nodeType":"FunctionDefinition","parameters":{"id":2249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"from","nameLocation":"2673:4:11","nodeType":"VariableDeclaration","scope":2251,"src":"2665:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2243,"name":"address","nodeType":"ElementaryTypeName","src":"2665:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2246,"mutability":"mutable","name":"to","nameLocation":"2687:2:11","nodeType":"VariableDeclaration","scope":2251,"src":"2679:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2245,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2248,"mutability":"mutable","name":"tokenId","nameLocation":"2699:7:11","nodeType":"VariableDeclaration","scope":2251,"src":"2691:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2247,"name":"uint256","nodeType":"ElementaryTypeName","src":"2691:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2664:43:11"},"returnParameters":{"id":2250,"nodeType":"ParameterList","parameters":[],"src":"2716:0:11"},"scope":2296,"src":"2639:78:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2252,"nodeType":"StructuredDocumentation","src":"2723:732:11","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2261,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3469:12:11","nodeType":"FunctionDefinition","parameters":{"id":2259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2254,"mutability":"mutable","name":"from","nameLocation":"3490:4:11","nodeType":"VariableDeclaration","scope":2261,"src":"3482:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2253,"name":"address","nodeType":"ElementaryTypeName","src":"3482:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2256,"mutability":"mutable","name":"to","nameLocation":"3504:2:11","nodeType":"VariableDeclaration","scope":2261,"src":"3496:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2255,"name":"address","nodeType":"ElementaryTypeName","src":"3496:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2258,"mutability":"mutable","name":"tokenId","nameLocation":"3516:7:11","nodeType":"VariableDeclaration","scope":2261,"src":"3508:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2257,"name":"uint256","nodeType":"ElementaryTypeName","src":"3508:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3481:43:11"},"returnParameters":{"id":2260,"nodeType":"ParameterList","parameters":[],"src":"3533:0:11"},"scope":2296,"src":"3460:74:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2262,"nodeType":"StructuredDocumentation","src":"3540:452:11","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2269,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4006:7:11","nodeType":"FunctionDefinition","parameters":{"id":2267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2264,"mutability":"mutable","name":"to","nameLocation":"4022:2:11","nodeType":"VariableDeclaration","scope":2269,"src":"4014:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2263,"name":"address","nodeType":"ElementaryTypeName","src":"4014:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2266,"mutability":"mutable","name":"tokenId","nameLocation":"4034:7:11","nodeType":"VariableDeclaration","scope":2269,"src":"4026:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2265,"name":"uint256","nodeType":"ElementaryTypeName","src":"4026:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4013:29:11"},"returnParameters":{"id":2268,"nodeType":"ParameterList","parameters":[],"src":"4051:0:11"},"scope":2296,"src":"3997:55:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2270,"nodeType":"StructuredDocumentation","src":"4058:309:11","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2277,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4381:17:11","nodeType":"FunctionDefinition","parameters":{"id":2275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"operator","nameLocation":"4407:8:11","nodeType":"VariableDeclaration","scope":2277,"src":"4399:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"4399:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2274,"mutability":"mutable","name":"approved","nameLocation":"4422:8:11","nodeType":"VariableDeclaration","scope":2277,"src":"4417:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2273,"name":"bool","nodeType":"ElementaryTypeName","src":"4417:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4398:33:11"},"returnParameters":{"id":2276,"nodeType":"ParameterList","parameters":[],"src":"4440:0:11"},"scope":2296,"src":"4372:69:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2278,"nodeType":"StructuredDocumentation","src":"4447:139:11","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2285,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4600:11:11","nodeType":"FunctionDefinition","parameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"mutability":"mutable","name":"tokenId","nameLocation":"4620:7:11","nodeType":"VariableDeclaration","scope":2285,"src":"4612:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"4612:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4611:17:11"},"returnParameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"mutability":"mutable","name":"operator","nameLocation":"4660:8:11","nodeType":"VariableDeclaration","scope":2285,"src":"4652:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2282,"name":"address","nodeType":"ElementaryTypeName","src":"4652:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4651:18:11"},"scope":2296,"src":"4591:79:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2286,"nodeType":"StructuredDocumentation","src":"4676:138:11","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2295,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4828:16:11","nodeType":"FunctionDefinition","parameters":{"id":2291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"mutability":"mutable","name":"owner","nameLocation":"4853:5:11","nodeType":"VariableDeclaration","scope":2295,"src":"4845:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2287,"name":"address","nodeType":"ElementaryTypeName","src":"4845:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2290,"mutability":"mutable","name":"operator","nameLocation":"4868:8:11","nodeType":"VariableDeclaration","scope":2295,"src":"4860:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2289,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4844:33:11"},"returnParameters":{"id":2294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2295,"src":"4901:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2292,"name":"bool","nodeType":"ElementaryTypeName","src":"4901:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4900:6:11"},"scope":2296,"src":"4819:88:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2297,"src":"261:4648:11","usedErrors":[]}],"src":"108:4802:11"},"id":11},"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3058],"ContextUpgradeable":[3100],"ERC165Upgradeable":[3557],"ERC721EnumerableUpgradeable":[2670],"ERC721Upgradeable":[2162],"IERC165Upgradeable":[3569],"IERC721EnumerableUpgradeable":[2701],"IERC721MetadataUpgradeable":[2728],"IERC721ReceiverUpgradeable":[2180],"IERC721Upgradeable":[2296],"Initializable":[1074],"MathUpgradeable":[4435],"SignedMathUpgradeable":[4540],"StringsUpgradeable":[3513]},"id":2671,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2298,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:12"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","file":"../ERC721Upgradeable.sol","id":2299,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2671,"sourceUnit":2163,"src":"153:34:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721EnumerableUpgradeable.sol","file":"./IERC721EnumerableUpgradeable.sol","id":2300,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2671,"sourceUnit":2702,"src":"188:44:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":2301,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2671,"sourceUnit":1075,"src":"233:48:12","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2303,"name":"Initializable","nameLocations":["532:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"532:13:12"},"id":2304,"nodeType":"InheritanceSpecifier","src":"532:13:12"},{"baseName":{"id":2305,"name":"ERC721Upgradeable","nameLocations":["547:17:12"],"nodeType":"IdentifierPath","referencedDeclaration":2162,"src":"547:17:12"},"id":2306,"nodeType":"InheritanceSpecifier","src":"547:17:12"},{"baseName":{"id":2307,"name":"IERC721EnumerableUpgradeable","nameLocations":["566:28:12"],"nodeType":"IdentifierPath","referencedDeclaration":2701,"src":"566:28:12"},"id":2308,"nodeType":"InheritanceSpecifier","src":"566:28:12"}],"canonicalName":"ERC721EnumerableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2302,"nodeType":"StructuredDocumentation","src":"283:199:12","text":" @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n enumerability of all the token ids in the contract as well as all token ids owned by each\n account."},"fullyImplemented":true,"id":2670,"linearizedBaseContracts":[2670,2701,2162,2728,2296,3557,3569,3100,1074],"name":"ERC721EnumerableUpgradeable","nameLocation":"501:27:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2313,"nodeType":"Block","src":"662:7:12","statements":[]},"id":2314,"implemented":true,"kind":"function","modifiers":[{"id":2311,"kind":"modifierInvocation","modifierName":{"id":2310,"name":"onlyInitializing","nameLocations":["645:16:12"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"645:16:12"},"nodeType":"ModifierInvocation","src":"645:16:12"}],"name":"__ERC721Enumerable_init","nameLocation":"610:23:12","nodeType":"FunctionDefinition","parameters":{"id":2309,"nodeType":"ParameterList","parameters":[],"src":"633:2:12"},"returnParameters":{"id":2312,"nodeType":"ParameterList","parameters":[],"src":"662:0:12"},"scope":2670,"src":"601:68:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2319,"nodeType":"Block","src":"746:7:12","statements":[]},"id":2320,"implemented":true,"kind":"function","modifiers":[{"id":2317,"kind":"modifierInvocation","modifierName":{"id":2316,"name":"onlyInitializing","nameLocations":["729:16:12"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"729:16:12"},"nodeType":"ModifierInvocation","src":"729:16:12"}],"name":"__ERC721Enumerable_init_unchained","nameLocation":"684:33:12","nodeType":"FunctionDefinition","parameters":{"id":2315,"nodeType":"ParameterList","parameters":[],"src":"717:2:12"},"returnParameters":{"id":2318,"nodeType":"ParameterList","parameters":[],"src":"746:0:12"},"scope":2670,"src":"675:78:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"id":2326,"mutability":"mutable","name":"_ownedTokens","nameLocation":"867:12:12","nodeType":"VariableDeclaration","scope":2670,"src":"811:68:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":2325,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2321,"name":"address","nodeType":"ElementaryTypeName","src":"819:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"811:47:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2324,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2322,"name":"uint256","nodeType":"ElementaryTypeName","src":"838:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"830:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2323,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":2330,"mutability":"mutable","name":"_ownedTokensIndex","nameLocation":"985:17:12","nodeType":"VariableDeclaration","scope":2670,"src":"949:53:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":2329,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2327,"name":"uint256","nodeType":"ElementaryTypeName","src":"957:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"949:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2328,"name":"uint256","nodeType":"ElementaryTypeName","src":"968:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":2333,"mutability":"mutable","name":"_allTokens","nameLocation":"1081:10:12","nodeType":"VariableDeclaration","scope":2670,"src":"1063:28:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":2331,"name":"uint256","nodeType":"ElementaryTypeName","src":"1063:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2332,"nodeType":"ArrayTypeName","src":"1063:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"private"},{"constant":false,"id":2337,"mutability":"mutable","name":"_allTokensIndex","nameLocation":"1198:15:12","nodeType":"VariableDeclaration","scope":2670,"src":"1162:51:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":2336,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2334,"name":"uint256","nodeType":"ElementaryTypeName","src":"1170:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1162:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"baseFunctions":[1324,3568],"body":{"id":2360,"nodeType":"Block","src":"1411:125:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2348,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"1428:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2350,"name":"IERC721EnumerableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"1448:28:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721EnumerableUpgradeable_$2701_$","typeString":"type(contract IERC721EnumerableUpgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721EnumerableUpgradeable_$2701_$","typeString":"type(contract IERC721EnumerableUpgradeable)"}],"id":2349,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1443:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1443:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721EnumerableUpgradeable_$2701","typeString":"type(contract IERC721EnumerableUpgradeable)"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1478:11:12","memberName":"interfaceId","nodeType":"MemberAccess","src":"1443:46:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1428:61:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2356,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"1517:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2354,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1493:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721EnumerableUpgradeable_$2670_$","typeString":"type(contract super ERC721EnumerableUpgradeable)"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1499:17:12","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1324,"src":"1493:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1493:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1428:101:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2347,"id":2359,"nodeType":"Return","src":"1421:108:12"}]},"documentation":{"id":2338,"nodeType":"StructuredDocumentation","src":"1220:56:12","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2361,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1290:17:12","nodeType":"FunctionDefinition","overrides":{"id":2344,"nodeType":"OverrideSpecifier","overrides":[{"id":2342,"name":"IERC165Upgradeable","nameLocations":["1357:18:12"],"nodeType":"IdentifierPath","referencedDeclaration":3569,"src":"1357:18:12"},{"id":2343,"name":"ERC721Upgradeable","nameLocations":["1377:17:12"],"nodeType":"IdentifierPath","referencedDeclaration":2162,"src":"1377:17:12"}],"src":"1348:47:12"},"parameters":{"id":2341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2340,"mutability":"mutable","name":"interfaceId","nameLocation":"1315:11:12","nodeType":"VariableDeclaration","scope":2361,"src":"1308:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2339,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1308:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1307:20:12"},"returnParameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2361,"src":"1405:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2345,"name":"bool","nodeType":"ElementaryTypeName","src":"1405:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1404:6:12"},"scope":2670,"src":"1281:255:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2692],"body":{"id":2388,"nodeType":"Block","src":"1721:158:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2373,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"1739:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[{"id":2376,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"1775:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2374,"name":"ERC721Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"1747:17:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Upgradeable_$2162_$","typeString":"type(contract ERC721Upgradeable)"}},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1765:9:12","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1348,"src":"1747:27:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1747:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1739:42:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e6473","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1783:45:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","typeString":"literal_string \"ERC721Enumerable: owner index out of bounds\""},"value":"ERC721Enumerable: owner index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","typeString":"literal_string \"ERC721Enumerable: owner index out of bounds\""}],"id":2372,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1731:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1731:98:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2381,"nodeType":"ExpressionStatement","src":"1731:98:12"},{"expression":{"baseExpression":{"baseExpression":{"id":2382,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"1846:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2384,"indexExpression":{"id":2383,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"1859:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1846:19:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2386,"indexExpression":{"id":2385,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"1866:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1846:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2371,"id":2387,"nodeType":"Return","src":"1839:33:12"}]},"documentation":{"id":2362,"nodeType":"StructuredDocumentation","src":"1542:68:12","text":" @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."},"functionSelector":"2f745c59","id":2389,"implemented":true,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"1624:19:12","nodeType":"FunctionDefinition","overrides":{"id":2368,"nodeType":"OverrideSpecifier","overrides":[],"src":"1694:8:12"},"parameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2364,"mutability":"mutable","name":"owner","nameLocation":"1652:5:12","nodeType":"VariableDeclaration","scope":2389,"src":"1644:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2363,"name":"address","nodeType":"ElementaryTypeName","src":"1644:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2366,"mutability":"mutable","name":"index","nameLocation":"1667:5:12","nodeType":"VariableDeclaration","scope":2389,"src":"1659:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2365,"name":"uint256","nodeType":"ElementaryTypeName","src":"1659:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:30:12"},"returnParameters":{"id":2371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2389,"src":"1712:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2369,"name":"uint256","nodeType":"ElementaryTypeName","src":"1712:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1711:9:12"},"scope":2670,"src":"1615:264:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2682],"body":{"id":2399,"nodeType":"Block","src":"2020:41:12","statements":[{"expression":{"expression":{"id":2396,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"2037:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2048:6:12","memberName":"length","nodeType":"MemberAccess","src":"2037:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2395,"id":2398,"nodeType":"Return","src":"2030:24:12"}]},"documentation":{"id":2390,"nodeType":"StructuredDocumentation","src":"1885:60:12","text":" @dev See {IERC721Enumerable-totalSupply}."},"functionSelector":"18160ddd","id":2400,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1959:11:12","nodeType":"FunctionDefinition","overrides":{"id":2392,"nodeType":"OverrideSpecifier","overrides":[],"src":"1993:8:12"},"parameters":{"id":2391,"nodeType":"ParameterList","parameters":[],"src":"1970:2:12"},"returnParameters":{"id":2395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2400,"src":"2011:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2393,"name":"uint256","nodeType":"ElementaryTypeName","src":"2011:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2010:9:12"},"scope":2670,"src":"1950:111:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2700],"body":{"id":2422,"nodeType":"Block","src":"2217:157:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2410,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"2235:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2411,"name":"ERC721EnumerableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"2243:27:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721EnumerableUpgradeable_$2670_$","typeString":"type(contract ERC721EnumerableUpgradeable)"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2271:11:12","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":2400,"src":"2243:39:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2243:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2235:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473","id":2415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:46:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","typeString":"literal_string \"ERC721Enumerable: global index out of bounds\""},"value":"ERC721Enumerable: global index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","typeString":"literal_string \"ERC721Enumerable: global index out of bounds\""}],"id":2409,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2227:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2227:106:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2417,"nodeType":"ExpressionStatement","src":"2227:106:12"},{"expression":{"baseExpression":{"id":2418,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"2350:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2420,"indexExpression":{"id":2419,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"2361:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2350:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2408,"id":2421,"nodeType":"Return","src":"2343:24:12"}]},"documentation":{"id":2401,"nodeType":"StructuredDocumentation","src":"2067:61:12","text":" @dev See {IERC721Enumerable-tokenByIndex}."},"functionSelector":"4f6ccce7","id":2423,"implemented":true,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"2142:12:12","nodeType":"FunctionDefinition","overrides":{"id":2405,"nodeType":"OverrideSpecifier","overrides":[],"src":"2190:8:12"},"parameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"index","nameLocation":"2163:5:12","nodeType":"VariableDeclaration","scope":2423,"src":"2155:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2402,"name":"uint256","nodeType":"ElementaryTypeName","src":"2155:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2154:15:12"},"returnParameters":{"id":2408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2423,"src":"2208:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2406,"name":"uint256","nodeType":"ElementaryTypeName","src":"2208:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2207:9:12"},"scope":2670,"src":"2133:241:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2128],"body":{"id":2502,"nodeType":"Block","src":"2604:729:12","statements":[{"expression":{"arguments":[{"id":2439,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"2641:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2440,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"2647:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2441,"name":"firstTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"2651:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2442,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"2665:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2436,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2614:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721EnumerableUpgradeable_$2670_$","typeString":"type(contract super ERC721EnumerableUpgradeable)"}},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2620:20:12","memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":2128,"src":"2614:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2614:61:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2444,"nodeType":"ExpressionStatement","src":"2614:61:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2445,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"2690:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2702:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2690:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2453,"nodeType":"IfStatement","src":"2686:219:12","trueBody":{"id":2452,"nodeType":"Block","src":"2705:200:12","statements":[{"expression":{"arguments":[{"hexValue":"455243373231456e756d657261626c653a20636f6e7365637574697665207472616e7366657273206e6f7420737570706f72746564","id":2449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2838:55:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314","typeString":"literal_string \"ERC721Enumerable: consecutive transfers not supported\""},"value":"ERC721Enumerable: consecutive transfers not supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314","typeString":"literal_string \"ERC721Enumerable: consecutive transfers not supported\""}],"id":2448,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2831:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:63:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2451,"nodeType":"ExpressionStatement","src":"2831:63:12"}]}},{"assignments":[2455],"declarations":[{"constant":false,"id":2455,"mutability":"mutable","name":"tokenId","nameLocation":"2923:7:12","nodeType":"VariableDeclaration","scope":2502,"src":"2915:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2454,"name":"uint256","nodeType":"ElementaryTypeName","src":"2915:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2457,"initialValue":{"id":2456,"name":"firstTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"2933:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2915:30:12"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2458,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"2960:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2976:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2968:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2459,"name":"address","nodeType":"ElementaryTypeName","src":"2968:7:12","typeDescriptions":{}}},"id":2462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2968:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2960:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2469,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"3055:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2470,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"3063:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3055:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2478,"nodeType":"IfStatement","src":"3051:88:12","trueBody":{"id":2477,"nodeType":"Block","src":"3067:72:12","statements":[{"expression":{"arguments":[{"id":2473,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"3114:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2474,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"3120:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2472,"name":"_removeTokenFromOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"3081:32:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3081:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2476,"nodeType":"ExpressionStatement","src":"3081:47:12"}]}},"id":2479,"nodeType":"IfStatement","src":"2956:183:12","trueBody":{"id":2468,"nodeType":"Block","src":"2980:65:12","statements":[{"expression":{"arguments":[{"id":2465,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"3026:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2464,"name":"_addTokenToAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"2994:31:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2994:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2467,"nodeType":"ExpressionStatement","src":"2994:40:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2480,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"3152:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3166:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3158:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2481,"name":"address","nodeType":"ElementaryTypeName","src":"3158:7:12","typeDescriptions":{}}},"id":2484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3158:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3152:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2491,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"3250:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2492,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"3256:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3250:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2500,"nodeType":"IfStatement","src":"3246:81:12","trueBody":{"id":2499,"nodeType":"Block","src":"3262:65:12","statements":[{"expression":{"arguments":[{"id":2495,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"3304:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2496,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"3308:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2494,"name":"_addTokenToOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"3276:27:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3276:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2498,"nodeType":"ExpressionStatement","src":"3276:40:12"}]}},"id":2501,"nodeType":"IfStatement","src":"3148:179:12","trueBody":{"id":2490,"nodeType":"Block","src":"3170:70:12","statements":[{"expression":{"arguments":[{"id":2487,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"3221:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2486,"name":"_removeTokenFromAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"3184:36:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3184:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2489,"nodeType":"ExpressionStatement","src":"3184:45:12"}]}}]},"documentation":{"id":2424,"nodeType":"StructuredDocumentation","src":"2380:58:12","text":" @dev See {ERC721-_beforeTokenTransfer}."},"id":2503,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"2452:20:12","nodeType":"FunctionDefinition","overrides":{"id":2434,"nodeType":"OverrideSpecifier","overrides":[],"src":"2595:8:12"},"parameters":{"id":2433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2426,"mutability":"mutable","name":"from","nameLocation":"2490:4:12","nodeType":"VariableDeclaration","scope":2503,"src":"2482:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2425,"name":"address","nodeType":"ElementaryTypeName","src":"2482:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2428,"mutability":"mutable","name":"to","nameLocation":"2512:2:12","nodeType":"VariableDeclaration","scope":2503,"src":"2504:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2427,"name":"address","nodeType":"ElementaryTypeName","src":"2504:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2430,"mutability":"mutable","name":"firstTokenId","nameLocation":"2532:12:12","nodeType":"VariableDeclaration","scope":2503,"src":"2524:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2429,"name":"uint256","nodeType":"ElementaryTypeName","src":"2524:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2432,"mutability":"mutable","name":"batchSize","nameLocation":"2562:9:12","nodeType":"VariableDeclaration","scope":2503,"src":"2554:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2431,"name":"uint256","nodeType":"ElementaryTypeName","src":"2554:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2472:105:12"},"returnParameters":{"id":2435,"nodeType":"ParameterList","parameters":[],"src":"2604:0:12"},"scope":2670,"src":"2443:890:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2532,"nodeType":"Block","src":"3701:154:12","statements":[{"assignments":[2512],"declarations":[{"constant":false,"id":2512,"mutability":"mutable","name":"length","nameLocation":"3719:6:12","nodeType":"VariableDeclaration","scope":2532,"src":"3711:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2511,"name":"uint256","nodeType":"ElementaryTypeName","src":"3711:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2517,"initialValue":{"arguments":[{"id":2515,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"3756:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2513,"name":"ERC721Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"3728:17:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Upgradeable_$2162_$","typeString":"type(contract ERC721Upgradeable)"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3746:9:12","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1348,"src":"3728:27:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3728:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3711:48:12"},{"expression":{"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2518,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"3769:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2521,"indexExpression":{"id":2519,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"3782:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3769:16:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2522,"indexExpression":{"id":2520,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"3786:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3769:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2523,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"3796:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3769:34:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2525,"nodeType":"ExpressionStatement","src":"3769:34:12"},{"expression":{"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2526,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"3813:17:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2528,"indexExpression":{"id":2527,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"3831:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3813:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2529,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"3842:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3813:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2531,"nodeType":"ExpressionStatement","src":"3813:35:12"}]},"documentation":{"id":2504,"nodeType":"StructuredDocumentation","src":"3339:283:12","text":" @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"},"id":2533,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToOwnerEnumeration","nameLocation":"3636:27:12","nodeType":"FunctionDefinition","parameters":{"id":2509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2506,"mutability":"mutable","name":"to","nameLocation":"3672:2:12","nodeType":"VariableDeclaration","scope":2533,"src":"3664:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2505,"name":"address","nodeType":"ElementaryTypeName","src":"3664:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2508,"mutability":"mutable","name":"tokenId","nameLocation":"3684:7:12","nodeType":"VariableDeclaration","scope":2533,"src":"3676:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2507,"name":"uint256","nodeType":"ElementaryTypeName","src":"3676:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3663:29:12"},"returnParameters":{"id":2510,"nodeType":"ParameterList","parameters":[],"src":"3701:0:12"},"scope":2670,"src":"3627:228:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2552,"nodeType":"Block","src":"4116:95:12","statements":[{"expression":{"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2539,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"4126:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2541,"indexExpression":{"id":2540,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"4142:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4126:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2542,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"4153:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4164:6:12","memberName":"length","nodeType":"MemberAccess","src":"4153:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4126:44:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2545,"nodeType":"ExpressionStatement","src":"4126:44:12"},{"expression":{"arguments":[{"id":2549,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"4196:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2546,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"4180:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4191:4:12","memberName":"push","nodeType":"MemberAccess","src":"4180:15:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4180:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2551,"nodeType":"ExpressionStatement","src":"4180:24:12"}]},"documentation":{"id":2534,"nodeType":"StructuredDocumentation","src":"3861:184:12","text":" @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"},"id":2553,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToAllTokensEnumeration","nameLocation":"4059:31:12","nodeType":"FunctionDefinition","parameters":{"id":2537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2536,"mutability":"mutable","name":"tokenId","nameLocation":"4099:7:12","nodeType":"VariableDeclaration","scope":2553,"src":"4091:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2535,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4090:17:12"},"returnParameters":{"id":2538,"nodeType":"ParameterList","parameters":[],"src":"4116:0:12"},"scope":2670,"src":"4050:161:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2615,"nodeType":"Block","src":"4909:900:12","statements":[{"assignments":[2562],"declarations":[{"constant":false,"id":2562,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"5098:14:12","nodeType":"VariableDeclaration","scope":2615,"src":"5090:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2561,"name":"uint256","nodeType":"ElementaryTypeName","src":"5090:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2569,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2565,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"5143:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2563,"name":"ERC721Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"5115:17:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Upgradeable_$2162_$","typeString":"type(contract ERC721Upgradeable)"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5133:9:12","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1348,"src":"5115:27:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5115:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5151:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5115:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5090:62:12"},{"assignments":[2571],"declarations":[{"constant":false,"id":2571,"mutability":"mutable","name":"tokenIndex","nameLocation":"5170:10:12","nodeType":"VariableDeclaration","scope":2615,"src":"5162:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"5162:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2575,"initialValue":{"baseExpression":{"id":2572,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"5183:17:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2574,"indexExpression":{"id":2573,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"5201:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5183:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5162:47:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2576,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"5313:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2577,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"5327:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5313:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2602,"nodeType":"IfStatement","src":"5309:323:12","trueBody":{"id":2601,"nodeType":"Block","src":"5343:289:12","statements":[{"assignments":[2580],"declarations":[{"constant":false,"id":2580,"mutability":"mutable","name":"lastTokenId","nameLocation":"5365:11:12","nodeType":"VariableDeclaration","scope":2601,"src":"5357:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2579,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2586,"initialValue":{"baseExpression":{"baseExpression":{"id":2581,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"5379:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2583,"indexExpression":{"id":2582,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"5392:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5379:18:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2585,"indexExpression":{"id":2584,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"5398:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5379:34:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5357:56:12"},{"expression":{"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2587,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"5428:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2590,"indexExpression":{"id":2588,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"5441:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5428:18:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2591,"indexExpression":{"id":2589,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"5447:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5428:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2592,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"5461:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5428:44:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2594,"nodeType":"ExpressionStatement","src":"5428:44:12"},{"expression":{"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2595,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"5544:17:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2597,"indexExpression":{"id":2596,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"5562:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5544:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2598,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"5577:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5544:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2600,"nodeType":"ExpressionStatement","src":"5544:43:12"}]}},{"expression":{"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5718:33:12","subExpression":{"baseExpression":{"id":2603,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"5725:17:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2605,"indexExpression":{"id":2604,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"5743:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5725:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2607,"nodeType":"ExpressionStatement","src":"5718:33:12"},{"expression":{"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5761:41:12","subExpression":{"baseExpression":{"baseExpression":{"id":2608,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"5768:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2610,"indexExpression":{"id":2609,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"5781:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5768:18:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2612,"indexExpression":{"id":2611,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"5787:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5768:34:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2614,"nodeType":"ExpressionStatement","src":"5761:41:12"}]},"documentation":{"id":2554,"nodeType":"StructuredDocumentation","src":"4217:606:12","text":" @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"},"id":2616,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromOwnerEnumeration","nameLocation":"4837:32:12","nodeType":"FunctionDefinition","parameters":{"id":2559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2556,"mutability":"mutable","name":"from","nameLocation":"4878:4:12","nodeType":"VariableDeclaration","scope":2616,"src":"4870:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2555,"name":"address","nodeType":"ElementaryTypeName","src":"4870:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2558,"mutability":"mutable","name":"tokenId","nameLocation":"4892:7:12","nodeType":"VariableDeclaration","scope":2616,"src":"4884:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2557,"name":"uint256","nodeType":"ElementaryTypeName","src":"4884:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4869:31:12"},"returnParameters":{"id":2560,"nodeType":"ParameterList","parameters":[],"src":"4909:0:12"},"scope":2670,"src":"4828:981:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2663,"nodeType":"Block","src":"6168:990:12","statements":[{"assignments":[2623],"declarations":[{"constant":false,"id":2623,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"6354:14:12","nodeType":"VariableDeclaration","scope":2663,"src":"6346:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2622,"name":"uint256","nodeType":"ElementaryTypeName","src":"6346:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2628,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2624,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"6371:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6382:6:12","memberName":"length","nodeType":"MemberAccess","src":"6371:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6391:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6371:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6346:46:12"},{"assignments":[2630],"declarations":[{"constant":false,"id":2630,"mutability":"mutable","name":"tokenIndex","nameLocation":"6410:10:12","nodeType":"VariableDeclaration","scope":2663,"src":"6402:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2629,"name":"uint256","nodeType":"ElementaryTypeName","src":"6402:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2634,"initialValue":{"baseExpression":{"id":2631,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"6423:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2633,"indexExpression":{"id":2632,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"6439:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6423:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6402:45:12"},{"assignments":[2636],"declarations":[{"constant":false,"id":2636,"mutability":"mutable","name":"lastTokenId","nameLocation":"6777:11:12","nodeType":"VariableDeclaration","scope":2663,"src":"6769:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2635,"name":"uint256","nodeType":"ElementaryTypeName","src":"6769:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2640,"initialValue":{"baseExpression":{"id":2637,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"6791:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2639,"indexExpression":{"id":2638,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"6802:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6791:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6769:48:12"},{"expression":{"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2641,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"6828:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2643,"indexExpression":{"id":2642,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"6839:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6828:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2644,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"6853:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6828:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2646,"nodeType":"ExpressionStatement","src":"6828:36:12"},{"expression":{"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2647,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"6932:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2649,"indexExpression":{"id":2648,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"6948:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6932:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2650,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"6963:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6932:41:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2652,"nodeType":"ExpressionStatement","src":"6932:41:12"},{"expression":{"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"7094:31:12","subExpression":{"baseExpression":{"id":2653,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"7101:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2655,"indexExpression":{"id":2654,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"7117:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7101:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2657,"nodeType":"ExpressionStatement","src":"7094:31:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2658,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"7135:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7146:3:12","memberName":"pop","nodeType":"MemberAccess","src":"7135:14:12","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer)"}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7135:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2662,"nodeType":"ExpressionStatement","src":"7135:16:12"}]},"documentation":{"id":2617,"nodeType":"StructuredDocumentation","src":"5815:277:12","text":" @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"},"id":2664,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromAllTokensEnumeration","nameLocation":"6106:36:12","nodeType":"FunctionDefinition","parameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2619,"mutability":"mutable","name":"tokenId","nameLocation":"6151:7:12","nodeType":"VariableDeclaration","scope":2664,"src":"6143:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2618,"name":"uint256","nodeType":"ElementaryTypeName","src":"6143:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6142:17:12"},"returnParameters":{"id":2621,"nodeType":"ParameterList","parameters":[],"src":"6168:0:12"},"scope":2670,"src":"6097:1061:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"constant":false,"documentation":{"id":2665,"nodeType":"StructuredDocumentation","src":"7164:254:12","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2669,"mutability":"mutable","name":"__gap","nameLocation":"7443:5:12","nodeType":"VariableDeclaration","scope":2670,"src":"7423:25:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$46_storage","typeString":"uint256[46]"},"typeName":{"baseType":{"id":2666,"name":"uint256","nodeType":"ElementaryTypeName","src":"7423:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2668,"length":{"hexValue":"3436","id":2667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7431:2:12","typeDescriptions":{"typeIdentifier":"t_rational_46_by_1","typeString":"int_const 46"},"value":"46"},"nodeType":"ArrayTypeName","src":"7423:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$46_storage_ptr","typeString":"uint256[46]"}},"visibility":"private"}],"scope":2671,"src":"483:6968:12","usedErrors":[]}],"src":"128:7324:12"},"id":12},"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721EnumerableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721EnumerableUpgradeable.sol","exportedSymbols":{"IERC165Upgradeable":[3569],"IERC721EnumerableUpgradeable":[2701],"IERC721Upgradeable":[2296]},"id":2702,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2672,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"129:23:13"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol","file":"../IERC721Upgradeable.sol","id":2673,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2702,"sourceUnit":2297,"src":"154:35:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2675,"name":"IERC721Upgradeable","nameLocations":["370:18:13"],"nodeType":"IdentifierPath","referencedDeclaration":2296,"src":"370:18:13"},"id":2676,"nodeType":"InheritanceSpecifier","src":"370:18:13"}],"canonicalName":"IERC721EnumerableUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2674,"nodeType":"StructuredDocumentation","src":"191:136:13","text":" @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2701,"linearizedBaseContracts":[2701,2296,3569],"name":"IERC721EnumerableUpgradeable","nameLocation":"338:28:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2677,"nodeType":"StructuredDocumentation","src":"395:82:13","text":" @dev Returns the total amount of tokens stored by the contract."},"functionSelector":"18160ddd","id":2682,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"491:11:13","nodeType":"FunctionDefinition","parameters":{"id":2678,"nodeType":"ParameterList","parameters":[],"src":"502:2:13"},"returnParameters":{"id":2681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2682,"src":"528:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2679,"name":"uint256","nodeType":"ElementaryTypeName","src":"528:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"527:9:13"},"scope":2701,"src":"482:55:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2683,"nodeType":"StructuredDocumentation","src":"543:171:13","text":" @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"functionSelector":"2f745c59","id":2692,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"728:19:13","nodeType":"FunctionDefinition","parameters":{"id":2688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2685,"mutability":"mutable","name":"owner","nameLocation":"756:5:13","nodeType":"VariableDeclaration","scope":2692,"src":"748:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2684,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2687,"mutability":"mutable","name":"index","nameLocation":"771:5:13","nodeType":"VariableDeclaration","scope":2692,"src":"763:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2686,"name":"uint256","nodeType":"ElementaryTypeName","src":"763:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"747:30:13"},"returnParameters":{"id":2691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2692,"src":"801:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2689,"name":"uint256","nodeType":"ElementaryTypeName","src":"801:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"800:9:13"},"scope":2701,"src":"719:91:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2693,"nodeType":"StructuredDocumentation","src":"816:164:13","text":" @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."},"functionSelector":"4f6ccce7","id":2700,"implemented":false,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"994:12:13","nodeType":"FunctionDefinition","parameters":{"id":2696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2695,"mutability":"mutable","name":"index","nameLocation":"1015:5:13","nodeType":"VariableDeclaration","scope":2700,"src":"1007:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2694,"name":"uint256","nodeType":"ElementaryTypeName","src":"1007:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1006:15:13"},"returnParameters":{"id":2699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2700,"src":"1045:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2697,"name":"uint256","nodeType":"ElementaryTypeName","src":"1045:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1044:9:13"},"scope":2701,"src":"985:69:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2702,"src":"328:728:13","usedErrors":[]}],"src":"129:928:13"},"id":13},"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol","exportedSymbols":{"IERC165Upgradeable":[3569],"IERC721MetadataUpgradeable":[2728],"IERC721Upgradeable":[2296]},"id":2729,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2703,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:14"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol","file":"../IERC721Upgradeable.sol","id":2704,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2729,"sourceUnit":2297,"src":"137:35:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2706,"name":"IERC721Upgradeable","nameLocations":["348:18:14"],"nodeType":"IdentifierPath","referencedDeclaration":2296,"src":"348:18:14"},"id":2707,"nodeType":"InheritanceSpecifier","src":"348:18:14"}],"canonicalName":"IERC721MetadataUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2705,"nodeType":"StructuredDocumentation","src":"174:133:14","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2728,"linearizedBaseContracts":[2728,2296,3569],"name":"IERC721MetadataUpgradeable","nameLocation":"318:26:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2708,"nodeType":"StructuredDocumentation","src":"373:58:14","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2713,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"445:4:14","nodeType":"FunctionDefinition","parameters":{"id":2709,"nodeType":"ParameterList","parameters":[],"src":"449:2:14"},"returnParameters":{"id":2712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2713,"src":"475:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2710,"name":"string","nodeType":"ElementaryTypeName","src":"475:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"474:15:14"},"scope":2728,"src":"436:54:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2714,"nodeType":"StructuredDocumentation","src":"496:60:14","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2719,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"570:6:14","nodeType":"FunctionDefinition","parameters":{"id":2715,"nodeType":"ParameterList","parameters":[],"src":"576:2:14"},"returnParameters":{"id":2718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2719,"src":"602:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2716,"name":"string","nodeType":"ElementaryTypeName","src":"602:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"601:15:14"},"scope":2728,"src":"561:56:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2720,"nodeType":"StructuredDocumentation","src":"623:90:14","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2727,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"727:8:14","nodeType":"FunctionDefinition","parameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"tokenId","nameLocation":"744:7:14","nodeType":"VariableDeclaration","scope":2727,"src":"736:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2721,"name":"uint256","nodeType":"ElementaryTypeName","src":"736:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"735:17:14"},"returnParameters":{"id":2726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2727,"src":"776:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2724,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"775:15:14"},"scope":2728,"src":"718:73:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2729,"src":"308:485:14","usedErrors":[]}],"src":"112:682:14"},"id":14},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3058]},"id":3059,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2730,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2731,"nodeType":"StructuredDocumentation","src":"126:67:15","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":3058,"linearizedBaseContracts":[3058],"name":"AddressUpgradeable","nameLocation":"202:18:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":2745,"nodeType":"Block","src":"1489:254:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2739,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"1713:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:15","memberName":"code","nodeType":"MemberAccess","src":"1713:12:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:15","memberName":"length","nodeType":"MemberAccess","src":"1713:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2738,"id":2744,"nodeType":"Return","src":"1706:30:15"}]},"documentation":{"id":2732,"nodeType":"StructuredDocumentation","src":"227:1191:15","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2746,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:15","nodeType":"FunctionDefinition","parameters":{"id":2735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2734,"mutability":"mutable","name":"account","nameLocation":"1451:7:15","nodeType":"VariableDeclaration","scope":2746,"src":"1443:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2733,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:15"},"returnParameters":{"id":2738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2746,"src":"1483:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2736,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:15"},"scope":3058,"src":"1423:320:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2779,"nodeType":"Block","src":"2729:241:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2757,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$3058","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$3058","typeString":"library AddressUpgradeable"}],"id":2756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2755,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:15","typeDescriptions":{}}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:15","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2760,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"2772:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2754,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2764,"nodeType":"ExpressionStatement","src":"2739:73:15"},{"assignments":[2766,null],"declarations":[{"constant":false,"id":2766,"mutability":"mutable","name":"success","nameLocation":"2829:7:15","nodeType":"VariableDeclaration","scope":2779,"src":"2824:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2765,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2773,"initialValue":{"arguments":[{"hexValue":"","id":2771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2767,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"2842:9:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:15","memberName":"call","nodeType":"MemberAccess","src":"2842:14:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2769,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"2864:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:15"},{"expression":{"arguments":[{"id":2775,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"2893:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2774,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2778,"nodeType":"ExpressionStatement","src":"2885:78:15"}]},"documentation":{"id":2747,"nodeType":"StructuredDocumentation","src":"1749:904:15","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2780,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:15","nodeType":"FunctionDefinition","parameters":{"id":2752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2749,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:15","nodeType":"VariableDeclaration","scope":2780,"src":"2677:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2748,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:15","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2751,"mutability":"mutable","name":"amount","nameLocation":"2712:6:15","nodeType":"VariableDeclaration","scope":2780,"src":"2704:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2750,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:15"},"returnParameters":{"id":2753,"nodeType":"ParameterList","parameters":[],"src":"2729:0:15"},"scope":3058,"src":"2658:312:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2797,"nodeType":"Block","src":"3801:96:15","statements":[{"expression":{"arguments":[{"id":2791,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"3840:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2792,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"3848:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2790,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2838,2882],"referencedDeclaration":2882,"src":"3818:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2789,"id":2796,"nodeType":"Return","src":"3811:79:15"}]},"documentation":{"id":2781,"nodeType":"StructuredDocumentation","src":"2976:731:15","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2798,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:15","nodeType":"FunctionDefinition","parameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"mutability":"mutable","name":"target","nameLocation":"3742:6:15","nodeType":"VariableDeclaration","scope":2798,"src":"3734:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2782,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2785,"mutability":"mutable","name":"data","nameLocation":"3763:4:15","nodeType":"VariableDeclaration","scope":2798,"src":"3750:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2784,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:15"},"returnParameters":{"id":2789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2798,"src":"3787:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2787,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:15"},"scope":3058,"src":"3712:185:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2817,"nodeType":"Block","src":"4266:76:15","statements":[{"expression":{"arguments":[{"id":2811,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"4305:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2812,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"4313:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2814,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"4322:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2810,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2838,2882],"referencedDeclaration":2882,"src":"4283:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2809,"id":2816,"nodeType":"Return","src":"4276:59:15"}]},"documentation":{"id":2799,"nodeType":"StructuredDocumentation","src":"3903:211:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2818,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:15","nodeType":"FunctionDefinition","parameters":{"id":2806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2801,"mutability":"mutable","name":"target","nameLocation":"4158:6:15","nodeType":"VariableDeclaration","scope":2818,"src":"4150:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2800,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2803,"mutability":"mutable","name":"data","nameLocation":"4187:4:15","nodeType":"VariableDeclaration","scope":2818,"src":"4174:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2802,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2805,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:15","nodeType":"VariableDeclaration","scope":2818,"src":"4201:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2804,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:15"},"returnParameters":{"id":2809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2818,"src":"4252:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2807,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:15"},"scope":3058,"src":"4119:223:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2837,"nodeType":"Block","src":"4817:111:15","statements":[{"expression":{"arguments":[{"id":2831,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"4856:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2832,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"4864:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"4870:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2830,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2838,2882],"referencedDeclaration":2882,"src":"4834:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2829,"id":2836,"nodeType":"Return","src":"4827:94:15"}]},"documentation":{"id":2819,"nodeType":"StructuredDocumentation","src":"4348:351:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2838,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:15","nodeType":"FunctionDefinition","parameters":{"id":2826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2821,"mutability":"mutable","name":"target","nameLocation":"4743:6:15","nodeType":"VariableDeclaration","scope":2838,"src":"4735:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2820,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2823,"mutability":"mutable","name":"data","nameLocation":"4764:4:15","nodeType":"VariableDeclaration","scope":2838,"src":"4751:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2822,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2825,"mutability":"mutable","name":"value","nameLocation":"4778:5:15","nodeType":"VariableDeclaration","scope":2838,"src":"4770:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2824,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:15"},"returnParameters":{"id":2829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2838,"src":"4803:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2827,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:15"},"scope":3058,"src":"4704:224:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2881,"nodeType":"Block","src":"5355:267:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2855,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$3058","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$3058","typeString":"library AddressUpgradeable"}],"id":2854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2853,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:15","typeDescriptions":{}}},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:15","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"5398:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2852,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2862,"nodeType":"ExpressionStatement","src":"5365:81:15"},{"assignments":[2864,2866],"declarations":[{"constant":false,"id":2864,"mutability":"mutable","name":"success","nameLocation":"5462:7:15","nodeType":"VariableDeclaration","scope":2881,"src":"5457:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2863,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2866,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:15","nodeType":"VariableDeclaration","scope":2881,"src":"5471:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2865,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2873,"initialValue":{"arguments":[{"id":2871,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"5524:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2867,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"5498:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:15","memberName":"call","nodeType":"MemberAccess","src":"5498:11:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"5517:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:15"},{"expression":{"arguments":[{"id":2875,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"5573:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2876,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"5581:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2877,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"5590:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2878,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"5602:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2874,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"5546:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2851,"id":2880,"nodeType":"Return","src":"5539:76:15"}]},"documentation":{"id":2839,"nodeType":"StructuredDocumentation","src":"4934:237:15","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2882,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:15","nodeType":"FunctionDefinition","parameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2841,"mutability":"mutable","name":"target","nameLocation":"5224:6:15","nodeType":"VariableDeclaration","scope":2882,"src":"5216:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2840,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2843,"mutability":"mutable","name":"data","nameLocation":"5253:4:15","nodeType":"VariableDeclaration","scope":2882,"src":"5240:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2842,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2845,"mutability":"mutable","name":"value","nameLocation":"5275:5:15","nodeType":"VariableDeclaration","scope":2882,"src":"5267:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2844,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2847,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:15","nodeType":"VariableDeclaration","scope":2882,"src":"5290:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2846,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:15"},"returnParameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2882,"src":"5341:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2849,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:15"},"scope":3058,"src":"5176:446:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2898,"nodeType":"Block","src":"5899:97:15","statements":[{"expression":{"arguments":[{"id":2893,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"5935:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2894,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"5943:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2892,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2899,2928],"referencedDeclaration":2928,"src":"5916:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2891,"id":2897,"nodeType":"Return","src":"5909:80:15"}]},"documentation":{"id":2883,"nodeType":"StructuredDocumentation","src":"5628:166:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2899,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:15","nodeType":"FunctionDefinition","parameters":{"id":2888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2885,"mutability":"mutable","name":"target","nameLocation":"5835:6:15","nodeType":"VariableDeclaration","scope":2899,"src":"5827:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2884,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2887,"mutability":"mutable","name":"data","nameLocation":"5856:4:15","nodeType":"VariableDeclaration","scope":2899,"src":"5843:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2886,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:15"},"returnParameters":{"id":2891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2899,"src":"5885:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2889,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:15"},"scope":3058,"src":"5799:197:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2927,"nodeType":"Block","src":"6338:168:15","statements":[{"assignments":[2912,2914],"declarations":[{"constant":false,"id":2912,"mutability":"mutable","name":"success","nameLocation":"6354:7:15","nodeType":"VariableDeclaration","scope":2927,"src":"6349:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2911,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2914,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:15","nodeType":"VariableDeclaration","scope":2927,"src":"6363:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2913,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2919,"initialValue":{"arguments":[{"id":2917,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"6408:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2915,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"6390:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:15","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:15","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:15"},{"expression":{"arguments":[{"id":2921,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"6457:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2922,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"6465:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2923,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"6474:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2924,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"6486:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2920,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"6430:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2910,"id":2926,"nodeType":"Return","src":"6423:76:15"}]},"documentation":{"id":2900,"nodeType":"StructuredDocumentation","src":"6002:173:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2928,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:15","nodeType":"FunctionDefinition","parameters":{"id":2907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2902,"mutability":"mutable","name":"target","nameLocation":"6225:6:15","nodeType":"VariableDeclaration","scope":2928,"src":"6217:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2901,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2904,"mutability":"mutable","name":"data","nameLocation":"6254:4:15","nodeType":"VariableDeclaration","scope":2928,"src":"6241:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2903,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2906,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:15","nodeType":"VariableDeclaration","scope":2928,"src":"6268:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2905,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:15"},"returnParameters":{"id":2910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2928,"src":"6324:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2908,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:15"},"scope":3058,"src":"6180:326:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2944,"nodeType":"Block","src":"6782:101:15","statements":[{"expression":{"arguments":[{"id":2939,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"6820:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2940,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"6828:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2938,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2945,2974],"referencedDeclaration":2974,"src":"6799:20:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2937,"id":2943,"nodeType":"Return","src":"6792:84:15"}]},"documentation":{"id":2929,"nodeType":"StructuredDocumentation","src":"6512:168:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2945,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:15","nodeType":"FunctionDefinition","parameters":{"id":2934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2931,"mutability":"mutable","name":"target","nameLocation":"6723:6:15","nodeType":"VariableDeclaration","scope":2945,"src":"6715:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2930,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2933,"mutability":"mutable","name":"data","nameLocation":"6744:4:15","nodeType":"VariableDeclaration","scope":2945,"src":"6731:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2932,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:15"},"returnParameters":{"id":2937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2945,"src":"6768:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2935,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:15"},"scope":3058,"src":"6685:198:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2973,"nodeType":"Block","src":"7224:170:15","statements":[{"assignments":[2958,2960],"declarations":[{"constant":false,"id":2958,"mutability":"mutable","name":"success","nameLocation":"7240:7:15","nodeType":"VariableDeclaration","scope":2973,"src":"7235:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2957,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2960,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:15","nodeType":"VariableDeclaration","scope":2973,"src":"7249:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2959,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2965,"initialValue":{"arguments":[{"id":2963,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"7296:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2961,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"7276:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:15","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:15","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:15"},{"expression":{"arguments":[{"id":2967,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"7345:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2968,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"7353:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2969,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"7362:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2970,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"7374:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2966,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"7318:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2956,"id":2972,"nodeType":"Return","src":"7311:76:15"}]},"documentation":{"id":2946,"nodeType":"StructuredDocumentation","src":"6889:175:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2974,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:15","nodeType":"FunctionDefinition","parameters":{"id":2953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2948,"mutability":"mutable","name":"target","nameLocation":"7116:6:15","nodeType":"VariableDeclaration","scope":2974,"src":"7108:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2947,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2950,"mutability":"mutable","name":"data","nameLocation":"7145:4:15","nodeType":"VariableDeclaration","scope":2974,"src":"7132:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2949,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2952,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:15","nodeType":"VariableDeclaration","scope":2974,"src":"7159:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2951,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:15"},"returnParameters":{"id":2956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2974,"src":"7210:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2954,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:15"},"scope":3058,"src":"7069:325:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3012,"nodeType":"Block","src":"7876:434:15","statements":[{"condition":{"id":2988,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"7890:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3010,"nodeType":"Block","src":"8246:58:15","statements":[{"expression":{"arguments":[{"id":3006,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"8268:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3007,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"8280:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3005,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"8260:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3009,"nodeType":"ExpressionStatement","src":"8260:33:15"}]},"id":3011,"nodeType":"IfStatement","src":"7886:418:15","trueBody":{"id":3004,"nodeType":"Block","src":"7899:341:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2989,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"7917:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:15","memberName":"length","nodeType":"MemberAccess","src":"7917:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3001,"nodeType":"IfStatement","src":"7913:286:15","trueBody":{"id":3000,"nodeType":"Block","src":"7941:258:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":2995,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"8143:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2994,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"8132:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2993,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2999,"nodeType":"ExpressionStatement","src":"8124:60:15"}]}},{"expression":{"id":3002,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"8219:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2987,"id":3003,"nodeType":"Return","src":"8212:17:15"}]}}]},"documentation":{"id":2975,"nodeType":"StructuredDocumentation","src":"7400:277:15","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":3013,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:15","nodeType":"FunctionDefinition","parameters":{"id":2984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2977,"mutability":"mutable","name":"target","nameLocation":"7735:6:15","nodeType":"VariableDeclaration","scope":3013,"src":"7727:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2976,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2979,"mutability":"mutable","name":"success","nameLocation":"7756:7:15","nodeType":"VariableDeclaration","scope":3013,"src":"7751:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2978,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2981,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:15","nodeType":"VariableDeclaration","scope":3013,"src":"7773:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2980,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2983,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:15","nodeType":"VariableDeclaration","scope":3013,"src":"7806:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2982,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:15"},"returnParameters":{"id":2987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3013,"src":"7862:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2985,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:15"},"scope":3058,"src":"7682:628:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3036,"nodeType":"Block","src":"8691:135:15","statements":[{"condition":{"id":3025,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"8705:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3034,"nodeType":"Block","src":"8762:58:15","statements":[{"expression":{"arguments":[{"id":3030,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"8784:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3031,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"8796:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3029,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"8776:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3033,"nodeType":"ExpressionStatement","src":"8776:33:15"}]},"id":3035,"nodeType":"IfStatement","src":"8701:119:15","trueBody":{"id":3028,"nodeType":"Block","src":"8714:42:15","statements":[{"expression":{"id":3026,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"8735:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3024,"id":3027,"nodeType":"Return","src":"8728:17:15"}]}}]},"documentation":{"id":3014,"nodeType":"StructuredDocumentation","src":"8316:210:15","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":3037,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:15","nodeType":"FunctionDefinition","parameters":{"id":3021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3016,"mutability":"mutable","name":"success","nameLocation":"8571:7:15","nodeType":"VariableDeclaration","scope":3037,"src":"8566:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3015,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3018,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:15","nodeType":"VariableDeclaration","scope":3037,"src":"8588:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3017,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3020,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:15","nodeType":"VariableDeclaration","scope":3037,"src":"8621:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3019,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:15"},"returnParameters":{"id":3024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3037,"src":"8677:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3022,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:15"},"scope":3058,"src":"8531:295:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3056,"nodeType":"Block","src":"8915:457:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3044,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"8991:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:15","memberName":"length","nodeType":"MemberAccess","src":"8991:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3054,"nodeType":"Block","src":"9321:45:15","statements":[{"expression":{"arguments":[{"id":3051,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"9342:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3050,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3053,"nodeType":"ExpressionStatement","src":"9335:20:15"}]},"id":3055,"nodeType":"IfStatement","src":"8987:379:15","trueBody":{"id":3049,"nodeType":"Block","src":"9014:301:15","statements":[{"AST":{"nodeType":"YulBlock","src":"9172:133:15","statements":[{"nodeType":"YulVariableDeclaration","src":"9190:40:15","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9219:10:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9213:5:15"},"nodeType":"YulFunctionCall","src":"9213:17:15"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9194:15:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9258:2:15","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9262:10:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9254:3:15"},"nodeType":"YulFunctionCall","src":"9254:19:15"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9275:15:15"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9247:6:15"},"nodeType":"YulFunctionCall","src":"9247:44:15"},"nodeType":"YulExpressionStatement","src":"9247:44:15"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3039,"isOffset":false,"isSlot":false,"src":"9219:10:15","valueSize":1},{"declaration":3039,"isOffset":false,"isSlot":false,"src":"9262:10:15","valueSize":1}],"id":3048,"nodeType":"InlineAssembly","src":"9163:142:15"}]}}]},"id":3057,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:15","nodeType":"FunctionDefinition","parameters":{"id":3042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3039,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:15","nodeType":"VariableDeclaration","scope":3057,"src":"8849:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3038,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3041,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:15","nodeType":"VariableDeclaration","scope":3057,"src":"8874:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3040,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:15"},"returnParameters":{"id":3043,"nodeType":"ParameterList","parameters":[],"src":"8915:0:15"},"scope":3058,"src":"8832:540:15","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3059,"src":"194:9180:15","usedErrors":[]}],"src":"101:9274:15"},"id":15},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3058],"ContextUpgradeable":[3100],"Initializable":[1074]},"id":3101,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3060,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:16"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":3061,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3101,"sourceUnit":1075,"src":"110:42:16","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3063,"name":"Initializable","nameLocations":["691:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"691:13:16"},"id":3064,"nodeType":"InheritanceSpecifier","src":"691:13:16"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3062,"nodeType":"StructuredDocumentation","src":"154:496:16","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3100,"linearizedBaseContracts":[3100,1074],"name":"ContextUpgradeable","nameLocation":"669:18:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":3069,"nodeType":"Block","src":"763:7:16","statements":[]},"id":3070,"implemented":true,"kind":"function","modifiers":[{"id":3067,"kind":"modifierInvocation","modifierName":{"id":3066,"name":"onlyInitializing","nameLocations":["746:16:16"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"746:16:16"},"nodeType":"ModifierInvocation","src":"746:16:16"}],"name":"__Context_init","nameLocation":"720:14:16","nodeType":"FunctionDefinition","parameters":{"id":3065,"nodeType":"ParameterList","parameters":[],"src":"734:2:16"},"returnParameters":{"id":3068,"nodeType":"ParameterList","parameters":[],"src":"763:0:16"},"scope":3100,"src":"711:59:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3075,"nodeType":"Block","src":"838:7:16","statements":[]},"id":3076,"implemented":true,"kind":"function","modifiers":[{"id":3073,"kind":"modifierInvocation","modifierName":{"id":3072,"name":"onlyInitializing","nameLocations":["821:16:16"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"821:16:16"},"nodeType":"ModifierInvocation","src":"821:16:16"}],"name":"__Context_init_unchained","nameLocation":"785:24:16","nodeType":"FunctionDefinition","parameters":{"id":3071,"nodeType":"ParameterList","parameters":[],"src":"809:2:16"},"returnParameters":{"id":3074,"nodeType":"ParameterList","parameters":[],"src":"838:0:16"},"scope":3100,"src":"776:69:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3084,"nodeType":"Block","src":"912:34:16","statements":[{"expression":{"expression":{"id":3081,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"933:6:16","memberName":"sender","nodeType":"MemberAccess","src":"929:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3080,"id":3083,"nodeType":"Return","src":"922:17:16"}]},"id":3085,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:16","nodeType":"FunctionDefinition","parameters":{"id":3077,"nodeType":"ParameterList","parameters":[],"src":"869:2:16"},"returnParameters":{"id":3080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3085,"src":"903:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3078,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:16"},"scope":3100,"src":"850:96:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3093,"nodeType":"Block","src":"1019:32:16","statements":[{"expression":{"expression":{"id":3090,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1040:4:16","memberName":"data","nodeType":"MemberAccess","src":"1036:8:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3089,"id":3092,"nodeType":"Return","src":"1029:15:16"}]},"id":3094,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:16","nodeType":"FunctionDefinition","parameters":{"id":3086,"nodeType":"ParameterList","parameters":[],"src":"969:2:16"},"returnParameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3094,"src":"1003:14:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3087,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:16"},"scope":3100,"src":"952:99:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":3095,"nodeType":"StructuredDocumentation","src":"1057:254:16","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":3099,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:16","nodeType":"VariableDeclaration","scope":3100,"src":"1316:25:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":3096,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3098,"length":{"hexValue":"3530","id":3097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:16","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":3101,"src":"651:693:16","usedErrors":[]}],"src":"86:1259:16"},"id":16},"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","exportedSymbols":{"CountersUpgradeable":[3174]},"id":3175,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3102,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"CountersUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3103,"nodeType":"StructuredDocumentation","src":"112:311:17","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":3174,"linearizedBaseContracts":[3174],"name":"CountersUpgradeable","nameLocation":"432:19:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"CountersUpgradeable.Counter","id":3106,"members":[{"constant":false,"id":3105,"mutability":"mutable","name":"_value","nameLocation":"805:6:17","nodeType":"VariableDeclaration","scope":3106,"src":"797:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3104,"name":"uint256","nodeType":"ElementaryTypeName","src":"797:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"465:7:17","nodeType":"StructDefinition","scope":3174,"src":"458:374:17","visibility":"public"},{"body":{"id":3117,"nodeType":"Block","src":"912:38:17","statements":[{"expression":{"expression":{"id":3114,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"929:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3106_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":3115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"937:6:17","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3105,"src":"929:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3113,"id":3116,"nodeType":"Return","src":"922:21:17"}]},"id":3118,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"847:7:17","nodeType":"FunctionDefinition","parameters":{"id":3110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3109,"mutability":"mutable","name":"counter","nameLocation":"871:7:17","nodeType":"VariableDeclaration","scope":3118,"src":"855:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3106_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":3108,"nodeType":"UserDefinedTypeName","pathNode":{"id":3107,"name":"Counter","nameLocations":["855:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":3106,"src":"855:7:17"},"referencedDeclaration":3106,"src":"855:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3106_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"854:25:17"},"returnParameters":{"id":3113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3118,"src":"903:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3111,"name":"uint256","nodeType":"ElementaryTypeName","src":"903:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"902:9:17"},"scope":3174,"src":"838:112:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3131,"nodeType":"Block","src":"1009:70:17","statements":[{"id":3130,"nodeType":"UncheckedBlock","src":"1019:54:17","statements":[{"expression":{"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3124,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"1043:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3106_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":3126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1051:6:17","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3105,"src":"1043:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1061:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1043:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3129,"nodeType":"ExpressionStatement","src":"1043:19:17"}]}]},"id":3132,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"965:9:17","nodeType":"FunctionDefinition","parameters":{"id":3122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3121,"mutability":"mutable","name":"counter","nameLocation":"991:7:17","nodeType":"VariableDeclaration","scope":3132,"src":"975:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3106_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":3120,"nodeType":"UserDefinedTypeName","pathNode":{"id":3119,"name":"Counter","nameLocations":["975:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":3106,"src":"975:7:17"},"referencedDeclaration":3106,"src":"975:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3106_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"974:25:17"},"returnParameters":{"id":3123,"nodeType":"ParameterList","parameters":[],"src":"1009:0:17"},"scope":3174,"src":"956:123:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3159,"nodeType":"Block","src":"1138:176:17","statements":[{"assignments":[3139],"declarations":[{"constant":false,"id":3139,"mutability":"mutable","name":"value","nameLocation":"1156:5:17","nodeType":"VariableDeclaration","scope":3159,"src":"1148:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"1148:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3142,"initialValue":{"expression":{"id":3140,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"1164:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3106_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":3141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1172:6:17","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3105,"src":"1164:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1148:30:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"1196:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1204:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1196:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1207:29:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":3143,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1188:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1188:49:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3149,"nodeType":"ExpressionStatement","src":"1188:49:17"},{"id":3158,"nodeType":"UncheckedBlock","src":"1247:61:17","statements":[{"expression":{"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3150,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"1271:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3106_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":3152,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1279:6:17","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3105,"src":"1271:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"1288:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1296:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1288:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1271:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3157,"nodeType":"ExpressionStatement","src":"1271:26:17"}]}]},"id":3160,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1094:9:17","nodeType":"FunctionDefinition","parameters":{"id":3136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3135,"mutability":"mutable","name":"counter","nameLocation":"1120:7:17","nodeType":"VariableDeclaration","scope":3160,"src":"1104:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3106_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":3134,"nodeType":"UserDefinedTypeName","pathNode":{"id":3133,"name":"Counter","nameLocations":["1104:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":3106,"src":"1104:7:17"},"referencedDeclaration":3106,"src":"1104:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3106_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"1103:25:17"},"returnParameters":{"id":3137,"nodeType":"ParameterList","parameters":[],"src":"1138:0:17"},"scope":3174,"src":"1085:229:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3172,"nodeType":"Block","src":"1369:35:17","statements":[{"expression":{"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3166,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"1379:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3106_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":3168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1387:6:17","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3105,"src":"1379:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1396:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1379:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3171,"nodeType":"ExpressionStatement","src":"1379:18:17"}]},"id":3173,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1329:5:17","nodeType":"FunctionDefinition","parameters":{"id":3164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3163,"mutability":"mutable","name":"counter","nameLocation":"1351:7:17","nodeType":"VariableDeclaration","scope":3173,"src":"1335:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3106_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":3162,"nodeType":"UserDefinedTypeName","pathNode":{"id":3161,"name":"Counter","nameLocations":["1335:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":3106,"src":"1335:7:17"},"referencedDeclaration":3106,"src":"1335:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3106_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"1334:25:17"},"returnParameters":{"id":3165,"nodeType":"ParameterList","parameters":[],"src":"1369:0:17"},"scope":3174,"src":"1320:84:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3175,"src":"424:982:17","usedErrors":[]}],"src":"87:1320:17"},"id":17},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","exportedSymbols":{"StorageSlotUpgradeable":[3284]},"id":3285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3176,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlotUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3177,"nodeType":"StructuredDocumentation","src":"218:1201:18","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":3284,"linearizedBaseContracts":[3284],"name":"StorageSlotUpgradeable","nameLocation":"1428:22:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlotUpgradeable.AddressSlot","id":3180,"members":[{"constant":false,"id":3179,"mutability":"mutable","name":"value","nameLocation":"1494:5:18","nodeType":"VariableDeclaration","scope":3180,"src":"1486:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3178,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1464:11:18","nodeType":"StructDefinition","scope":3284,"src":"1457:49:18","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BooleanSlot","id":3183,"members":[{"constant":false,"id":3182,"mutability":"mutable","name":"value","nameLocation":"1546:5:18","nodeType":"VariableDeclaration","scope":3183,"src":"1541:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3181,"name":"bool","nodeType":"ElementaryTypeName","src":"1541:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1519:11:18","nodeType":"StructDefinition","scope":3284,"src":"1512:46:18","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Bytes32Slot","id":3186,"members":[{"constant":false,"id":3185,"mutability":"mutable","name":"value","nameLocation":"1601:5:18","nodeType":"VariableDeclaration","scope":3186,"src":"1593:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1593:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1571:11:18","nodeType":"StructDefinition","scope":3284,"src":"1564:49:18","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Uint256Slot","id":3189,"members":[{"constant":false,"id":3188,"mutability":"mutable","name":"value","nameLocation":"1656:5:18","nodeType":"VariableDeclaration","scope":3189,"src":"1648:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3187,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1626:11:18","nodeType":"StructDefinition","scope":3284,"src":"1619:49:18","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.StringSlot","id":3192,"members":[{"constant":false,"id":3191,"mutability":"mutable","name":"value","nameLocation":"1709:5:18","nodeType":"VariableDeclaration","scope":3192,"src":"1702:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3190,"name":"string","nodeType":"ElementaryTypeName","src":"1702:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1681:10:18","nodeType":"StructDefinition","scope":3284,"src":"1674:47:18","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BytesSlot","id":3195,"members":[{"constant":false,"id":3194,"mutability":"mutable","name":"value","nameLocation":"1760:5:18","nodeType":"VariableDeclaration","scope":3195,"src":"1754:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3193,"name":"bytes","nodeType":"ElementaryTypeName","src":"1754:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1734:9:18","nodeType":"StructDefinition","scope":3284,"src":"1727:45:18","visibility":"public"},{"body":{"id":3205,"nodeType":"Block","src":"1954:106:18","statements":[{"AST":{"nodeType":"YulBlock","src":"2016:38:18","statements":[{"nodeType":"YulAssignment","src":"2030:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"2040:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2030:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3202,"isOffset":false,"isSlot":true,"src":"2030:6:18","suffix":"slot","valueSize":1},{"declaration":3198,"isOffset":false,"isSlot":false,"src":"2040:4:18","valueSize":1}],"id":3204,"nodeType":"InlineAssembly","src":"2007:47:18"}]},"documentation":{"id":3196,"nodeType":"StructuredDocumentation","src":"1778:87:18","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":3206,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1879:14:18","nodeType":"FunctionDefinition","parameters":{"id":3199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3198,"mutability":"mutable","name":"slot","nameLocation":"1902:4:18","nodeType":"VariableDeclaration","scope":3206,"src":"1894:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1894:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1893:14:18"},"returnParameters":{"id":3203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3202,"mutability":"mutable","name":"r","nameLocation":"1951:1:18","nodeType":"VariableDeclaration","scope":3206,"src":"1931:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3180_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"},"typeName":{"id":3201,"nodeType":"UserDefinedTypeName","pathNode":{"id":3200,"name":"AddressSlot","nameLocations":["1931:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":3180,"src":"1931:11:18"},"referencedDeclaration":3180,"src":"1931:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3180_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"}},"visibility":"internal"}],"src":"1930:23:18"},"scope":3284,"src":"1870:190:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3216,"nodeType":"Block","src":"2242:106:18","statements":[{"AST":{"nodeType":"YulBlock","src":"2304:38:18","statements":[{"nodeType":"YulAssignment","src":"2318:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"2328:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2318:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3213,"isOffset":false,"isSlot":true,"src":"2318:6:18","suffix":"slot","valueSize":1},{"declaration":3209,"isOffset":false,"isSlot":false,"src":"2328:4:18","valueSize":1}],"id":3215,"nodeType":"InlineAssembly","src":"2295:47:18"}]},"documentation":{"id":3207,"nodeType":"StructuredDocumentation","src":"2066:87:18","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":3217,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2167:14:18","nodeType":"FunctionDefinition","parameters":{"id":3210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3209,"mutability":"mutable","name":"slot","nameLocation":"2190:4:18","nodeType":"VariableDeclaration","scope":3217,"src":"2182:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2182:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2181:14:18"},"returnParameters":{"id":3214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3213,"mutability":"mutable","name":"r","nameLocation":"2239:1:18","nodeType":"VariableDeclaration","scope":3217,"src":"2219:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3183_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"},"typeName":{"id":3212,"nodeType":"UserDefinedTypeName","pathNode":{"id":3211,"name":"BooleanSlot","nameLocations":["2219:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":3183,"src":"2219:11:18"},"referencedDeclaration":3183,"src":"2219:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3183_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"}},"visibility":"internal"}],"src":"2218:23:18"},"scope":3284,"src":"2158:190:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3227,"nodeType":"Block","src":"2530:106:18","statements":[{"AST":{"nodeType":"YulBlock","src":"2592:38:18","statements":[{"nodeType":"YulAssignment","src":"2606:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"2616:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2606:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3224,"isOffset":false,"isSlot":true,"src":"2606:6:18","suffix":"slot","valueSize":1},{"declaration":3220,"isOffset":false,"isSlot":false,"src":"2616:4:18","valueSize":1}],"id":3226,"nodeType":"InlineAssembly","src":"2583:47:18"}]},"documentation":{"id":3218,"nodeType":"StructuredDocumentation","src":"2354:87:18","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":3228,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2455:14:18","nodeType":"FunctionDefinition","parameters":{"id":3221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3220,"mutability":"mutable","name":"slot","nameLocation":"2478:4:18","nodeType":"VariableDeclaration","scope":3228,"src":"2470:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2470:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2469:14:18"},"returnParameters":{"id":3225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3224,"mutability":"mutable","name":"r","nameLocation":"2527:1:18","nodeType":"VariableDeclaration","scope":3228,"src":"2507:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3186_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"},"typeName":{"id":3223,"nodeType":"UserDefinedTypeName","pathNode":{"id":3222,"name":"Bytes32Slot","nameLocations":["2507:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":3186,"src":"2507:11:18"},"referencedDeclaration":3186,"src":"2507:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3186_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"}},"visibility":"internal"}],"src":"2506:23:18"},"scope":3284,"src":"2446:190:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3238,"nodeType":"Block","src":"2818:106:18","statements":[{"AST":{"nodeType":"YulBlock","src":"2880:38:18","statements":[{"nodeType":"YulAssignment","src":"2894:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"2904:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2894:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3235,"isOffset":false,"isSlot":true,"src":"2894:6:18","suffix":"slot","valueSize":1},{"declaration":3231,"isOffset":false,"isSlot":false,"src":"2904:4:18","valueSize":1}],"id":3237,"nodeType":"InlineAssembly","src":"2871:47:18"}]},"documentation":{"id":3229,"nodeType":"StructuredDocumentation","src":"2642:87:18","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":3239,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2743:14:18","nodeType":"FunctionDefinition","parameters":{"id":3232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3231,"mutability":"mutable","name":"slot","nameLocation":"2766:4:18","nodeType":"VariableDeclaration","scope":3239,"src":"2758:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2758:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2757:14:18"},"returnParameters":{"id":3236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3235,"mutability":"mutable","name":"r","nameLocation":"2815:1:18","nodeType":"VariableDeclaration","scope":3239,"src":"2795:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3189_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"},"typeName":{"id":3234,"nodeType":"UserDefinedTypeName","pathNode":{"id":3233,"name":"Uint256Slot","nameLocations":["2795:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":3189,"src":"2795:11:18"},"referencedDeclaration":3189,"src":"2795:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3189_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"}},"visibility":"internal"}],"src":"2794:23:18"},"scope":3284,"src":"2734:190:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3249,"nodeType":"Block","src":"3103:106:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3165:38:18","statements":[{"nodeType":"YulAssignment","src":"3179:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"3189:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3179:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3246,"isOffset":false,"isSlot":true,"src":"3179:6:18","suffix":"slot","valueSize":1},{"declaration":3242,"isOffset":false,"isSlot":false,"src":"3189:4:18","valueSize":1}],"id":3248,"nodeType":"InlineAssembly","src":"3156:47:18"}]},"documentation":{"id":3240,"nodeType":"StructuredDocumentation","src":"2930:86:18","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":3250,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3030:13:18","nodeType":"FunctionDefinition","parameters":{"id":3243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3242,"mutability":"mutable","name":"slot","nameLocation":"3052:4:18","nodeType":"VariableDeclaration","scope":3250,"src":"3044:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3044:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3043:14:18"},"returnParameters":{"id":3247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3246,"mutability":"mutable","name":"r","nameLocation":"3100:1:18","nodeType":"VariableDeclaration","scope":3250,"src":"3081:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3192_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"},"typeName":{"id":3245,"nodeType":"UserDefinedTypeName","pathNode":{"id":3244,"name":"StringSlot","nameLocations":["3081:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3192,"src":"3081:10:18"},"referencedDeclaration":3192,"src":"3081:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3192_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"}},"visibility":"internal"}],"src":"3080:22:18"},"scope":3284,"src":"3021:188:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3260,"nodeType":"Block","src":"3411:112:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3473:44:18","statements":[{"nodeType":"YulAssignment","src":"3487:20:18","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3497:10:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3487:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3257,"isOffset":false,"isSlot":true,"src":"3487:6:18","suffix":"slot","valueSize":1},{"declaration":3253,"isOffset":false,"isSlot":true,"src":"3497:10:18","suffix":"slot","valueSize":1}],"id":3259,"nodeType":"InlineAssembly","src":"3464:53:18"}]},"documentation":{"id":3251,"nodeType":"StructuredDocumentation","src":"3215:101:18","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":3261,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3330:13:18","nodeType":"FunctionDefinition","parameters":{"id":3254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3253,"mutability":"mutable","name":"store","nameLocation":"3359:5:18","nodeType":"VariableDeclaration","scope":3261,"src":"3344:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3252,"name":"string","nodeType":"ElementaryTypeName","src":"3344:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3343:22:18"},"returnParameters":{"id":3258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3257,"mutability":"mutable","name":"r","nameLocation":"3408:1:18","nodeType":"VariableDeclaration","scope":3261,"src":"3389:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3192_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"},"typeName":{"id":3256,"nodeType":"UserDefinedTypeName","pathNode":{"id":3255,"name":"StringSlot","nameLocations":["3389:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":3192,"src":"3389:10:18"},"referencedDeclaration":3192,"src":"3389:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3192_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"}},"visibility":"internal"}],"src":"3388:22:18"},"scope":3284,"src":"3321:202:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3271,"nodeType":"Block","src":"3699:106:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3761:38:18","statements":[{"nodeType":"YulAssignment","src":"3775:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"3785:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3775:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3268,"isOffset":false,"isSlot":true,"src":"3775:6:18","suffix":"slot","valueSize":1},{"declaration":3264,"isOffset":false,"isSlot":false,"src":"3785:4:18","valueSize":1}],"id":3270,"nodeType":"InlineAssembly","src":"3752:47:18"}]},"documentation":{"id":3262,"nodeType":"StructuredDocumentation","src":"3529:85:18","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":3272,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3628:12:18","nodeType":"FunctionDefinition","parameters":{"id":3265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3264,"mutability":"mutable","name":"slot","nameLocation":"3649:4:18","nodeType":"VariableDeclaration","scope":3272,"src":"3641:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3641:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3640:14:18"},"returnParameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"r","nameLocation":"3696:1:18","nodeType":"VariableDeclaration","scope":3272,"src":"3678:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3195_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"},"typeName":{"id":3267,"nodeType":"UserDefinedTypeName","pathNode":{"id":3266,"name":"BytesSlot","nameLocations":["3678:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":3195,"src":"3678:9:18"},"referencedDeclaration":3195,"src":"3678:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3195_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"}},"visibility":"internal"}],"src":"3677:21:18"},"scope":3284,"src":"3619:186:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3282,"nodeType":"Block","src":"4002:112:18","statements":[{"AST":{"nodeType":"YulBlock","src":"4064:44:18","statements":[{"nodeType":"YulAssignment","src":"4078:20:18","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4088:10:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4078:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3279,"isOffset":false,"isSlot":true,"src":"4078:6:18","suffix":"slot","valueSize":1},{"declaration":3275,"isOffset":false,"isSlot":true,"src":"4088:10:18","suffix":"slot","valueSize":1}],"id":3281,"nodeType":"InlineAssembly","src":"4055:53:18"}]},"documentation":{"id":3273,"nodeType":"StructuredDocumentation","src":"3811:99:18","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":3283,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3924:12:18","nodeType":"FunctionDefinition","parameters":{"id":3276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3275,"mutability":"mutable","name":"store","nameLocation":"3951:5:18","nodeType":"VariableDeclaration","scope":3283,"src":"3937:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3274,"name":"bytes","nodeType":"ElementaryTypeName","src":"3937:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3936:21:18"},"returnParameters":{"id":3280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3279,"mutability":"mutable","name":"r","nameLocation":"3999:1:18","nodeType":"VariableDeclaration","scope":3283,"src":"3981:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3195_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"},"typeName":{"id":3278,"nodeType":"UserDefinedTypeName","pathNode":{"id":3277,"name":"BytesSlot","nameLocations":["3981:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":3195,"src":"3981:9:18"},"referencedDeclaration":3195,"src":"3981:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3195_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"}},"visibility":"internal"}],"src":"3980:21:18"},"scope":3284,"src":"3915:199:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3285,"src":"1420:2696:18","usedErrors":[]}],"src":"193:3924:18"},"id":18},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","exportedSymbols":{"MathUpgradeable":[4435],"SignedMathUpgradeable":[4540],"StringsUpgradeable":[3513]},"id":3514,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3286,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:19"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","file":"./math/MathUpgradeable.sol","id":3287,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3514,"sourceUnit":4436,"src":"126:36:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol","file":"./math/SignedMathUpgradeable.sol","id":3288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3514,"sourceUnit":4541,"src":"163:42:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"StringsUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3289,"nodeType":"StructuredDocumentation","src":"207:34:19","text":" @dev String operations."},"fullyImplemented":true,"id":3513,"linearizedBaseContracts":[3513],"name":"StringsUpgradeable","nameLocation":"250:18:19","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3292,"mutability":"constant","name":"_SYMBOLS","nameLocation":"300:8:19","nodeType":"VariableDeclaration","scope":3513,"src":"275:54:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3290,"name":"bytes16","nodeType":"ElementaryTypeName","src":"275:7:19","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3295,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"358:15:19","nodeType":"VariableDeclaration","scope":3513,"src":"335:43:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3293,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"376:2:19","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":3342,"nodeType":"Block","src":"551:636:19","statements":[{"id":3341,"nodeType":"UncheckedBlock","src":"561:620:19","statements":[{"assignments":[3304],"declarations":[{"constant":false,"id":3304,"mutability":"mutable","name":"length","nameLocation":"593:6:19","nodeType":"VariableDeclaration","scope":3341,"src":"585:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3303,"name":"uint256","nodeType":"ElementaryTypeName","src":"585:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3311,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"624:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3305,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"602:15:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$4435_$","typeString":"type(library MathUpgradeable)"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"618:5:19","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4272,"src":"602:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"602:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"633:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"602:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"585:49:19"},{"assignments":[3313],"declarations":[{"constant":false,"id":3313,"mutability":"mutable","name":"buffer","nameLocation":"662:6:19","nodeType":"VariableDeclaration","scope":3341,"src":"648:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3312,"name":"string","nodeType":"ElementaryTypeName","src":"648:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3318,"initialValue":{"arguments":[{"id":3316,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"682:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"671:10:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3314,"name":"string","nodeType":"ElementaryTypeName","src":"675:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"671:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"648:41:19"},{"assignments":[3320],"declarations":[{"constant":false,"id":3320,"mutability":"mutable","name":"ptr","nameLocation":"711:3:19","nodeType":"VariableDeclaration","scope":3341,"src":"703:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3319,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3321,"nodeType":"VariableDeclarationStatement","src":"703:11:19"},{"AST":{"nodeType":"YulBlock","src":"784:67:19","statements":[{"nodeType":"YulAssignment","src":"802:35:19","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"813:6:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"825:2:19","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"829:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"821:3:19"},"nodeType":"YulFunctionCall","src":"821:15:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"809:3:19"},"nodeType":"YulFunctionCall","src":"809:28:19"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"802:3:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3313,"isOffset":false,"isSlot":false,"src":"813:6:19","valueSize":1},{"declaration":3304,"isOffset":false,"isSlot":false,"src":"829:6:19","valueSize":1},{"declaration":3320,"isOffset":false,"isSlot":false,"src":"802:3:19","valueSize":1}],"id":3322,"nodeType":"InlineAssembly","src":"775:76:19"},{"body":{"id":3337,"nodeType":"Block","src":"877:267:19","statements":[{"expression":{"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"895:5:19","subExpression":{"id":3324,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"895:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3326,"nodeType":"ExpressionStatement","src":"895:5:19"},{"AST":{"nodeType":"YulBlock","src":"978:84:19","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1008:3:19"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1022:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"1029:2:19","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1018:3:19"},"nodeType":"YulFunctionCall","src":"1018:14:19"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"1034:8:19"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1013:4:19"},"nodeType":"YulFunctionCall","src":"1013:30:19"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1000:7:19"},"nodeType":"YulFunctionCall","src":"1000:44:19"},"nodeType":"YulExpressionStatement","src":"1000:44:19"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3292,"isOffset":false,"isSlot":false,"src":"1034:8:19","valueSize":1},{"declaration":3320,"isOffset":false,"isSlot":false,"src":"1008:3:19","valueSize":1},{"declaration":3298,"isOffset":false,"isSlot":false,"src":"1022:5:19","valueSize":1}],"id":3327,"nodeType":"InlineAssembly","src":"969:93:19"},{"expression":{"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"1079:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1079:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3331,"nodeType":"ExpressionStatement","src":"1079:11:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"1112:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1121:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1112:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3336,"nodeType":"IfStatement","src":"1108:21:19","trueBody":{"id":3335,"nodeType":"Break","src":"1124:5:19"}}]},"condition":{"hexValue":"74727565","id":3323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"871:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3338,"nodeType":"WhileStatement","src":"864:280:19"},{"expression":{"id":3339,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"1164:6:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3302,"id":3340,"nodeType":"Return","src":"1157:13:19"}]}]},"documentation":{"id":3296,"nodeType":"StructuredDocumentation","src":"385:90:19","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3343,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"489:8:19","nodeType":"FunctionDefinition","parameters":{"id":3299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3298,"mutability":"mutable","name":"value","nameLocation":"506:5:19","nodeType":"VariableDeclaration","scope":3343,"src":"498:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3297,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"497:15:19"},"returnParameters":{"id":3302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3343,"src":"536:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3300,"name":"string","nodeType":"ElementaryTypeName","src":"536:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"535:15:19"},"scope":3513,"src":"480:707:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3370,"nodeType":"Block","src":"1357:114:19","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"1398:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1406:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1398:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1416:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1398:20:19","trueExpression":{"hexValue":"2d","id":3358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1410:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"1455:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3362,"name":"SignedMathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"1429:21:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMathUpgradeable_$4540_$","typeString":"type(library SignedMathUpgradeable)"}},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:3:19","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":4539,"src":"1429:25:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1429:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3361,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[3343,3371],"referencedDeclaration":3343,"src":"1420:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1420:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3353,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1381:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1385:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"1381:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1381:82:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1374:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3351,"name":"string","nodeType":"ElementaryTypeName","src":"1374:6:19","typeDescriptions":{}}},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1374:90:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3350,"id":3369,"nodeType":"Return","src":"1367:97:19"}]},"documentation":{"id":3344,"nodeType":"StructuredDocumentation","src":"1193:89:19","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3371,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1296:8:19","nodeType":"FunctionDefinition","parameters":{"id":3347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3346,"mutability":"mutable","name":"value","nameLocation":"1312:5:19","nodeType":"VariableDeclaration","scope":3371,"src":"1305:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3345,"name":"int256","nodeType":"ElementaryTypeName","src":"1305:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1304:14:19"},"returnParameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3371,"src":"1342:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3348,"name":"string","nodeType":"ElementaryTypeName","src":"1342:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1341:15:19"},"scope":3513,"src":"1287:184:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3390,"nodeType":"Block","src":"1650:111:19","statements":[{"id":3389,"nodeType":"UncheckedBlock","src":"1660:95:19","statements":[{"expression":{"arguments":[{"id":3380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"1703:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"1733:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3381,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"1710:15:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$4435_$","typeString":"type(library MathUpgradeable)"}},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:19","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4395,"src":"1710:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1710:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1742:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1710:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3379,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3391,3467,3487],"referencedDeclaration":3467,"src":"1691:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1691:53:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3378,"id":3388,"nodeType":"Return","src":"1684:60:19"}]}]},"documentation":{"id":3372,"nodeType":"StructuredDocumentation","src":"1477:94:19","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3391,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1585:11:19","nodeType":"FunctionDefinition","parameters":{"id":3375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3374,"mutability":"mutable","name":"value","nameLocation":"1605:5:19","nodeType":"VariableDeclaration","scope":3391,"src":"1597:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3373,"name":"uint256","nodeType":"ElementaryTypeName","src":"1597:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1596:15:19"},"returnParameters":{"id":3378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3391,"src":"1635:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3376,"name":"string","nodeType":"ElementaryTypeName","src":"1635:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1634:15:19"},"scope":3513,"src":"1576:185:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3466,"nodeType":"Block","src":"1974:347:19","statements":[{"assignments":[3402],"declarations":[{"constant":false,"id":3402,"mutability":"mutable","name":"buffer","nameLocation":"1997:6:19","nodeType":"VariableDeclaration","scope":3466,"src":"1984:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3401,"name":"bytes","nodeType":"ElementaryTypeName","src":"1984:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3411,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3406,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"2020:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2016:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2029:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2016:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2006:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3403,"name":"bytes","nodeType":"ElementaryTypeName","src":"2010:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2006:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1984:47:19"},{"expression":{"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3412,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"2041:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3414,"indexExpression":{"hexValue":"30","id":3413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2041:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2053:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2041:15:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3417,"nodeType":"ExpressionStatement","src":"2041:15:19"},{"expression":{"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3418,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"2066:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3420,"indexExpression":{"hexValue":"31","id":3419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2073:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2066:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2078:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2066:15:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3423,"nodeType":"ExpressionStatement","src":"2066:15:19"},{"body":{"id":3452,"nodeType":"Block","src":"2136:83:19","statements":[{"expression":{"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3438,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"2150:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3440,"indexExpression":{"id":3439,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"2157:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2150:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3441,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"2162:8:19","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3445,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"2171:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:3:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2171:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2162:21:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2150:33:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3447,"nodeType":"ExpressionStatement","src":"2150:33:19"},{"expression":{"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"2197:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2207:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2197:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3451,"nodeType":"ExpressionStatement","src":"2197:11:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3432,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"2124:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2128:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2124:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3453,"initializationExpression":{"assignments":[3425],"declarations":[{"constant":false,"id":3425,"mutability":"mutable","name":"i","nameLocation":"2104:1:19","nodeType":"VariableDeclaration","scope":3453,"src":"2096:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3424,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3431,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2108:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3427,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"2112:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2108:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2121:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2108:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2096:26:19"},"loopExpression":{"expression":{"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2131:3:19","subExpression":{"id":3435,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"2133:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3437,"nodeType":"ExpressionStatement","src":"2131:3:19"},"nodeType":"ForStatement","src":"2091:128:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"2236:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2245:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":3458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2248:34:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":3454,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2228:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2228:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3460,"nodeType":"ExpressionStatement","src":"2228:55:19"},{"expression":{"arguments":[{"id":3463,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"2307:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2300:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3461,"name":"string","nodeType":"ElementaryTypeName","src":"2300:6:19","typeDescriptions":{}}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3400,"id":3465,"nodeType":"Return","src":"2293:21:19"}]},"documentation":{"id":3392,"nodeType":"StructuredDocumentation","src":"1767:112:19","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3467,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1893:11:19","nodeType":"FunctionDefinition","parameters":{"id":3397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3394,"mutability":"mutable","name":"value","nameLocation":"1913:5:19","nodeType":"VariableDeclaration","scope":3467,"src":"1905:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3393,"name":"uint256","nodeType":"ElementaryTypeName","src":"1905:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3396,"mutability":"mutable","name":"length","nameLocation":"1928:6:19","nodeType":"VariableDeclaration","scope":3467,"src":"1920:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3395,"name":"uint256","nodeType":"ElementaryTypeName","src":"1920:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1904:31:19"},"returnParameters":{"id":3400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3467,"src":"1959:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3398,"name":"string","nodeType":"ElementaryTypeName","src":"1959:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1958:15:19"},"scope":3513,"src":"1884:437:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3486,"nodeType":"Block","src":"2546:76:19","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3480,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"2591:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2583:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3478,"name":"uint160","nodeType":"ElementaryTypeName","src":"2583:7:19","typeDescriptions":{}}},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2583:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2575:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3476,"name":"uint256","nodeType":"ElementaryTypeName","src":"2575:7:19","typeDescriptions":{}}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2575:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3483,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"2599:15:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3475,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3391,3467,3487],"referencedDeclaration":3467,"src":"2563:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2563:52:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3474,"id":3485,"nodeType":"Return","src":"2556:59:19"}]},"documentation":{"id":3468,"nodeType":"StructuredDocumentation","src":"2327:141:19","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":3487,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2482:11:19","nodeType":"FunctionDefinition","parameters":{"id":3471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3470,"mutability":"mutable","name":"addr","nameLocation":"2502:4:19","nodeType":"VariableDeclaration","scope":3487,"src":"2494:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3469,"name":"address","nodeType":"ElementaryTypeName","src":"2494:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2493:14:19"},"returnParameters":{"id":3474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3487,"src":"2531:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3472,"name":"string","nodeType":"ElementaryTypeName","src":"2531:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2530:15:19"},"scope":3513,"src":"2473:149:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3511,"nodeType":"Block","src":"2777:66:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3500,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"2810:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2804:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3498,"name":"bytes","nodeType":"ElementaryTypeName","src":"2804:5:19","typeDescriptions":{}}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2804:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3497,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2794:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2794:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3506,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"2833:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2827:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3504,"name":"bytes","nodeType":"ElementaryTypeName","src":"2827:5:19","typeDescriptions":{}}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2827:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3503,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2817:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2817:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2794:42:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3496,"id":3510,"nodeType":"Return","src":"2787:49:19"}]},"documentation":{"id":3488,"nodeType":"StructuredDocumentation","src":"2628:66:19","text":" @dev Returns true if the two strings are equal."},"id":3512,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2708:5:19","nodeType":"FunctionDefinition","parameters":{"id":3493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3490,"mutability":"mutable","name":"a","nameLocation":"2728:1:19","nodeType":"VariableDeclaration","scope":3512,"src":"2714:15:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3489,"name":"string","nodeType":"ElementaryTypeName","src":"2714:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3492,"mutability":"mutable","name":"b","nameLocation":"2745:1:19","nodeType":"VariableDeclaration","scope":3512,"src":"2731:15:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3491,"name":"string","nodeType":"ElementaryTypeName","src":"2731:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2713:34:19"},"returnParameters":{"id":3496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3512,"src":"2771:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3494,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:19"},"scope":3513,"src":"2699:144:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3514,"src":"242:2603:19","usedErrors":[]}],"src":"101:2745:19"},"id":19},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[3058],"ERC165Upgradeable":[3557],"IERC165Upgradeable":[3569],"Initializable":[1074]},"id":3558,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3515,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:20"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","file":"./IERC165Upgradeable.sol","id":3516,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3558,"sourceUnit":3570,"src":"124:34:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":3517,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3558,"sourceUnit":1075,"src":"159:45:20","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3519,"name":"Initializable","nameLocations":["822:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"822:13:20"},"id":3520,"nodeType":"InheritanceSpecifier","src":"822:13:20"},{"baseName":{"id":3521,"name":"IERC165Upgradeable","nameLocations":["837:18:20"],"nodeType":"IdentifierPath","referencedDeclaration":3569,"src":"837:18:20"},"id":3522,"nodeType":"InheritanceSpecifier","src":"837:18:20"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3518,"nodeType":"StructuredDocumentation","src":"206:576:20","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":3557,"linearizedBaseContracts":[3557,3569,1074],"name":"ERC165Upgradeable","nameLocation":"801:17:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":3527,"nodeType":"Block","src":"913:7:20","statements":[]},"id":3528,"implemented":true,"kind":"function","modifiers":[{"id":3525,"kind":"modifierInvocation","modifierName":{"id":3524,"name":"onlyInitializing","nameLocations":["896:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"896:16:20"},"nodeType":"ModifierInvocation","src":"896:16:20"}],"name":"__ERC165_init","nameLocation":"871:13:20","nodeType":"FunctionDefinition","parameters":{"id":3523,"nodeType":"ParameterList","parameters":[],"src":"884:2:20"},"returnParameters":{"id":3526,"nodeType":"ParameterList","parameters":[],"src":"913:0:20"},"scope":3557,"src":"862:58:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3533,"nodeType":"Block","src":"987:7:20","statements":[]},"id":3534,"implemented":true,"kind":"function","modifiers":[{"id":3531,"kind":"modifierInvocation","modifierName":{"id":3530,"name":"onlyInitializing","nameLocations":["970:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"970:16:20"},"nodeType":"ModifierInvocation","src":"970:16:20"}],"name":"__ERC165_init_unchained","nameLocation":"935:23:20","nodeType":"FunctionDefinition","parameters":{"id":3529,"nodeType":"ParameterList","parameters":[],"src":"958:2:20"},"returnParameters":{"id":3532,"nodeType":"ParameterList","parameters":[],"src":"987:0:20"},"scope":3557,"src":"926:68:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3568],"body":{"id":3550,"nodeType":"Block","src":"1151:75:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3543,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"1168:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3545,"name":"IERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"1188:18:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165Upgradeable_$3569_$","typeString":"type(contract IERC165Upgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165Upgradeable_$3569_$","typeString":"type(contract IERC165Upgradeable)"}],"id":3544,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1183:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1183:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165Upgradeable_$3569","typeString":"type(contract IERC165Upgradeable)"}},"id":3547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1208:11:20","memberName":"interfaceId","nodeType":"MemberAccess","src":"1183:36:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1168:51:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3542,"id":3549,"nodeType":"Return","src":"1161:58:20"}]},"documentation":{"id":3535,"nodeType":"StructuredDocumentation","src":"999:56:20","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3551,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1069:17:20","nodeType":"FunctionDefinition","overrides":{"id":3539,"nodeType":"OverrideSpecifier","overrides":[],"src":"1127:8:20"},"parameters":{"id":3538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3537,"mutability":"mutable","name":"interfaceId","nameLocation":"1094:11:20","nodeType":"VariableDeclaration","scope":3551,"src":"1087:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3536,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1087:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1086:20:20"},"returnParameters":{"id":3542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3551,"src":"1145:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3540,"name":"bool","nodeType":"ElementaryTypeName","src":"1145:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1144:6:20"},"scope":3557,"src":"1060:166:20","stateMutability":"view","virtual":true,"visibility":"public"},{"constant":false,"documentation":{"id":3552,"nodeType":"StructuredDocumentation","src":"1232:254:20","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":3556,"mutability":"mutable","name":"__gap","nameLocation":"1511:5:20","nodeType":"VariableDeclaration","scope":3557,"src":"1491:25:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":3553,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3555,"length":{"hexValue":"3530","id":3554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1499:2:20","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1491:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":3558,"src":"783:736:20","usedErrors":[]}],"src":"99:1421:20"},"id":20},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","exportedSymbols":{"IERC165Upgradeable":[3569]},"id":3570,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3559,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:21"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":3560,"nodeType":"StructuredDocumentation","src":"125:279:21","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3569,"linearizedBaseContracts":[3569],"name":"IERC165Upgradeable","nameLocation":"415:18:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3561,"nodeType":"StructuredDocumentation","src":"440:340:21","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3568,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"794:17:21","nodeType":"FunctionDefinition","parameters":{"id":3564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3563,"mutability":"mutable","name":"interfaceId","nameLocation":"819:11:21","nodeType":"VariableDeclaration","scope":3568,"src":"812:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3562,"name":"bytes4","nodeType":"ElementaryTypeName","src":"812:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"811:20:21"},"returnParameters":{"id":3567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3568,"src":"855:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3565,"name":"bool","nodeType":"ElementaryTypeName","src":"855:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"854:6:21"},"scope":3569,"src":"785:76:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3570,"src":"405:458:21","usedErrors":[]}],"src":"100:764:21"},"id":21},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","exportedSymbols":{"MathUpgradeable":[4435]},"id":4436,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3571,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:22"},{"abstract":false,"baseContracts":[],"canonicalName":"MathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3572,"nodeType":"StructuredDocumentation","src":"128:73:22","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4435,"linearizedBaseContracts":[4435],"name":"MathUpgradeable","nameLocation":"210:15:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"MathUpgradeable.Rounding","id":3576,"members":[{"id":3573,"name":"Down","nameLocation":"256:4:22","nodeType":"EnumValue","src":"256:4:22"},{"id":3574,"name":"Up","nameLocation":"298:2:22","nodeType":"EnumValue","src":"298:2:22"},{"id":3575,"name":"Zero","nameLocation":"329:4:22","nodeType":"EnumValue","src":"329:4:22"}],"name":"Rounding","nameLocation":"237:8:22","nodeType":"EnumDefinition","src":"232:122:22"},{"body":{"id":3593,"nodeType":"Block","src":"491:37:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3586,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"508:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3587,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"512:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"508:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3590,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"520:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"508:13:22","trueExpression":{"id":3589,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"516:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3585,"id":3592,"nodeType":"Return","src":"501:20:22"}]},"documentation":{"id":3577,"nodeType":"StructuredDocumentation","src":"360:59:22","text":" @dev Returns the largest of two numbers."},"id":3594,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"433:3:22","nodeType":"FunctionDefinition","parameters":{"id":3582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3579,"mutability":"mutable","name":"a","nameLocation":"445:1:22","nodeType":"VariableDeclaration","scope":3594,"src":"437:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3578,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3581,"mutability":"mutable","name":"b","nameLocation":"456:1:22","nodeType":"VariableDeclaration","scope":3594,"src":"448:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3580,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"436:22:22"},"returnParameters":{"id":3585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3594,"src":"482:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3583,"name":"uint256","nodeType":"ElementaryTypeName","src":"482:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"481:9:22"},"scope":4435,"src":"424:104:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3611,"nodeType":"Block","src":"666:37:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3604,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"683:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3605,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"687:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"683:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3608,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"695:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"683:13:22","trueExpression":{"id":3607,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"691:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3603,"id":3610,"nodeType":"Return","src":"676:20:22"}]},"documentation":{"id":3595,"nodeType":"StructuredDocumentation","src":"534:60:22","text":" @dev Returns the smallest of two numbers."},"id":3612,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"608:3:22","nodeType":"FunctionDefinition","parameters":{"id":3600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3597,"mutability":"mutable","name":"a","nameLocation":"620:1:22","nodeType":"VariableDeclaration","scope":3612,"src":"612:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3596,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3599,"mutability":"mutable","name":"b","nameLocation":"631:1:22","nodeType":"VariableDeclaration","scope":3612,"src":"623:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3598,"name":"uint256","nodeType":"ElementaryTypeName","src":"623:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"611:22:22"},"returnParameters":{"id":3603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3612,"src":"657:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3601,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:9:22"},"scope":4435,"src":"599:104:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3634,"nodeType":"Block","src":"887:82:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3622,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"942:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3623,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"946:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"942:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3625,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"941:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3626,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"952:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3627,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"956:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"952:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3629,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"951:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"961:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"951:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3621,"id":3633,"nodeType":"Return","src":"934:28:22"}]},"documentation":{"id":3613,"nodeType":"StructuredDocumentation","src":"709:102:22","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3635,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"825:7:22","nodeType":"FunctionDefinition","parameters":{"id":3618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3615,"mutability":"mutable","name":"a","nameLocation":"841:1:22","nodeType":"VariableDeclaration","scope":3635,"src":"833:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3614,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3617,"mutability":"mutable","name":"b","nameLocation":"852:1:22","nodeType":"VariableDeclaration","scope":3635,"src":"844:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3616,"name":"uint256","nodeType":"ElementaryTypeName","src":"844:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:22:22"},"returnParameters":{"id":3621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3635,"src":"878:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3619,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"877:9:22"},"scope":4435,"src":"816:153:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3659,"nodeType":"Block","src":"1239:123:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3645,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"1327:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1332:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1327:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3649,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"1341:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1345:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1341:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3652,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1340:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3653,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"1350:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1340:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1354:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1340:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1327:28:22","trueExpression":{"hexValue":"30","id":3648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1336:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3644,"id":3658,"nodeType":"Return","src":"1320:35:22"}]},"documentation":{"id":3636,"nodeType":"StructuredDocumentation","src":"975:188:22","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":3660,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1177:7:22","nodeType":"FunctionDefinition","parameters":{"id":3641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3638,"mutability":"mutable","name":"a","nameLocation":"1193:1:22","nodeType":"VariableDeclaration","scope":3660,"src":"1185:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3637,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3640,"mutability":"mutable","name":"b","nameLocation":"1204:1:22","nodeType":"VariableDeclaration","scope":3660,"src":"1196:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3639,"name":"uint256","nodeType":"ElementaryTypeName","src":"1196:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1184:22:22"},"returnParameters":{"id":3644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3660,"src":"1230:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3642,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1229:9:22"},"scope":4435,"src":"1168:194:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3782,"nodeType":"Block","src":"1776:4115:22","statements":[{"id":3781,"nodeType":"UncheckedBlock","src":"1786:4099:22","statements":[{"assignments":[3673],"declarations":[{"constant":false,"id":3673,"mutability":"mutable","name":"prod0","nameLocation":"2115:5:22","nodeType":"VariableDeclaration","scope":3781,"src":"2107:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3672,"name":"uint256","nodeType":"ElementaryTypeName","src":"2107:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3674,"nodeType":"VariableDeclarationStatement","src":"2107:13:22"},{"assignments":[3676],"declarations":[{"constant":false,"id":3676,"mutability":"mutable","name":"prod1","nameLocation":"2187:5:22","nodeType":"VariableDeclaration","scope":3781,"src":"2179:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3675,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3677,"nodeType":"VariableDeclarationStatement","src":"2179:13:22"},{"AST":{"nodeType":"YulBlock","src":"2259:157:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2277:30:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2294:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"2297:1:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2304:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2300:3:22"},"nodeType":"YulFunctionCall","src":"2300:6:22"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2287:6:22"},"nodeType":"YulFunctionCall","src":"2287:20:22"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2281:2:22","type":""}]},{"nodeType":"YulAssignment","src":"2324:18:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2337:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"2340:1:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2333:3:22"},"nodeType":"YulFunctionCall","src":"2333:9:22"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2324:5:22"}]},{"nodeType":"YulAssignment","src":"2359:43:22","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2376:2:22"},{"name":"prod0","nodeType":"YulIdentifier","src":"2380:5:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2372:3:22"},"nodeType":"YulFunctionCall","src":"2372:14:22"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2391:2:22"},{"name":"prod0","nodeType":"YulIdentifier","src":"2395:5:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2388:2:22"},"nodeType":"YulFunctionCall","src":"2388:13:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2368:3:22"},"nodeType":"YulFunctionCall","src":"2368:34:22"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2359:5:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3673,"isOffset":false,"isSlot":false,"src":"2324:5:22","valueSize":1},{"declaration":3673,"isOffset":false,"isSlot":false,"src":"2380:5:22","valueSize":1},{"declaration":3673,"isOffset":false,"isSlot":false,"src":"2395:5:22","valueSize":1},{"declaration":3676,"isOffset":false,"isSlot":false,"src":"2359:5:22","valueSize":1},{"declaration":3663,"isOffset":false,"isSlot":false,"src":"2294:1:22","valueSize":1},{"declaration":3663,"isOffset":false,"isSlot":false,"src":"2337:1:22","valueSize":1},{"declaration":3665,"isOffset":false,"isSlot":false,"src":"2297:1:22","valueSize":1},{"declaration":3665,"isOffset":false,"isSlot":false,"src":"2340:1:22","valueSize":1}],"id":3678,"nodeType":"InlineAssembly","src":"2250:166:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3679,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"2497:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2506:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2497:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3687,"nodeType":"IfStatement","src":"2493:368:22","trueBody":{"id":3686,"nodeType":"Block","src":"2509:352:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3682,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"2827:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3683,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"2835:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2827:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3671,"id":3685,"nodeType":"Return","src":"2820:26:22"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3689,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"2971:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3690,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"2985:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2971:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":3692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2992:23:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":3688,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2963:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2963:53:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3694,"nodeType":"ExpressionStatement","src":"2963:53:22"},{"assignments":[3696],"declarations":[{"constant":false,"id":3696,"mutability":"mutable","name":"remainder","nameLocation":"3280:9:22","nodeType":"VariableDeclaration","scope":3781,"src":"3272:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3695,"name":"uint256","nodeType":"ElementaryTypeName","src":"3272:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3697,"nodeType":"VariableDeclarationStatement","src":"3272:17:22"},{"AST":{"nodeType":"YulBlock","src":"3312:291:22","statements":[{"nodeType":"YulAssignment","src":"3381:38:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3401:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"3404:1:22"},{"name":"denominator","nodeType":"YulIdentifier","src":"3407:11:22"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3394:6:22"},"nodeType":"YulFunctionCall","src":"3394:25:22"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3381:9:22"}]},{"nodeType":"YulAssignment","src":"3501:41:22","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3514:5:22"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3524:9:22"},{"name":"prod0","nodeType":"YulIdentifier","src":"3535:5:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3521:2:22"},"nodeType":"YulFunctionCall","src":"3521:20:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3510:3:22"},"nodeType":"YulFunctionCall","src":"3510:32:22"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3501:5:22"}]},{"nodeType":"YulAssignment","src":"3559:30:22","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3572:5:22"},{"name":"remainder","nodeType":"YulIdentifier","src":"3579:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3568:3:22"},"nodeType":"YulFunctionCall","src":"3568:21:22"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3559:5:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3667,"isOffset":false,"isSlot":false,"src":"3407:11:22","valueSize":1},{"declaration":3673,"isOffset":false,"isSlot":false,"src":"3535:5:22","valueSize":1},{"declaration":3673,"isOffset":false,"isSlot":false,"src":"3559:5:22","valueSize":1},{"declaration":3673,"isOffset":false,"isSlot":false,"src":"3572:5:22","valueSize":1},{"declaration":3676,"isOffset":false,"isSlot":false,"src":"3501:5:22","valueSize":1},{"declaration":3676,"isOffset":false,"isSlot":false,"src":"3514:5:22","valueSize":1},{"declaration":3696,"isOffset":false,"isSlot":false,"src":"3381:9:22","valueSize":1},{"declaration":3696,"isOffset":false,"isSlot":false,"src":"3524:9:22","valueSize":1},{"declaration":3696,"isOffset":false,"isSlot":false,"src":"3579:9:22","valueSize":1},{"declaration":3663,"isOffset":false,"isSlot":false,"src":"3401:1:22","valueSize":1},{"declaration":3665,"isOffset":false,"isSlot":false,"src":"3404:1:22","valueSize":1}],"id":3698,"nodeType":"InlineAssembly","src":"3303:300:22"},{"assignments":[3700],"declarations":[{"constant":false,"id":3700,"mutability":"mutable","name":"twos","nameLocation":"3918:4:22","nodeType":"VariableDeclaration","scope":3781,"src":"3910:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3699,"name":"uint256","nodeType":"ElementaryTypeName","src":"3910:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3708,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3701,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"3925:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3940:12:22","subExpression":{"id":3702,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"3941:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3955:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3940:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3706,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3939:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3925:32:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3910:47:22"},{"AST":{"nodeType":"YulBlock","src":"3980:362:22","statements":[{"nodeType":"YulAssignment","src":"4045:37:22","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4064:11:22"},{"name":"twos","nodeType":"YulIdentifier","src":"4077:4:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4060:3:22"},"nodeType":"YulFunctionCall","src":"4060:22:22"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4045:11:22"}]},{"nodeType":"YulAssignment","src":"4149:25:22","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4162:5:22"},{"name":"twos","nodeType":"YulIdentifier","src":"4169:4:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4158:3:22"},"nodeType":"YulFunctionCall","src":"4158:16:22"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4149:5:22"}]},{"nodeType":"YulAssignment","src":"4289:39:22","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4309:1:22","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4312:4:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4305:3:22"},"nodeType":"YulFunctionCall","src":"4305:12:22"},{"name":"twos","nodeType":"YulIdentifier","src":"4319:4:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4301:3:22"},"nodeType":"YulFunctionCall","src":"4301:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"4326:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4297:3:22"},"nodeType":"YulFunctionCall","src":"4297:31:22"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4289:4:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3667,"isOffset":false,"isSlot":false,"src":"4045:11:22","valueSize":1},{"declaration":3667,"isOffset":false,"isSlot":false,"src":"4064:11:22","valueSize":1},{"declaration":3673,"isOffset":false,"isSlot":false,"src":"4149:5:22","valueSize":1},{"declaration":3673,"isOffset":false,"isSlot":false,"src":"4162:5:22","valueSize":1},{"declaration":3700,"isOffset":false,"isSlot":false,"src":"4077:4:22","valueSize":1},{"declaration":3700,"isOffset":false,"isSlot":false,"src":"4169:4:22","valueSize":1},{"declaration":3700,"isOffset":false,"isSlot":false,"src":"4289:4:22","valueSize":1},{"declaration":3700,"isOffset":false,"isSlot":false,"src":"4312:4:22","valueSize":1},{"declaration":3700,"isOffset":false,"isSlot":false,"src":"4319:4:22","valueSize":1}],"id":3709,"nodeType":"InlineAssembly","src":"3971:371:22"},{"expression":{"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3710,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"4408:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3711,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"4417:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3712,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"4425:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4417:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4408:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3715,"nodeType":"ExpressionStatement","src":"4408:21:22"},{"assignments":[3717],"declarations":[{"constant":false,"id":3717,"mutability":"mutable","name":"inverse","nameLocation":"4755:7:22","nodeType":"VariableDeclaration","scope":3781,"src":"4747:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3716,"name":"uint256","nodeType":"ElementaryTypeName","src":"4747:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3724,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4766:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3719,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"4770:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4766:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3721,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4765:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4785:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4765:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4747:39:22"},{"expression":{"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3725,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"5003:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5014:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3727,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"5018:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3728,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"5032:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5018:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5014:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3732,"nodeType":"ExpressionStatement","src":"5003:36:22"},{"expression":{"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3733,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"5072:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5083:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3735,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"5087:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3736,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"5101:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5087:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5083:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3740,"nodeType":"ExpressionStatement","src":"5072:36:22"},{"expression":{"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3741,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"5142:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5153:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3743,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"5157:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3744,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"5171:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5153:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3748,"nodeType":"ExpressionStatement","src":"5142:36:22"},{"expression":{"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3749,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"5212:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5223:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3751,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"5227:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3752,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"5241:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5227:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5223:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3756,"nodeType":"ExpressionStatement","src":"5212:36:22"},{"expression":{"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3757,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"5282:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5293:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3759,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"5297:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3760,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"5311:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5297:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5293:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3764,"nodeType":"ExpressionStatement","src":"5282:36:22"},{"expression":{"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3765,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"5353:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5364:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3767,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"5368:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3768,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"5382:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5368:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5364:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3772,"nodeType":"ExpressionStatement","src":"5353:36:22"},{"expression":{"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3773,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"5823:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3774,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"5832:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3775,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"5840:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5832:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5823:24:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3778,"nodeType":"ExpressionStatement","src":"5823:24:22"},{"expression":{"id":3779,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"5868:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3671,"id":3780,"nodeType":"Return","src":"5861:13:22"}]}]},"documentation":{"id":3661,"nodeType":"StructuredDocumentation","src":"1368:305:22","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":3783,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1687:6:22","nodeType":"FunctionDefinition","parameters":{"id":3668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3663,"mutability":"mutable","name":"x","nameLocation":"1702:1:22","nodeType":"VariableDeclaration","scope":3783,"src":"1694:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3662,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3665,"mutability":"mutable","name":"y","nameLocation":"1713:1:22","nodeType":"VariableDeclaration","scope":3783,"src":"1705:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3664,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3667,"mutability":"mutable","name":"denominator","nameLocation":"1724:11:22","nodeType":"VariableDeclaration","scope":3783,"src":"1716:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3666,"name":"uint256","nodeType":"ElementaryTypeName","src":"1716:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1693:43:22"},"returnParameters":{"id":3671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3670,"mutability":"mutable","name":"result","nameLocation":"1768:6:22","nodeType":"VariableDeclaration","scope":3783,"src":"1760:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3669,"name":"uint256","nodeType":"ElementaryTypeName","src":"1760:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1759:16:22"},"scope":4435,"src":"1678:4213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3826,"nodeType":"Block","src":"6133:189:22","statements":[{"assignments":[3799],"declarations":[{"constant":false,"id":3799,"mutability":"mutable","name":"result","nameLocation":"6151:6:22","nodeType":"VariableDeclaration","scope":3826,"src":"6143:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3798,"name":"uint256","nodeType":"ElementaryTypeName","src":"6143:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3805,"initialValue":{"arguments":[{"id":3801,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"6167:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3802,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"6170:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3803,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"6173:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3800,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3783,3827],"referencedDeclaration":3783,"src":"6160:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6160:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6143:42:22"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3806,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"6199:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3807,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"6211:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3576_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":3808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6220:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3574,"src":"6211:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"}},"src":"6199:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3811,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"6233:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3812,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"6236:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3813,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"6239:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3810,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6226:6:22","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6226:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6254:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6226:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6199:56:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3823,"nodeType":"IfStatement","src":"6195:98:22","trueBody":{"id":3822,"nodeType":"Block","src":"6257:36:22","statements":[{"expression":{"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3818,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"6271:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6281:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6271:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3821,"nodeType":"ExpressionStatement","src":"6271:11:22"}]}},{"expression":{"id":3824,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"6309:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3797,"id":3825,"nodeType":"Return","src":"6302:13:22"}]},"documentation":{"id":3784,"nodeType":"StructuredDocumentation","src":"5897:121:22","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3827,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6032:6:22","nodeType":"FunctionDefinition","parameters":{"id":3794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3786,"mutability":"mutable","name":"x","nameLocation":"6047:1:22","nodeType":"VariableDeclaration","scope":3827,"src":"6039:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3785,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3788,"mutability":"mutable","name":"y","nameLocation":"6058:1:22","nodeType":"VariableDeclaration","scope":3827,"src":"6050:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3787,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3790,"mutability":"mutable","name":"denominator","nameLocation":"6069:11:22","nodeType":"VariableDeclaration","scope":3827,"src":"6061:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3789,"name":"uint256","nodeType":"ElementaryTypeName","src":"6061:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3793,"mutability":"mutable","name":"rounding","nameLocation":"6091:8:22","nodeType":"VariableDeclaration","scope":3827,"src":"6082:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":3792,"nodeType":"UserDefinedTypeName","pathNode":{"id":3791,"name":"Rounding","nameLocations":["6082:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3576,"src":"6082:8:22"},"referencedDeclaration":3576,"src":"6082:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"6038:62:22"},"returnParameters":{"id":3797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3827,"src":"6124:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3795,"name":"uint256","nodeType":"ElementaryTypeName","src":"6124:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6123:9:22"},"scope":4435,"src":"6023:299:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3938,"nodeType":"Block","src":"6598:1585:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3835,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"6612:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6617:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6612:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3841,"nodeType":"IfStatement","src":"6608:45:22","trueBody":{"id":3840,"nodeType":"Block","src":"6620:33:22","statements":[{"expression":{"hexValue":"30","id":3838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6641:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3834,"id":3839,"nodeType":"Return","src":"6634:8:22"}]}},{"assignments":[3843],"declarations":[{"constant":false,"id":3843,"mutability":"mutable","name":"result","nameLocation":"7340:6:22","nodeType":"VariableDeclaration","scope":3938,"src":"7332:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3842,"name":"uint256","nodeType":"ElementaryTypeName","src":"7332:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3852,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7349:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3846,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"7360:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3845,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4107,4143],"referencedDeclaration":4107,"src":"7355:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7355:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7366:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7355:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7354:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7349:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7332:36:22"},{"id":3937,"nodeType":"UncheckedBlock","src":"7769:408:22","statements":[{"expression":{"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3853,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"7793:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3854,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"7803:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3855,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"7812:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3856,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"7816:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7812:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7803:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3859,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7802:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7827:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7802:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7793:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3863,"nodeType":"ExpressionStatement","src":"7793:35:22"},{"expression":{"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3864,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"7842:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"7852:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3866,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"7861:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3867,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"7865:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7861:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7852:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3870,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7851:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7876:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7851:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7842:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3874,"nodeType":"ExpressionStatement","src":"7842:35:22"},{"expression":{"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3875,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"7891:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3876,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"7901:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3877,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"7910:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3878,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"7914:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7910:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7901:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3881,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7900:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7925:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7900:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7891:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3885,"nodeType":"ExpressionStatement","src":"7891:35:22"},{"expression":{"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3886,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"7940:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3887,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"7950:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3888,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"7959:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3889,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"7963:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7959:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7950:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3892,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7949:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7974:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7949:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7940:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3896,"nodeType":"ExpressionStatement","src":"7940:35:22"},{"expression":{"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3897,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"7989:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3898,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"7999:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3899,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"8008:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3900,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"8012:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8008:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7999:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3903,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7998:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8023:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7998:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7989:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3907,"nodeType":"ExpressionStatement","src":"7989:35:22"},{"expression":{"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3908,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"8038:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3909,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"8048:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3910,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"8057:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3911,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"8061:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8057:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8048:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3914,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8047:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8072:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8047:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8038:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3918,"nodeType":"ExpressionStatement","src":"8038:35:22"},{"expression":{"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3919,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"8087:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3920,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"8097:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3921,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"8106:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3922,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"8110:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8106:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8097:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3925,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8096:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8121:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8096:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8087:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3929,"nodeType":"ExpressionStatement","src":"8087:35:22"},{"expression":{"arguments":[{"id":3931,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"8147:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3932,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"8155:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3933,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"8159:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8155:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3930,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"8143:3:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8143:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3834,"id":3936,"nodeType":"Return","src":"8136:30:22"}]}]},"documentation":{"id":3828,"nodeType":"StructuredDocumentation","src":"6328:208:22","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3939,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6550:4:22","nodeType":"FunctionDefinition","parameters":{"id":3831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3830,"mutability":"mutable","name":"a","nameLocation":"6563:1:22","nodeType":"VariableDeclaration","scope":3939,"src":"6555:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3829,"name":"uint256","nodeType":"ElementaryTypeName","src":"6555:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6554:11:22"},"returnParameters":{"id":3834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3939,"src":"6589:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3832,"name":"uint256","nodeType":"ElementaryTypeName","src":"6589:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6588:9:22"},"scope":4435,"src":"6541:1642:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3974,"nodeType":"Block","src":"8359:161:22","statements":[{"id":3973,"nodeType":"UncheckedBlock","src":"8369:145:22","statements":[{"assignments":[3951],"declarations":[{"constant":false,"id":3951,"mutability":"mutable","name":"result","nameLocation":"8401:6:22","nodeType":"VariableDeclaration","scope":3973,"src":"8393:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3950,"name":"uint256","nodeType":"ElementaryTypeName","src":"8393:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3955,"initialValue":{"arguments":[{"id":3953,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"8415:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3952,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3939,3975],"referencedDeclaration":3939,"src":"8410:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8410:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8393:24:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3956,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"8438:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3957,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"8448:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3958,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"8460:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3576_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":3959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8469:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3574,"src":"8460:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"}},"src":"8448:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3961,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"8475:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3962,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"8484:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8475:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3964,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"8493:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8475:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8448:46:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8501:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8448:54:22","trueExpression":{"hexValue":"31","id":3967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8497:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3970,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8447:56:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8438:65:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3949,"id":3972,"nodeType":"Return","src":"8431:72:22"}]}]},"documentation":{"id":3940,"nodeType":"StructuredDocumentation","src":"8189:89:22","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3975,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8292:4:22","nodeType":"FunctionDefinition","parameters":{"id":3946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3942,"mutability":"mutable","name":"a","nameLocation":"8305:1:22","nodeType":"VariableDeclaration","scope":3975,"src":"8297:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3941,"name":"uint256","nodeType":"ElementaryTypeName","src":"8297:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3945,"mutability":"mutable","name":"rounding","nameLocation":"8317:8:22","nodeType":"VariableDeclaration","scope":3975,"src":"8308:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":3944,"nodeType":"UserDefinedTypeName","pathNode":{"id":3943,"name":"Rounding","nameLocations":["8308:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3576,"src":"8308:8:22"},"referencedDeclaration":3576,"src":"8308:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"8296:30:22"},"returnParameters":{"id":3949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3975,"src":"8350:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3947,"name":"uint256","nodeType":"ElementaryTypeName","src":"8350:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8349:9:22"},"scope":4435,"src":"8283:237:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4106,"nodeType":"Block","src":"8705:922:22","statements":[{"assignments":[3984],"declarations":[{"constant":false,"id":3984,"mutability":"mutable","name":"result","nameLocation":"8723:6:22","nodeType":"VariableDeclaration","scope":4106,"src":"8715:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3983,"name":"uint256","nodeType":"ElementaryTypeName","src":"8715:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3986,"initialValue":{"hexValue":"30","id":3985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8732:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8715:18:22"},{"id":4103,"nodeType":"UncheckedBlock","src":"8743:855:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"8771:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8780:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8771:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8786:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8771:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4001,"nodeType":"IfStatement","src":"8767:99:22","trueBody":{"id":4000,"nodeType":"Block","src":"8789:77:22","statements":[{"expression":{"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"8807:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8817:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8807:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3995,"nodeType":"ExpressionStatement","src":"8807:13:22"},{"expression":{"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3996,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"8838:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8848:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8838:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3999,"nodeType":"ExpressionStatement","src":"8838:13:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"8883:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8892:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8883:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8897:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8883:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4016,"nodeType":"IfStatement","src":"8879:96:22","trueBody":{"id":4015,"nodeType":"Block","src":"8900:75:22","statements":[{"expression":{"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"8918:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8928:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8918:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4010,"nodeType":"ExpressionStatement","src":"8918:12:22"},{"expression":{"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4011,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"8948:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8948:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4014,"nodeType":"ExpressionStatement","src":"8948:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"8992:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9001:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8992:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9006:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8992:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4031,"nodeType":"IfStatement","src":"8988:96:22","trueBody":{"id":4030,"nodeType":"Block","src":"9009:75:22","statements":[{"expression":{"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"9027:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9037:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9027:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4025,"nodeType":"ExpressionStatement","src":"9027:12:22"},{"expression":{"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4026,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"9057:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9067:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9057:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4029,"nodeType":"ExpressionStatement","src":"9057:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"9101:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9101:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9115:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9101:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4046,"nodeType":"IfStatement","src":"9097:96:22","trueBody":{"id":4045,"nodeType":"Block","src":"9118:75:22","statements":[{"expression":{"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"9136:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9146:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9136:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4040,"nodeType":"ExpressionStatement","src":"9136:12:22"},{"expression":{"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4041,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"9166:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9176:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9166:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4044,"nodeType":"ExpressionStatement","src":"9166:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"9210:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9219:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9210:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9223:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9210:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4061,"nodeType":"IfStatement","src":"9206:93:22","trueBody":{"id":4060,"nodeType":"Block","src":"9226:73:22","statements":[{"expression":{"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"9244:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9254:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9244:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4055,"nodeType":"ExpressionStatement","src":"9244:11:22"},{"expression":{"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4056,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"9273:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9283:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9273:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4059,"nodeType":"ExpressionStatement","src":"9273:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"9316:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":4063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9325:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9316:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9329:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9316:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4076,"nodeType":"IfStatement","src":"9312:93:22","trueBody":{"id":4075,"nodeType":"Block","src":"9332:73:22","statements":[{"expression":{"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"9350:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9360:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9350:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4070,"nodeType":"ExpressionStatement","src":"9350:11:22"},{"expression":{"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4071,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"9379:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9389:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9379:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4074,"nodeType":"ExpressionStatement","src":"9379:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"9422:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9431:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9422:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9435:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9422:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4091,"nodeType":"IfStatement","src":"9418:93:22","trueBody":{"id":4090,"nodeType":"Block","src":"9438:73:22","statements":[{"expression":{"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"9456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":4083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9466:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9456:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4085,"nodeType":"ExpressionStatement","src":"9456:11:22"},{"expression":{"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4086,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"9485:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9495:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9485:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4089,"nodeType":"ExpressionStatement","src":"9485:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"9528:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9537:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9528:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9541:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9528:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4102,"nodeType":"IfStatement","src":"9524:64:22","trueBody":{"id":4101,"nodeType":"Block","src":"9544:44:22","statements":[{"expression":{"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4097,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"9562:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9572:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9562:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4100,"nodeType":"ExpressionStatement","src":"9562:11:22"}]}}]},{"expression":{"id":4104,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"9614:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3982,"id":4105,"nodeType":"Return","src":"9607:13:22"}]},"documentation":{"id":3976,"nodeType":"StructuredDocumentation","src":"8526:113:22","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":4107,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8653:4:22","nodeType":"FunctionDefinition","parameters":{"id":3979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3978,"mutability":"mutable","name":"value","nameLocation":"8666:5:22","nodeType":"VariableDeclaration","scope":4107,"src":"8658:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3977,"name":"uint256","nodeType":"ElementaryTypeName","src":"8658:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8657:15:22"},"returnParameters":{"id":3982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4107,"src":"8696:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3980,"name":"uint256","nodeType":"ElementaryTypeName","src":"8696:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8695:9:22"},"scope":4435,"src":"8644:983:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4142,"nodeType":"Block","src":"9860:165:22","statements":[{"id":4141,"nodeType":"UncheckedBlock","src":"9870:149:22","statements":[{"assignments":[4119],"declarations":[{"constant":false,"id":4119,"mutability":"mutable","name":"result","nameLocation":"9902:6:22","nodeType":"VariableDeclaration","scope":4141,"src":"9894:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4118,"name":"uint256","nodeType":"ElementaryTypeName","src":"9894:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4123,"initialValue":{"arguments":[{"id":4121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"9916:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4120,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4107,4143],"referencedDeclaration":4107,"src":"9911:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9911:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9894:28:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4124,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"9943:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4125,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"9953:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4126,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"9965:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3576_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":4127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9974:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3574,"src":"9965:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"}},"src":"9953:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9980:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4130,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"9985:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9980:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"9994:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9980:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9953:46:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10006:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9953:54:22","trueExpression":{"hexValue":"31","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10002:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4138,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9952:56:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9943:65:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4117,"id":4140,"nodeType":"Return","src":"9936:72:22"}]}]},"documentation":{"id":4108,"nodeType":"StructuredDocumentation","src":"9633:142:22","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4143,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9789:4:22","nodeType":"FunctionDefinition","parameters":{"id":4114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4110,"mutability":"mutable","name":"value","nameLocation":"9802:5:22","nodeType":"VariableDeclaration","scope":4143,"src":"9794:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4109,"name":"uint256","nodeType":"ElementaryTypeName","src":"9794:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4113,"mutability":"mutable","name":"rounding","nameLocation":"9818:8:22","nodeType":"VariableDeclaration","scope":4143,"src":"9809:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":4112,"nodeType":"UserDefinedTypeName","pathNode":{"id":4111,"name":"Rounding","nameLocations":["9809:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3576,"src":"9809:8:22"},"referencedDeclaration":3576,"src":"9809:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"9793:34:22"},"returnParameters":{"id":4117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4143,"src":"9851:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4115,"name":"uint256","nodeType":"ElementaryTypeName","src":"9851:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9850:9:22"},"scope":4435,"src":"9780:245:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4271,"nodeType":"Block","src":"10212:854:22","statements":[{"assignments":[4152],"declarations":[{"constant":false,"id":4152,"mutability":"mutable","name":"result","nameLocation":"10230:6:22","nodeType":"VariableDeclaration","scope":4271,"src":"10222:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4151,"name":"uint256","nodeType":"ElementaryTypeName","src":"10222:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4154,"initialValue":{"hexValue":"30","id":4153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10239:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10222:18:22"},{"id":4268,"nodeType":"UncheckedBlock","src":"10250:787:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"10278:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10287:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10293:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10287:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10278:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4171,"nodeType":"IfStatement","src":"10274:103:22","trueBody":{"id":4170,"nodeType":"Block","src":"10297:80:22","statements":[{"expression":{"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"10315:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10324:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10330:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10324:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10315:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4165,"nodeType":"ExpressionStatement","src":"10315:17:22"},{"expression":{"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4166,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"10350:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10360:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10350:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4169,"nodeType":"ExpressionStatement","src":"10350:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"10394:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10403:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10409:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10403:8:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10394:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4188,"nodeType":"IfStatement","src":"10390:103:22","trueBody":{"id":4187,"nodeType":"Block","src":"10413:80:22","statements":[{"expression":{"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"10431:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10440:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10446:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10440:8:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10431:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4182,"nodeType":"ExpressionStatement","src":"10431:17:22"},{"expression":{"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4183,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"10466:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10466:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4186,"nodeType":"ExpressionStatement","src":"10466:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"10510:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10519:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10525:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10519:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10510:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4205,"nodeType":"IfStatement","src":"10506:103:22","trueBody":{"id":4204,"nodeType":"Block","src":"10529:80:22","statements":[{"expression":{"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"10547:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10556:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10562:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10556:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10547:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4199,"nodeType":"ExpressionStatement","src":"10547:17:22"},{"expression":{"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4200,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"10582:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10592:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10582:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4203,"nodeType":"ExpressionStatement","src":"10582:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"10626:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10635:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10641:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10635:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10626:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4222,"nodeType":"IfStatement","src":"10622:100:22","trueBody":{"id":4221,"nodeType":"Block","src":"10644:78:22","statements":[{"expression":{"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"10662:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10671:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10677:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10671:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10662:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4216,"nodeType":"ExpressionStatement","src":"10662:16:22"},{"expression":{"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4217,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"10696:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10706:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10696:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4220,"nodeType":"ExpressionStatement","src":"10696:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"10739:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10748:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10754:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10748:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10739:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4239,"nodeType":"IfStatement","src":"10735:100:22","trueBody":{"id":4238,"nodeType":"Block","src":"10757:78:22","statements":[{"expression":{"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"10775:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10784:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10790:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10784:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10775:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4233,"nodeType":"ExpressionStatement","src":"10775:16:22"},{"expression":{"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4234,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"10809:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10819:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10809:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4237,"nodeType":"ExpressionStatement","src":"10809:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"10852:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10861:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10861:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10852:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4256,"nodeType":"IfStatement","src":"10848:100:22","trueBody":{"id":4255,"nodeType":"Block","src":"10870:78:22","statements":[{"expression":{"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"10888:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10897:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10897:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10888:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4250,"nodeType":"ExpressionStatement","src":"10888:16:22"},{"expression":{"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4251,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"10922:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10932:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10922:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4254,"nodeType":"ExpressionStatement","src":"10922:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"10965:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10974:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10980:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10974:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10965:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4267,"nodeType":"IfStatement","src":"10961:66:22","trueBody":{"id":4266,"nodeType":"Block","src":"10983:44:22","statements":[{"expression":{"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4262,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"11001:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11001:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4265,"nodeType":"ExpressionStatement","src":"11001:11:22"}]}}]},{"expression":{"id":4269,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"11053:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4150,"id":4270,"nodeType":"Return","src":"11046:13:22"}]},"documentation":{"id":4144,"nodeType":"StructuredDocumentation","src":"10031:114:22","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":4272,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10159:5:22","nodeType":"FunctionDefinition","parameters":{"id":4147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4146,"mutability":"mutable","name":"value","nameLocation":"10173:5:22","nodeType":"VariableDeclaration","scope":4272,"src":"10165:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4145,"name":"uint256","nodeType":"ElementaryTypeName","src":"10165:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10164:15:22"},"returnParameters":{"id":4150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4272,"src":"10203:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4148,"name":"uint256","nodeType":"ElementaryTypeName","src":"10203:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10202:9:22"},"scope":4435,"src":"10150:916:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4307,"nodeType":"Block","src":"11301:167:22","statements":[{"id":4306,"nodeType":"UncheckedBlock","src":"11311:151:22","statements":[{"assignments":[4284],"declarations":[{"constant":false,"id":4284,"mutability":"mutable","name":"result","nameLocation":"11343:6:22","nodeType":"VariableDeclaration","scope":4306,"src":"11335:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4283,"name":"uint256","nodeType":"ElementaryTypeName","src":"11335:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4288,"initialValue":{"arguments":[{"id":4286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"11358:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4285,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4272,4308],"referencedDeclaration":4272,"src":"11352:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11352:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11335:29:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4289,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"11385:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4290,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"11395:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4291,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"11407:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3576_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":4292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11416:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3574,"src":"11407:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"}},"src":"11395:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11422:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4295,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"11428:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11422:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"11437:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11422:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11395:47:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11449:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11395:55:22","trueExpression":{"hexValue":"31","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11445:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4303,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11394:57:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11385:66:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4282,"id":4305,"nodeType":"Return","src":"11378:73:22"}]}]},"documentation":{"id":4273,"nodeType":"StructuredDocumentation","src":"11072:143:22","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4308,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11229:5:22","nodeType":"FunctionDefinition","parameters":{"id":4279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4275,"mutability":"mutable","name":"value","nameLocation":"11243:5:22","nodeType":"VariableDeclaration","scope":4308,"src":"11235:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4274,"name":"uint256","nodeType":"ElementaryTypeName","src":"11235:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4278,"mutability":"mutable","name":"rounding","nameLocation":"11259:8:22","nodeType":"VariableDeclaration","scope":4308,"src":"11250:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":4277,"nodeType":"UserDefinedTypeName","pathNode":{"id":4276,"name":"Rounding","nameLocations":["11250:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3576,"src":"11250:8:22"},"referencedDeclaration":3576,"src":"11250:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"11234:34:22"},"returnParameters":{"id":4282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4308,"src":"11292:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4280,"name":"uint256","nodeType":"ElementaryTypeName","src":"11292:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11291:9:22"},"scope":4435,"src":"11220:248:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4394,"nodeType":"Block","src":"11782:600:22","statements":[{"assignments":[4317],"declarations":[{"constant":false,"id":4317,"mutability":"mutable","name":"result","nameLocation":"11800:6:22","nodeType":"VariableDeclaration","scope":4394,"src":"11792:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4316,"name":"uint256","nodeType":"ElementaryTypeName","src":"11792:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4319,"initialValue":{"hexValue":"30","id":4318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11809:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11792:18:22"},{"id":4391,"nodeType":"UncheckedBlock","src":"11820:533:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"11848:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11848:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11863:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11848:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4334,"nodeType":"IfStatement","src":"11844:98:22","trueBody":{"id":4333,"nodeType":"Block","src":"11866:76:22","statements":[{"expression":{"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"11884:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11894:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11884:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4328,"nodeType":"ExpressionStatement","src":"11884:13:22"},{"expression":{"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4329,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"11915:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11925:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11915:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4332,"nodeType":"ExpressionStatement","src":"11915:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"11959:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11968:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11959:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11973:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11959:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4349,"nodeType":"IfStatement","src":"11955:95:22","trueBody":{"id":4348,"nodeType":"Block","src":"11976:74:22","statements":[{"expression":{"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"11994:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12004:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11994:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4343,"nodeType":"ExpressionStatement","src":"11994:12:22"},{"expression":{"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4344,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"12024:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12034:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12024:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4347,"nodeType":"ExpressionStatement","src":"12024:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"12067:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12076:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12067:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12081:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12067:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4364,"nodeType":"IfStatement","src":"12063:95:22","trueBody":{"id":4363,"nodeType":"Block","src":"12084:74:22","statements":[{"expression":{"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"12102:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12112:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12102:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4358,"nodeType":"ExpressionStatement","src":"12102:12:22"},{"expression":{"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4359,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"12132:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12142:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12132:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4362,"nodeType":"ExpressionStatement","src":"12132:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"12175:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12184:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12175:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12189:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12175:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4379,"nodeType":"IfStatement","src":"12171:95:22","trueBody":{"id":4378,"nodeType":"Block","src":"12192:74:22","statements":[{"expression":{"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"12210:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12220:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12210:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4373,"nodeType":"ExpressionStatement","src":"12210:12:22"},{"expression":{"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4374,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"12240:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12250:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12240:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4377,"nodeType":"ExpressionStatement","src":"12240:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"12283:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12292:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12283:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12296:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12283:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4390,"nodeType":"IfStatement","src":"12279:64:22","trueBody":{"id":4389,"nodeType":"Block","src":"12299:44:22","statements":[{"expression":{"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4385,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"12317:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12327:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12317:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4388,"nodeType":"ExpressionStatement","src":"12317:11:22"}]}}]},{"expression":{"id":4392,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"12369:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4315,"id":4393,"nodeType":"Return","src":"12362:13:22"}]},"documentation":{"id":4309,"nodeType":"StructuredDocumentation","src":"11474:240:22","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4395,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11728:6:22","nodeType":"FunctionDefinition","parameters":{"id":4312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4311,"mutability":"mutable","name":"value","nameLocation":"11743:5:22","nodeType":"VariableDeclaration","scope":4395,"src":"11735:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4310,"name":"uint256","nodeType":"ElementaryTypeName","src":"11735:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11734:15:22"},"returnParameters":{"id":4315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4395,"src":"11773:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4313,"name":"uint256","nodeType":"ElementaryTypeName","src":"11773:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11772:9:22"},"scope":4435,"src":"11719:663:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4433,"nodeType":"Block","src":"12619:174:22","statements":[{"id":4432,"nodeType":"UncheckedBlock","src":"12629:158:22","statements":[{"assignments":[4407],"declarations":[{"constant":false,"id":4407,"mutability":"mutable","name":"result","nameLocation":"12661:6:22","nodeType":"VariableDeclaration","scope":4432,"src":"12653:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4406,"name":"uint256","nodeType":"ElementaryTypeName","src":"12653:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4411,"initialValue":{"arguments":[{"id":4409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"12677:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4408,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4395,4434],"referencedDeclaration":4395,"src":"12670:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12670:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12653:30:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4412,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"12704:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4413,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"12714:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4414,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"12726:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3576_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":4415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12735:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3574,"src":"12726:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"}},"src":"12714:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4418,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"12747:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12747:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4421,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12746:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12741:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"12762:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12741:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12714:53:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12774:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12714:61:22","trueExpression":{"hexValue":"31","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4429,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12713:63:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12704:72:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4405,"id":4431,"nodeType":"Return","src":"12697:79:22"}]}]},"documentation":{"id":4396,"nodeType":"StructuredDocumentation","src":"12388:144:22","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4434,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12546:6:22","nodeType":"FunctionDefinition","parameters":{"id":4402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4398,"mutability":"mutable","name":"value","nameLocation":"12561:5:22","nodeType":"VariableDeclaration","scope":4434,"src":"12553:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4397,"name":"uint256","nodeType":"ElementaryTypeName","src":"12553:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4401,"mutability":"mutable","name":"rounding","nameLocation":"12577:8:22","nodeType":"VariableDeclaration","scope":4434,"src":"12568:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":4400,"nodeType":"UserDefinedTypeName","pathNode":{"id":4399,"name":"Rounding","nameLocations":["12568:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3576,"src":"12568:8:22"},"referencedDeclaration":3576,"src":"12568:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3576","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"12552:34:22"},"returnParameters":{"id":4405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4434,"src":"12610:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4403,"name":"uint256","nodeType":"ElementaryTypeName","src":"12610:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12609:9:22"},"scope":4435,"src":"12537:256:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4436,"src":"202:12593:22","usedErrors":[]}],"src":"103:12693:22"},"id":22},"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol","exportedSymbols":{"SignedMathUpgradeable":[4540]},"id":4541,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4437,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:23"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":4438,"nodeType":"StructuredDocumentation","src":"134:80:23","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4540,"linearizedBaseContracts":[4540],"name":"SignedMathUpgradeable","nameLocation":"223:21:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":4455,"nodeType":"Block","src":"386:37:23","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4448,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"403:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4449,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"407:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"403:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4452,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"415:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"403:13:23","trueExpression":{"id":4451,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"411:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4447,"id":4454,"nodeType":"Return","src":"396:20:23"}]},"documentation":{"id":4439,"nodeType":"StructuredDocumentation","src":"251:66:23","text":" @dev Returns the largest of two signed numbers."},"id":4456,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"331:3:23","nodeType":"FunctionDefinition","parameters":{"id":4444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4441,"mutability":"mutable","name":"a","nameLocation":"342:1:23","nodeType":"VariableDeclaration","scope":4456,"src":"335:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4440,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4443,"mutability":"mutable","name":"b","nameLocation":"352:1:23","nodeType":"VariableDeclaration","scope":4456,"src":"345:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4442,"name":"int256","nodeType":"ElementaryTypeName","src":"345:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"334:20:23"},"returnParameters":{"id":4447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4456,"src":"378:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4445,"name":"int256","nodeType":"ElementaryTypeName","src":"378:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"377:8:23"},"scope":4540,"src":"322:101:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4473,"nodeType":"Block","src":"565:37:23","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4466,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"582:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4467,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"586:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"582:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4470,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"594:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"582:13:23","trueExpression":{"id":4469,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"590:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4465,"id":4472,"nodeType":"Return","src":"575:20:23"}]},"documentation":{"id":4457,"nodeType":"StructuredDocumentation","src":"429:67:23","text":" @dev Returns the smallest of two signed numbers."},"id":4474,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"510:3:23","nodeType":"FunctionDefinition","parameters":{"id":4462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4459,"mutability":"mutable","name":"a","nameLocation":"521:1:23","nodeType":"VariableDeclaration","scope":4474,"src":"514:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4458,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4461,"mutability":"mutable","name":"b","nameLocation":"531:1:23","nodeType":"VariableDeclaration","scope":4474,"src":"524:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4460,"name":"int256","nodeType":"ElementaryTypeName","src":"524:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"513:20:23"},"returnParameters":{"id":4465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4474,"src":"557:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4463,"name":"int256","nodeType":"ElementaryTypeName","src":"557:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"556:8:23"},"scope":4540,"src":"501:101:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4517,"nodeType":"Block","src":"807:162:23","statements":[{"assignments":[4485],"declarations":[{"constant":false,"id":4485,"mutability":"mutable","name":"x","nameLocation":"876:1:23","nodeType":"VariableDeclaration","scope":4517,"src":"869:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4484,"name":"int256","nodeType":"ElementaryTypeName","src":"869:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4498,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4486,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4477,"src":"881:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4487,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"885:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4489,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4490,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4477,"src":"892:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4491,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"896:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"892:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4493,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"891:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"902:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"891:12:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4496,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"890:14:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"880:24:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"869:35:23"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4499,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"921:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4504,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"941:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"933:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4502,"name":"uint256","nodeType":"ElementaryTypeName","src":"933:7:23","typeDescriptions":{}}},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"933:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"947:3:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"933:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"926:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4500,"name":"int256","nodeType":"ElementaryTypeName","src":"926:6:23","typeDescriptions":{}}},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"926:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4509,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4477,"src":"955:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4510,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"959:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"955:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4512,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"954:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"926:35:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4514,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"925:37:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"921:41:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4483,"id":4516,"nodeType":"Return","src":"914:48:23"}]},"documentation":{"id":4475,"nodeType":"StructuredDocumentation","src":"608:126:23","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":4518,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"748:7:23","nodeType":"FunctionDefinition","parameters":{"id":4480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4477,"mutability":"mutable","name":"a","nameLocation":"763:1:23","nodeType":"VariableDeclaration","scope":4518,"src":"756:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4476,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4479,"mutability":"mutable","name":"b","nameLocation":"773:1:23","nodeType":"VariableDeclaration","scope":4518,"src":"766:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4478,"name":"int256","nodeType":"ElementaryTypeName","src":"766:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"755:20:23"},"returnParameters":{"id":4483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4518,"src":"799:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4481,"name":"int256","nodeType":"ElementaryTypeName","src":"799:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"798:8:23"},"scope":4540,"src":"739:230:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4538,"nodeType":"Block","src":"1113:158:23","statements":[{"id":4537,"nodeType":"UncheckedBlock","src":"1123:142:23","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4528,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"1238:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":4529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1243:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1238:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1251:2:23","subExpression":{"id":4532,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"1252:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1238:15:23","trueExpression":{"id":4531,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"1247:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1230:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4526,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:23","typeDescriptions":{}}},"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1230:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4525,"id":4536,"nodeType":"Return","src":"1223:31:23"}]}]},"documentation":{"id":4519,"nodeType":"StructuredDocumentation","src":"975:78:23","text":" @dev Returns the absolute unsigned value of a signed value."},"id":4539,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1067:3:23","nodeType":"FunctionDefinition","parameters":{"id":4522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4521,"mutability":"mutable","name":"n","nameLocation":"1078:1:23","nodeType":"VariableDeclaration","scope":4539,"src":"1071:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4520,"name":"int256","nodeType":"ElementaryTypeName","src":"1071:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1070:10:23"},"returnParameters":{"id":4525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4539,"src":"1104:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4523,"name":"uint256","nodeType":"ElementaryTypeName","src":"1104:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1103:9:23"},"scope":4540,"src":"1058:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4541,"src":"215:1058:23","usedErrors":[]}],"src":"109:1165:23"},"id":23},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableMapUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableMapUpgradeable.sol","exportedSymbols":{"EnumerableMapUpgradeable":[5798],"EnumerableSetUpgradeable":[6411]},"id":5799,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4542,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:24"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol","file":"./EnumerableSetUpgradeable.sol","id":4543,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5799,"sourceUnit":6412,"src":"230:40:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableMapUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":4544,"nodeType":"StructuredDocumentation","src":"272:1367:24","text":" @dev Library for managing an enumerable variant of Solidity's\n https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\n type.\n Maps have the following properties:\n - Entries are added, removed, and checked for existence in constant time\n (O(1)).\n - Entries are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableMap for EnumerableMap.UintToAddressMap;\n     // Declare a set state variable\n     EnumerableMap.UintToAddressMap private myMap;\n }\n ```\n The following map types are supported:\n - `uint256 -> address` (`UintToAddressMap`) since v3.0.0\n - `address -> uint256` (`AddressToUintMap`) since v4.6.0\n - `bytes32 -> bytes32` (`Bytes32ToBytes32Map`) since v4.6.0\n - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0\n - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableMap.\n ===="},"fullyImplemented":true,"id":5798,"linearizedBaseContracts":[5798],"name":"EnumerableMapUpgradeable","nameLocation":"1648:24:24","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4548,"libraryName":{"id":4545,"name":"EnumerableSetUpgradeable","nameLocations":["1685:24:24"],"nodeType":"IdentifierPath","referencedDeclaration":6411,"src":"1685:24:24"},"nodeType":"UsingForDirective","src":"1679:71:24","typeName":{"id":4547,"nodeType":"UserDefinedTypeName","pathNode":{"id":4546,"name":"EnumerableSetUpgradeable.Bytes32Set","nameLocations":["1714:24:24","1739:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":6003,"src":"1714:35:24"},"referencedDeclaration":6003,"src":"1714:35:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}}},{"canonicalName":"EnumerableMapUpgradeable.Bytes32ToBytes32Map","id":4556,"members":[{"constant":false,"id":4551,"mutability":"mutable","name":"_keys","nameLocation":"2314:5:24","nodeType":"VariableDeclaration","scope":4556,"src":"2278:41:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":4550,"nodeType":"UserDefinedTypeName","pathNode":{"id":4549,"name":"EnumerableSetUpgradeable.Bytes32Set","nameLocations":["2278:24:24","2303:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":6003,"src":"2278:35:24"},"referencedDeclaration":6003,"src":"2278:35:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":4555,"mutability":"mutable","name":"_values","nameLocation":"2357:7:24","nodeType":"VariableDeclaration","scope":4556,"src":"2329:35:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"},"typeName":{"id":4554,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4552,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2329:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4553,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2348:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"internal"}],"name":"Bytes32ToBytes32Map","nameLocation":"2221:19:24","nodeType":"StructDefinition","scope":5798,"src":"2214:157:24","visibility":"public"},{"body":{"id":4583,"nodeType":"Block","src":"2696:76:24","statements":[{"expression":{"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":4569,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"2706:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer"}},"id":4572,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2710:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4555,"src":"2706:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":4573,"indexExpression":{"id":4571,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"2718:3:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2706:16:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"2725:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2706:24:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4576,"nodeType":"ExpressionStatement","src":"2706:24:24"},{"expression":{"arguments":[{"id":4580,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"2761:3:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":4577,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"2747:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer"}},"id":4578,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2751:5:24","memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":4551,"src":"2747:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage ref"}},"id":4579,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2757:3:24","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6021,"src":"2747:13:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$6003_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$6003_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4568,"id":4582,"nodeType":"Return","src":"2740:25:24"}]},"documentation":{"id":4557,"nodeType":"StructuredDocumentation","src":"2377:216:24","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":4584,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"2607:3:24","nodeType":"FunctionDefinition","parameters":{"id":4565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4560,"mutability":"mutable","name":"map","nameLocation":"2639:3:24","nodeType":"VariableDeclaration","scope":4584,"src":"2611:31:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"},"typeName":{"id":4559,"nodeType":"UserDefinedTypeName","pathNode":{"id":4558,"name":"Bytes32ToBytes32Map","nameLocations":["2611:19:24"],"nodeType":"IdentifierPath","referencedDeclaration":4556,"src":"2611:19:24"},"referencedDeclaration":4556,"src":"2611:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":4562,"mutability":"mutable","name":"key","nameLocation":"2652:3:24","nodeType":"VariableDeclaration","scope":4584,"src":"2644:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4561,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2644:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4564,"mutability":"mutable","name":"value","nameLocation":"2665:5:24","nodeType":"VariableDeclaration","scope":4584,"src":"2657:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2657:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2610:61:24"},"returnParameters":{"id":4568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4584,"src":"2690:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4566,"name":"bool","nodeType":"ElementaryTypeName","src":"2690:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2689:6:24"},"scope":5798,"src":"2598:174:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4607,"nodeType":"Block","src":"3026:78:24","statements":[{"expression":{"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3036:23:24","subExpression":{"baseExpression":{"expression":{"id":4595,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"3043:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer"}},"id":4596,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3047:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4555,"src":"3043:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":4598,"indexExpression":{"id":4597,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4590,"src":"3055:3:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3043:16:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4600,"nodeType":"ExpressionStatement","src":"3036:23:24"},{"expression":{"arguments":[{"id":4604,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4590,"src":"3093:3:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":4601,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"3076:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer"}},"id":4602,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3080:5:24","memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":4551,"src":"3076:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage ref"}},"id":4603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3086:6:24","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":6039,"src":"3076:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$6003_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$6003_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3076:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4594,"id":4606,"nodeType":"Return","src":"3069:28:24"}]},"documentation":{"id":4585,"nodeType":"StructuredDocumentation","src":"2778:157:24","text":" @dev Removes a key-value pair from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":4608,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"2949:6:24","nodeType":"FunctionDefinition","parameters":{"id":4591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4588,"mutability":"mutable","name":"map","nameLocation":"2984:3:24","nodeType":"VariableDeclaration","scope":4608,"src":"2956:31:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"},"typeName":{"id":4587,"nodeType":"UserDefinedTypeName","pathNode":{"id":4586,"name":"Bytes32ToBytes32Map","nameLocations":["2956:19:24"],"nodeType":"IdentifierPath","referencedDeclaration":4556,"src":"2956:19:24"},"referencedDeclaration":4556,"src":"2956:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":4590,"mutability":"mutable","name":"key","nameLocation":"2997:3:24","nodeType":"VariableDeclaration","scope":4608,"src":"2989:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4589,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2989:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2955:46:24"},"returnParameters":{"id":4594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4608,"src":"3020:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4592,"name":"bool","nodeType":"ElementaryTypeName","src":"3020:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3019:6:24"},"scope":5798,"src":"2940:164:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4625,"nodeType":"Block","src":"3276:47:24","statements":[{"expression":{"arguments":[{"id":4622,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"3312:3:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":4619,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"3293:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer"}},"id":4620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3297:5:24","memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":4551,"src":"3293:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage ref"}},"id":4621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3303:8:24","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":6057,"src":"3293:18:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$6003_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$6003_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32) view returns (bool)"}},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3293:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4618,"id":4624,"nodeType":"Return","src":"3286:30:24"}]},"documentation":{"id":4609,"nodeType":"StructuredDocumentation","src":"3110:68:24","text":" @dev Returns true if the key is in the map. O(1)."},"id":4626,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"3192:8:24","nodeType":"FunctionDefinition","parameters":{"id":4615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4612,"mutability":"mutable","name":"map","nameLocation":"3229:3:24","nodeType":"VariableDeclaration","scope":4626,"src":"3201:31:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"},"typeName":{"id":4611,"nodeType":"UserDefinedTypeName","pathNode":{"id":4610,"name":"Bytes32ToBytes32Map","nameLocations":["3201:19:24"],"nodeType":"IdentifierPath","referencedDeclaration":4556,"src":"3201:19:24"},"referencedDeclaration":4556,"src":"3201:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":4614,"mutability":"mutable","name":"key","nameLocation":"3242:3:24","nodeType":"VariableDeclaration","scope":4626,"src":"3234:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3234:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3200:46:24"},"returnParameters":{"id":4618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4626,"src":"3270:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4616,"name":"bool","nodeType":"ElementaryTypeName","src":"3270:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3269:6:24"},"scope":5798,"src":"3183:140:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4640,"nodeType":"Block","src":"3494:42:24","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":4635,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"3511:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer"}},"id":4636,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3515:5:24","memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":4551,"src":"3511:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage ref"}},"id":4637,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3521:6:24","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":6072,"src":"3511:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$6003_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Bytes32Set_$6003_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Bytes32Set storage pointer) view returns (uint256)"}},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3511:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4634,"id":4639,"nodeType":"Return","src":"3504:25:24"}]},"documentation":{"id":4627,"nodeType":"StructuredDocumentation","src":"3329:79:24","text":" @dev Returns the number of key-value pairs in the map. O(1)."},"id":4641,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"3422:6:24","nodeType":"FunctionDefinition","parameters":{"id":4631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4630,"mutability":"mutable","name":"map","nameLocation":"3457:3:24","nodeType":"VariableDeclaration","scope":4641,"src":"3429:31:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"},"typeName":{"id":4629,"nodeType":"UserDefinedTypeName","pathNode":{"id":4628,"name":"Bytes32ToBytes32Map","nameLocations":["3429:19:24"],"nodeType":"IdentifierPath","referencedDeclaration":4556,"src":"3429:19:24"},"referencedDeclaration":4556,"src":"3429:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"}},"visibility":"internal"}],"src":"3428:33:24"},"returnParameters":{"id":4634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4641,"src":"3485:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4632,"name":"uint256","nodeType":"ElementaryTypeName","src":"3485:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3484:9:24"},"scope":5798,"src":"3413:123:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4669,"nodeType":"Block","src":"3990:90:24","statements":[{"assignments":[4655],"declarations":[{"constant":false,"id":4655,"mutability":"mutable","name":"key","nameLocation":"4008:3:24","nodeType":"VariableDeclaration","scope":4669,"src":"4000:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4654,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4000:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4661,"initialValue":{"arguments":[{"id":4659,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"4027:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4656,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"4014:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer"}},"id":4657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4018:5:24","memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":4551,"src":"4014:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage ref"}},"id":4658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4024:2:24","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":6090,"src":"4014:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$6003_storage_ptr_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_struct$_Bytes32Set_$6003_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Bytes32Set storage pointer,uint256) view returns (bytes32)"}},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4014:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4000:33:24"},{"expression":{"components":[{"id":4662,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"4051:3:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"expression":{"id":4663,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"4056:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer"}},"id":4664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4060:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4555,"src":"4056:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":4666,"indexExpression":{"id":4665,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"4068:3:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4056:16:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4050:23:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"functionReturnParameters":4653,"id":4668,"nodeType":"Return","src":"4043:30:24"}]},"documentation":{"id":4642,"nodeType":"StructuredDocumentation","src":"3542:342:24","text":" @dev Returns the key-value pair stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of entries inside the\n array, and it may change when more entries are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4670,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"3898:2:24","nodeType":"FunctionDefinition","parameters":{"id":4648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4645,"mutability":"mutable","name":"map","nameLocation":"3929:3:24","nodeType":"VariableDeclaration","scope":4670,"src":"3901:31:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"},"typeName":{"id":4644,"nodeType":"UserDefinedTypeName","pathNode":{"id":4643,"name":"Bytes32ToBytes32Map","nameLocations":["3901:19:24"],"nodeType":"IdentifierPath","referencedDeclaration":4556,"src":"3901:19:24"},"referencedDeclaration":4556,"src":"3901:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":4647,"mutability":"mutable","name":"index","nameLocation":"3942:5:24","nodeType":"VariableDeclaration","scope":4670,"src":"3934:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4646,"name":"uint256","nodeType":"ElementaryTypeName","src":"3934:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3900:48:24"},"returnParameters":{"id":4653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4670,"src":"3972:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4649,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3972:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4670,"src":"3981:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3981:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3971:18:24"},"scope":5798,"src":"3889:191:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4713,"nodeType":"Block","src":"4321:198:24","statements":[{"assignments":[4684],"declarations":[{"constant":false,"id":4684,"mutability":"mutable","name":"value","nameLocation":"4339:5:24","nodeType":"VariableDeclaration","scope":4713,"src":"4331:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4683,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4331:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4689,"initialValue":{"baseExpression":{"expression":{"id":4685,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4674,"src":"4347:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer"}},"id":4686,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4351:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4555,"src":"4347:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":4688,"indexExpression":{"id":4687,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"4359:3:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4347:16:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4331:32:24"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"4377:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4394:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4386:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4691,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4386:7:24","typeDescriptions":{}}},"id":4694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4386:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4377:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4711,"nodeType":"Block","src":"4468:45:24","statements":[{"expression":{"components":[{"hexValue":"74727565","id":4707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4490:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"4496:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4709,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4489:13:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"functionReturnParameters":4682,"id":4710,"nodeType":"Return","src":"4482:20:24"}]},"id":4712,"nodeType":"IfStatement","src":"4373:140:24","trueBody":{"id":4706,"nodeType":"Block","src":"4398:64:24","statements":[{"expression":{"components":[{"arguments":[{"id":4697,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4674,"src":"4429:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer"}},{"id":4698,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"4434:3:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4696,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[4626,4871,5114,5393,5645],"referencedDeclaration":4626,"src":"4420:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"hexValue":"30","id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4448:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4440:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4700,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4440:7:24","typeDescriptions":{}}},"id":4703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4440:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4704,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4419:32:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"functionReturnParameters":4682,"id":4705,"nodeType":"Return","src":"4412:39:24"}]}}]},"documentation":{"id":4671,"nodeType":"StructuredDocumentation","src":"4086:130:24","text":" @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."},"id":4714,"implemented":true,"kind":"function","modifiers":[],"name":"tryGet","nameLocation":"4230:6:24","nodeType":"FunctionDefinition","parameters":{"id":4677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4674,"mutability":"mutable","name":"map","nameLocation":"4265:3:24","nodeType":"VariableDeclaration","scope":4714,"src":"4237:31:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"},"typeName":{"id":4673,"nodeType":"UserDefinedTypeName","pathNode":{"id":4672,"name":"Bytes32ToBytes32Map","nameLocations":["4237:19:24"],"nodeType":"IdentifierPath","referencedDeclaration":4556,"src":"4237:19:24"},"referencedDeclaration":4556,"src":"4237:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":4676,"mutability":"mutable","name":"key","nameLocation":"4278:3:24","nodeType":"VariableDeclaration","scope":4714,"src":"4270:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4270:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4236:46:24"},"returnParameters":{"id":4682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4714,"src":"4306:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4678,"name":"bool","nodeType":"ElementaryTypeName","src":"4306:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4714,"src":"4312:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4680,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4312:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4305:15:24"},"scope":5798,"src":"4221:298:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4746,"nodeType":"Block","src":"4761:156:24","statements":[{"assignments":[4726],"declarations":[{"constant":false,"id":4726,"mutability":"mutable","name":"value","nameLocation":"4779:5:24","nodeType":"VariableDeclaration","scope":4746,"src":"4771:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4725,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4731,"initialValue":{"baseExpression":{"expression":{"id":4727,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"4787:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer"}},"id":4728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4791:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4555,"src":"4787:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":4730,"indexExpression":{"id":4729,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"4799:3:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4787:16:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4771:32:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"4821:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4830:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4821:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":4737,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"4844:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer"}},{"id":4738,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"4849:3:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4736,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[4626,4871,5114,5393,5645],"referencedDeclaration":4626,"src":"4835:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4835:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4821:32:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456e756d657261626c654d61703a206e6f6e6578697374656e74206b6579","id":4741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4855:32:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072","typeString":"literal_string \"EnumerableMap: nonexistent key\""},"value":"EnumerableMap: nonexistent key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072","typeString":"literal_string \"EnumerableMap: nonexistent key\""}],"id":4732,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4813:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4813:75:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4743,"nodeType":"ExpressionStatement","src":"4813:75:24"},{"expression":{"id":4744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"4905:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4724,"id":4745,"nodeType":"Return","src":"4898:12:24"}]},"documentation":{"id":4715,"nodeType":"StructuredDocumentation","src":"4525:140:24","text":" @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."},"id":4747,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"4679:3:24","nodeType":"FunctionDefinition","parameters":{"id":4721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4718,"mutability":"mutable","name":"map","nameLocation":"4711:3:24","nodeType":"VariableDeclaration","scope":4747,"src":"4683:31:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"},"typeName":{"id":4717,"nodeType":"UserDefinedTypeName","pathNode":{"id":4716,"name":"Bytes32ToBytes32Map","nameLocations":["4683:19:24"],"nodeType":"IdentifierPath","referencedDeclaration":4556,"src":"4683:19:24"},"referencedDeclaration":4556,"src":"4683:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":4720,"mutability":"mutable","name":"key","nameLocation":"4724:3:24","nodeType":"VariableDeclaration","scope":4747,"src":"4716:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4719,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4716:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4682:46:24"},"returnParameters":{"id":4724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4747,"src":"4752:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4722,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4752:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4751:9:24"},"scope":5798,"src":"4670:247:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4781,"nodeType":"Block","src":"5346:136:24","statements":[{"assignments":[4761],"declarations":[{"constant":false,"id":4761,"mutability":"mutable","name":"value","nameLocation":"5364:5:24","nodeType":"VariableDeclaration","scope":4781,"src":"5356:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4760,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5356:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4766,"initialValue":{"baseExpression":{"expression":{"id":4762,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"5372:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer"}},"id":4763,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4555,"src":"5372:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":4765,"indexExpression":{"id":4764,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"5384:3:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5372:16:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5356:32:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"5406:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5415:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5406:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":4772,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"5429:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer"}},{"id":4773,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"5434:3:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4771,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[4626,4871,5114,5393,5645],"referencedDeclaration":4626,"src":"5420:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5420:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5406:32:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4776,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"5440:12:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4767,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5398:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5398:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4778,"nodeType":"ExpressionStatement","src":"5398:55:24"},{"expression":{"id":4779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"5470:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4759,"id":4780,"nodeType":"Return","src":"5463:12:24"}]},"documentation":{"id":4748,"nodeType":"StructuredDocumentation","src":"4923:269:24","text":" @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."},"id":4782,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"5206:3:24","nodeType":"FunctionDefinition","parameters":{"id":4756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4751,"mutability":"mutable","name":"map","nameLocation":"5247:3:24","nodeType":"VariableDeclaration","scope":4782,"src":"5219:31:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"},"typeName":{"id":4750,"nodeType":"UserDefinedTypeName","pathNode":{"id":4749,"name":"Bytes32ToBytes32Map","nameLocations":["5219:19:24"],"nodeType":"IdentifierPath","referencedDeclaration":4556,"src":"5219:19:24"},"referencedDeclaration":4556,"src":"5219:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":4753,"mutability":"mutable","name":"key","nameLocation":"5268:3:24","nodeType":"VariableDeclaration","scope":4782,"src":"5260:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4752,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5260:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4755,"mutability":"mutable","name":"errorMessage","nameLocation":"5295:12:24","nodeType":"VariableDeclaration","scope":4782,"src":"5281:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4754,"name":"string","nodeType":"ElementaryTypeName","src":"5281:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5209:104:24"},"returnParameters":{"id":4759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4782,"src":"5337:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5337:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5336:9:24"},"scope":5798,"src":"5197:285:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4797,"nodeType":"Block","src":"6120:42:24","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":4792,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"6137:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer"}},"id":4793,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6141:5:24","memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":4551,"src":"6137:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage ref"}},"id":4794,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6147:6:24","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":6120,"src":"6137:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$6003_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$attached_to$_t_struct$_Bytes32Set_$6003_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Bytes32Set storage pointer) view returns (bytes32[] memory)"}},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6137:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":4791,"id":4796,"nodeType":"Return","src":"6130:25:24"}]},"documentation":{"id":4783,"nodeType":"StructuredDocumentation","src":"5488:539:24","text":" @dev Return the an array containing all the keys\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4798,"implemented":true,"kind":"function","modifiers":[],"name":"keys","nameLocation":"6041:4:24","nodeType":"FunctionDefinition","parameters":{"id":4787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4786,"mutability":"mutable","name":"map","nameLocation":"6074:3:24","nodeType":"VariableDeclaration","scope":4798,"src":"6046:31:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"},"typeName":{"id":4785,"nodeType":"UserDefinedTypeName","pathNode":{"id":4784,"name":"Bytes32ToBytes32Map","nameLocations":["6046:19:24"],"nodeType":"IdentifierPath","referencedDeclaration":4556,"src":"6046:19:24"},"referencedDeclaration":4556,"src":"6046:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"}},"visibility":"internal"}],"src":"6045:33:24"},"returnParameters":{"id":4791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4798,"src":"6102:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4788,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6102:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4789,"nodeType":"ArrayTypeName","src":"6102:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6101:18:24"},"scope":5798,"src":"6032:130:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableMapUpgradeable.UintToUintMap","id":4802,"members":[{"constant":false,"id":4801,"mutability":"mutable","name":"_inner","nameLocation":"6241:6:24","nodeType":"VariableDeclaration","scope":4802,"src":"6221:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"},"typeName":{"id":4800,"nodeType":"UserDefinedTypeName","pathNode":{"id":4799,"name":"Bytes32ToBytes32Map","nameLocations":["6221:19:24"],"nodeType":"IdentifierPath","referencedDeclaration":4556,"src":"6221:19:24"},"referencedDeclaration":4556,"src":"6221:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"}},"visibility":"internal"}],"name":"UintToUintMap","nameLocation":"6197:13:24","nodeType":"StructDefinition","scope":5798,"src":"6190:64:24","visibility":"public"},{"body":{"id":4828,"nodeType":"Block","src":"6573:69:24","statements":[{"expression":{"arguments":[{"expression":{"id":4816,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"6594:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap storage pointer"}},"id":4817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6598:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4801,"src":"6594:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":4820,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"6614:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6606:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4818,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6606:7:24","typeDescriptions":{}}},"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6606:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":4824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"6628:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6620:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4822,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6620:7:24","typeDescriptions":{}}},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6620:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4815,"name":"set","nodeType":"Identifier","overloadedDeclarations":[4584,4829,5072,5339,5609],"referencedDeclaration":4584,"src":"6590:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"}},"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6590:45:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4814,"id":4827,"nodeType":"Return","src":"6583:52:24"}]},"documentation":{"id":4803,"nodeType":"StructuredDocumentation","src":"6260:216:24","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":4829,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"6490:3:24","nodeType":"FunctionDefinition","parameters":{"id":4811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4806,"mutability":"mutable","name":"map","nameLocation":"6516:3:24","nodeType":"VariableDeclaration","scope":4829,"src":"6494:25:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap"},"typeName":{"id":4805,"nodeType":"UserDefinedTypeName","pathNode":{"id":4804,"name":"UintToUintMap","nameLocations":["6494:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":4802,"src":"6494:13:24"},"referencedDeclaration":4802,"src":"6494:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":4808,"mutability":"mutable","name":"key","nameLocation":"6529:3:24","nodeType":"VariableDeclaration","scope":4829,"src":"6521:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4807,"name":"uint256","nodeType":"ElementaryTypeName","src":"6521:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4810,"mutability":"mutable","name":"value","nameLocation":"6542:5:24","nodeType":"VariableDeclaration","scope":4829,"src":"6534:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4809,"name":"uint256","nodeType":"ElementaryTypeName","src":"6534:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:55:24"},"returnParameters":{"id":4814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4829,"src":"6567:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4812,"name":"bool","nodeType":"ElementaryTypeName","src":"6567:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6566:6:24"},"scope":5798,"src":"6481:161:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4849,"nodeType":"Block","src":"6881:56:24","statements":[{"expression":{"arguments":[{"expression":{"id":4841,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"6905:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap storage pointer"}},"id":4842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6909:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4801,"src":"6905:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":4845,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"6925:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6917:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4843,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6917:7:24","typeDescriptions":{}}},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6917:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4840,"name":"remove","nodeType":"Identifier","overloadedDeclarations":[4608,4850,5093,5366,5627],"referencedDeclaration":4608,"src":"6898:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"}},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6898:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4839,"id":4848,"nodeType":"Return","src":"6891:39:24"}]},"documentation":{"id":4830,"nodeType":"StructuredDocumentation","src":"6648:148:24","text":" @dev Removes a value from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":4850,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6810:6:24","nodeType":"FunctionDefinition","parameters":{"id":4836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4833,"mutability":"mutable","name":"map","nameLocation":"6839:3:24","nodeType":"VariableDeclaration","scope":4850,"src":"6817:25:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap"},"typeName":{"id":4832,"nodeType":"UserDefinedTypeName","pathNode":{"id":4831,"name":"UintToUintMap","nameLocations":["6817:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":4802,"src":"6817:13:24"},"referencedDeclaration":4802,"src":"6817:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":4835,"mutability":"mutable","name":"key","nameLocation":"6852:3:24","nodeType":"VariableDeclaration","scope":4850,"src":"6844:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4834,"name":"uint256","nodeType":"ElementaryTypeName","src":"6844:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6816:40:24"},"returnParameters":{"id":4839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4850,"src":"6875:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4837,"name":"bool","nodeType":"ElementaryTypeName","src":"6875:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6874:6:24"},"scope":5798,"src":"6801:136:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4870,"nodeType":"Block","src":"7103:58:24","statements":[{"expression":{"arguments":[{"expression":{"id":4862,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"7129:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap storage pointer"}},"id":4863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7133:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4801,"src":"7129:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":4866,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"7149:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7141:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4864,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7141:7:24","typeDescriptions":{}}},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7141:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4861,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[4626,4871,5114,5393,5645],"referencedDeclaration":4626,"src":"7120:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7120:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4860,"id":4869,"nodeType":"Return","src":"7113:41:24"}]},"documentation":{"id":4851,"nodeType":"StructuredDocumentation","src":"6943:68:24","text":" @dev Returns true if the key is in the map. O(1)."},"id":4871,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"7025:8:24","nodeType":"FunctionDefinition","parameters":{"id":4857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4854,"mutability":"mutable","name":"map","nameLocation":"7056:3:24","nodeType":"VariableDeclaration","scope":4871,"src":"7034:25:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap"},"typeName":{"id":4853,"nodeType":"UserDefinedTypeName","pathNode":{"id":4852,"name":"UintToUintMap","nameLocations":["7034:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":4802,"src":"7034:13:24"},"referencedDeclaration":4802,"src":"7034:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":4856,"mutability":"mutable","name":"key","nameLocation":"7069:3:24","nodeType":"VariableDeclaration","scope":4871,"src":"7061:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4855,"name":"uint256","nodeType":"ElementaryTypeName","src":"7061:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7033:40:24"},"returnParameters":{"id":4860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4871,"src":"7097:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4858,"name":"bool","nodeType":"ElementaryTypeName","src":"7097:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7096:6:24"},"scope":5798,"src":"7016:145:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4885,"nodeType":"Block","src":"7319:42:24","statements":[{"expression":{"arguments":[{"expression":{"id":4881,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4875,"src":"7343:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap storage pointer"}},"id":4882,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7347:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4801,"src":"7343:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}],"id":4880,"name":"length","nodeType":"Identifier","overloadedDeclarations":[4641,4886,5129,5408,5660],"referencedDeclaration":4641,"src":"7336:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer) view returns (uint256)"}},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7336:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4879,"id":4884,"nodeType":"Return","src":"7329:25:24"}]},"documentation":{"id":4872,"nodeType":"StructuredDocumentation","src":"7167:72:24","text":" @dev Returns the number of elements in the map. O(1)."},"id":4886,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"7253:6:24","nodeType":"FunctionDefinition","parameters":{"id":4876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4875,"mutability":"mutable","name":"map","nameLocation":"7282:3:24","nodeType":"VariableDeclaration","scope":4886,"src":"7260:25:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap"},"typeName":{"id":4874,"nodeType":"UserDefinedTypeName","pathNode":{"id":4873,"name":"UintToUintMap","nameLocations":["7260:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":4802,"src":"7260:13:24"},"referencedDeclaration":4802,"src":"7260:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap"}},"visibility":"internal"}],"src":"7259:27:24"},"returnParameters":{"id":4879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4886,"src":"7310:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4877,"name":"uint256","nodeType":"ElementaryTypeName","src":"7310:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7309:9:24"},"scope":5798,"src":"7244:117:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4919,"nodeType":"Block","src":"7793:116:24","statements":[{"assignments":[4900,4902],"declarations":[{"constant":false,"id":4900,"mutability":"mutable","name":"key","nameLocation":"7812:3:24","nodeType":"VariableDeclaration","scope":4919,"src":"7804:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4899,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7804:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4902,"mutability":"mutable","name":"value","nameLocation":"7825:5:24","nodeType":"VariableDeclaration","scope":4919,"src":"7817:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4901,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7817:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4908,"initialValue":{"arguments":[{"expression":{"id":4904,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"7837:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap storage pointer"}},"id":4905,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7841:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4801,"src":"7837:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"id":4906,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4892,"src":"7849:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4903,"name":"at","nodeType":"Identifier","overloadedDeclarations":[4670,4920,5169,5448,5691],"referencedDeclaration":4670,"src":"7834:2:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"}},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7834:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"7803:52:24"},{"expression":{"components":[{"arguments":[{"id":4911,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"7881:3:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7873:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4909,"name":"uint256","nodeType":"ElementaryTypeName","src":"7873:7:24","typeDescriptions":{}}},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7873:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"7895:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7887:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4913,"name":"uint256","nodeType":"ElementaryTypeName","src":"7887:7:24","typeDescriptions":{}}},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4917,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7872:30:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":4898,"id":4918,"nodeType":"Return","src":"7865:37:24"}]},"documentation":{"id":4887,"nodeType":"StructuredDocumentation","src":"7367:326:24","text":" @dev Returns the element stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4920,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7707:2:24","nodeType":"FunctionDefinition","parameters":{"id":4893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4890,"mutability":"mutable","name":"map","nameLocation":"7732:3:24","nodeType":"VariableDeclaration","scope":4920,"src":"7710:25:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap"},"typeName":{"id":4889,"nodeType":"UserDefinedTypeName","pathNode":{"id":4888,"name":"UintToUintMap","nameLocations":["7710:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":4802,"src":"7710:13:24"},"referencedDeclaration":4802,"src":"7710:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":4892,"mutability":"mutable","name":"index","nameLocation":"7745:5:24","nodeType":"VariableDeclaration","scope":4920,"src":"7737:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4891,"name":"uint256","nodeType":"ElementaryTypeName","src":"7737:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7709:42:24"},"returnParameters":{"id":4898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4920,"src":"7775:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4894,"name":"uint256","nodeType":"ElementaryTypeName","src":"7775:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4920,"src":"7784:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4896,"name":"uint256","nodeType":"ElementaryTypeName","src":"7784:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7774:18:24"},"scope":5798,"src":"7698:211:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4953,"nodeType":"Block","src":"8144:123:24","statements":[{"assignments":[4934,4936],"declarations":[{"constant":false,"id":4934,"mutability":"mutable","name":"success","nameLocation":"8160:7:24","nodeType":"VariableDeclaration","scope":4953,"src":"8155:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4933,"name":"bool","nodeType":"ElementaryTypeName","src":"8155:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4936,"mutability":"mutable","name":"value","nameLocation":"8177:5:24","nodeType":"VariableDeclaration","scope":4953,"src":"8169:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8169:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4945,"initialValue":{"arguments":[{"expression":{"id":4938,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"8193:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap storage pointer"}},"id":4939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8197:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4801,"src":"8193:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":4942,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4926,"src":"8213:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8205:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4940,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8205:7:24","typeDescriptions":{}}},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8205:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4937,"name":"tryGet","nodeType":"Identifier","overloadedDeclarations":[4714,4954,5209,5488,5722],"referencedDeclaration":4714,"src":"8186:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"}},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8186:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"8154:64:24"},{"expression":{"components":[{"id":4946,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"8236:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"id":4949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4936,"src":"8253:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8245:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4947,"name":"uint256","nodeType":"ElementaryTypeName","src":"8245:7:24","typeDescriptions":{}}},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8245:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4951,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8235:25:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4932,"id":4952,"nodeType":"Return","src":"8228:32:24"}]},"documentation":{"id":4921,"nodeType":"StructuredDocumentation","src":"7915:130:24","text":" @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."},"id":4954,"implemented":true,"kind":"function","modifiers":[],"name":"tryGet","nameLocation":"8059:6:24","nodeType":"FunctionDefinition","parameters":{"id":4927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4924,"mutability":"mutable","name":"map","nameLocation":"8088:3:24","nodeType":"VariableDeclaration","scope":4954,"src":"8066:25:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap"},"typeName":{"id":4923,"nodeType":"UserDefinedTypeName","pathNode":{"id":4922,"name":"UintToUintMap","nameLocations":["8066:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":4802,"src":"8066:13:24"},"referencedDeclaration":4802,"src":"8066:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":4926,"mutability":"mutable","name":"key","nameLocation":"8101:3:24","nodeType":"VariableDeclaration","scope":4954,"src":"8093:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4925,"name":"uint256","nodeType":"ElementaryTypeName","src":"8093:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8065:40:24"},"returnParameters":{"id":4932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4954,"src":"8129:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4928,"name":"bool","nodeType":"ElementaryTypeName","src":"8129:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4954,"src":"8135:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4930,"name":"uint256","nodeType":"ElementaryTypeName","src":"8135:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8128:15:24"},"scope":5798,"src":"8050:217:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4977,"nodeType":"Block","src":"8503:62:24","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":4968,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4958,"src":"8532:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap storage pointer"}},"id":4969,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8536:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4801,"src":"8532:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":4972,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"8552:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8544:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4970,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8544:7:24","typeDescriptions":{}}},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8544:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4967,"name":"get","nodeType":"Identifier","overloadedDeclarations":[4747,4782,4978,5005,5239,5272,5518,5551,5743,5767],"referencedDeclaration":4747,"src":"8528:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"}},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8528:29:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8520:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4965,"name":"uint256","nodeType":"ElementaryTypeName","src":"8520:7:24","typeDescriptions":{}}},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8520:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4964,"id":4976,"nodeType":"Return","src":"8513:45:24"}]},"documentation":{"id":4955,"nodeType":"StructuredDocumentation","src":"8273:140:24","text":" @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."},"id":4978,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"8427:3:24","nodeType":"FunctionDefinition","parameters":{"id":4961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4958,"mutability":"mutable","name":"map","nameLocation":"8453:3:24","nodeType":"VariableDeclaration","scope":4978,"src":"8431:25:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap"},"typeName":{"id":4957,"nodeType":"UserDefinedTypeName","pathNode":{"id":4956,"name":"UintToUintMap","nameLocations":["8431:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":4802,"src":"8431:13:24"},"referencedDeclaration":4802,"src":"8431:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":4960,"mutability":"mutable","name":"key","nameLocation":"8466:3:24","nodeType":"VariableDeclaration","scope":4978,"src":"8458:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4959,"name":"uint256","nodeType":"ElementaryTypeName","src":"8458:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8430:40:24"},"returnParameters":{"id":4964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4978,"src":"8494:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4962,"name":"uint256","nodeType":"ElementaryTypeName","src":"8494:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8493:9:24"},"scope":5798,"src":"8418:147:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5004,"nodeType":"Block","src":"8958:76:24","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":4994,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"8987:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap storage pointer"}},"id":4995,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4801,"src":"8987:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":4998,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"9007:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8999:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4996,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8999:7:24","typeDescriptions":{}}},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8999:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5000,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"9013:12:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4993,"name":"get","nodeType":"Identifier","overloadedDeclarations":[4747,4782,4978,5005,5239,5272,5518,5551,5743,5767],"referencedDeclaration":4782,"src":"8983:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32,string memory) view returns (bytes32)"}},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8983:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8975:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4991,"name":"uint256","nodeType":"ElementaryTypeName","src":"8975:7:24","typeDescriptions":{}}},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8975:52:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4990,"id":5003,"nodeType":"Return","src":"8968:59:24"}]},"documentation":{"id":4979,"nodeType":"StructuredDocumentation","src":"8571:269:24","text":" @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."},"id":5005,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"8854:3:24","nodeType":"FunctionDefinition","parameters":{"id":4987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4982,"mutability":"mutable","name":"map","nameLocation":"8880:3:24","nodeType":"VariableDeclaration","scope":5005,"src":"8858:25:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap"},"typeName":{"id":4981,"nodeType":"UserDefinedTypeName","pathNode":{"id":4980,"name":"UintToUintMap","nameLocations":["8858:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":4802,"src":"8858:13:24"},"referencedDeclaration":4802,"src":"8858:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":4984,"mutability":"mutable","name":"key","nameLocation":"8893:3:24","nodeType":"VariableDeclaration","scope":5005,"src":"8885:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4983,"name":"uint256","nodeType":"ElementaryTypeName","src":"8885:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4986,"mutability":"mutable","name":"errorMessage","nameLocation":"8912:12:24","nodeType":"VariableDeclaration","scope":5005,"src":"8898:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4985,"name":"string","nodeType":"ElementaryTypeName","src":"8898:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8857:68:24"},"returnParameters":{"id":4990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5005,"src":"8949:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4988,"name":"uint256","nodeType":"ElementaryTypeName","src":"8949:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8948:9:24"},"scope":5798,"src":"8845:189:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5034,"nodeType":"Block","src":"9666:216:24","statements":[{"assignments":[5019],"declarations":[{"constant":false,"id":5019,"mutability":"mutable","name":"store","nameLocation":"9693:5:24","nodeType":"VariableDeclaration","scope":5034,"src":"9676:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5017,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9676:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5018,"nodeType":"ArrayTypeName","src":"9676:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5024,"initialValue":{"arguments":[{"expression":{"id":5021,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"9706:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap storage pointer"}},"id":5022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9710:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4801,"src":"9706:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}],"id":5020,"name":"keys","nodeType":"Identifier","overloadedDeclarations":[4798,5035,5302,5581,5797],"referencedDeclaration":4798,"src":"9701:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer) view returns (bytes32[] memory)"}},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9701:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9676:41:24"},{"assignments":[5029],"declarations":[{"constant":false,"id":5029,"mutability":"mutable","name":"result","nameLocation":"9744:6:24","nodeType":"VariableDeclaration","scope":5034,"src":"9727:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5027,"name":"uint256","nodeType":"ElementaryTypeName","src":"9727:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5028,"nodeType":"ArrayTypeName","src":"9727:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5030,"nodeType":"VariableDeclarationStatement","src":"9727:23:24"},{"AST":{"nodeType":"YulBlock","src":"9813:39:24","statements":[{"nodeType":"YulAssignment","src":"9827:15:24","value":{"name":"store","nodeType":"YulIdentifier","src":"9837:5:24"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"9827:6:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":5029,"isOffset":false,"isSlot":false,"src":"9827:6:24","valueSize":1},{"declaration":5019,"isOffset":false,"isSlot":false,"src":"9837:5:24","valueSize":1}],"id":5031,"nodeType":"InlineAssembly","src":"9804:48:24"},{"expression":{"id":5032,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"9869:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":5014,"id":5033,"nodeType":"Return","src":"9862:13:24"}]},"documentation":{"id":5006,"nodeType":"StructuredDocumentation","src":"9040:539:24","text":" @dev Return the an array containing all the keys\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5035,"implemented":true,"kind":"function","modifiers":[],"name":"keys","nameLocation":"9593:4:24","nodeType":"FunctionDefinition","parameters":{"id":5010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5009,"mutability":"mutable","name":"map","nameLocation":"9620:3:24","nodeType":"VariableDeclaration","scope":5035,"src":"9598:25:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap"},"typeName":{"id":5008,"nodeType":"UserDefinedTypeName","pathNode":{"id":5007,"name":"UintToUintMap","nameLocations":["9598:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":4802,"src":"9598:13:24"},"referencedDeclaration":4802,"src":"9598:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$4802_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToUintMap"}},"visibility":"internal"}],"src":"9597:27:24"},"returnParameters":{"id":5014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5035,"src":"9648:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5011,"name":"uint256","nodeType":"ElementaryTypeName","src":"9648:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5012,"nodeType":"ArrayTypeName","src":"9648:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"9647:18:24"},"scope":5798,"src":"9584:298:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableMapUpgradeable.UintToAddressMap","id":5039,"members":[{"constant":false,"id":5038,"mutability":"mutable","name":"_inner","nameLocation":"9967:6:24","nodeType":"VariableDeclaration","scope":5039,"src":"9947:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"},"typeName":{"id":5037,"nodeType":"UserDefinedTypeName","pathNode":{"id":5036,"name":"Bytes32ToBytes32Map","nameLocations":["9947:19:24"],"nodeType":"IdentifierPath","referencedDeclaration":4556,"src":"9947:19:24"},"referencedDeclaration":4556,"src":"9947:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"}},"visibility":"internal"}],"name":"UintToAddressMap","nameLocation":"9920:16:24","nodeType":"StructDefinition","scope":5798,"src":"9913:67:24","visibility":"public"},{"body":{"id":5071,"nodeType":"Block","src":"10302:87:24","statements":[{"expression":{"arguments":[{"expression":{"id":5053,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"10323:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap storage pointer"}},"id":5054,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10327:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5038,"src":"10323:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":5057,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"10343:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10335:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5055,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10335:7:24","typeDescriptions":{}}},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10335:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"arguments":[{"id":5065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5047,"src":"10373:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10365:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5063,"name":"uint160","nodeType":"ElementaryTypeName","src":"10365:7:24","typeDescriptions":{}}},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10365:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10357:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5061,"name":"uint256","nodeType":"ElementaryTypeName","src":"10357:7:24","typeDescriptions":{}}},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10357:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10349:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5059,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10349:7:24","typeDescriptions":{}}},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10349:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5052,"name":"set","nodeType":"Identifier","overloadedDeclarations":[4584,4829,5072,5339,5609],"referencedDeclaration":4584,"src":"10319:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"}},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10319:63:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5051,"id":5070,"nodeType":"Return","src":"10312:70:24"}]},"documentation":{"id":5040,"nodeType":"StructuredDocumentation","src":"9986:216:24","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":5072,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"10216:3:24","nodeType":"FunctionDefinition","parameters":{"id":5048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5043,"mutability":"mutable","name":"map","nameLocation":"10245:3:24","nodeType":"VariableDeclaration","scope":5072,"src":"10220:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap"},"typeName":{"id":5042,"nodeType":"UserDefinedTypeName","pathNode":{"id":5041,"name":"UintToAddressMap","nameLocations":["10220:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5039,"src":"10220:16:24"},"referencedDeclaration":5039,"src":"10220:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":5045,"mutability":"mutable","name":"key","nameLocation":"10258:3:24","nodeType":"VariableDeclaration","scope":5072,"src":"10250:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5044,"name":"uint256","nodeType":"ElementaryTypeName","src":"10250:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5047,"mutability":"mutable","name":"value","nameLocation":"10271:5:24","nodeType":"VariableDeclaration","scope":5072,"src":"10263:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5046,"name":"address","nodeType":"ElementaryTypeName","src":"10263:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10219:58:24"},"returnParameters":{"id":5051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5072,"src":"10296:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5049,"name":"bool","nodeType":"ElementaryTypeName","src":"10296:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10295:6:24"},"scope":5798,"src":"10207:182:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5092,"nodeType":"Block","src":"10631:56:24","statements":[{"expression":{"arguments":[{"expression":{"id":5084,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"10655:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap storage pointer"}},"id":5085,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10659:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5038,"src":"10655:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":5088,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"10675:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10667:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5086,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10667:7:24","typeDescriptions":{}}},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10667:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5083,"name":"remove","nodeType":"Identifier","overloadedDeclarations":[4608,4850,5093,5366,5627],"referencedDeclaration":4608,"src":"10648:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"}},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10648:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5082,"id":5091,"nodeType":"Return","src":"10641:39:24"}]},"documentation":{"id":5073,"nodeType":"StructuredDocumentation","src":"10395:148:24","text":" @dev Removes a value from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":5093,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"10557:6:24","nodeType":"FunctionDefinition","parameters":{"id":5079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5076,"mutability":"mutable","name":"map","nameLocation":"10589:3:24","nodeType":"VariableDeclaration","scope":5093,"src":"10564:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap"},"typeName":{"id":5075,"nodeType":"UserDefinedTypeName","pathNode":{"id":5074,"name":"UintToAddressMap","nameLocations":["10564:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5039,"src":"10564:16:24"},"referencedDeclaration":5039,"src":"10564:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":5078,"mutability":"mutable","name":"key","nameLocation":"10602:3:24","nodeType":"VariableDeclaration","scope":5093,"src":"10594:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5077,"name":"uint256","nodeType":"ElementaryTypeName","src":"10594:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10563:43:24"},"returnParameters":{"id":5082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5093,"src":"10625:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5080,"name":"bool","nodeType":"ElementaryTypeName","src":"10625:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10624:6:24"},"scope":5798,"src":"10548:139:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5113,"nodeType":"Block","src":"10856:58:24","statements":[{"expression":{"arguments":[{"expression":{"id":5105,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"10882:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap storage pointer"}},"id":5106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10886:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5038,"src":"10882:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":5109,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"10902:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10894:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10894:7:24","typeDescriptions":{}}},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10894:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5104,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[4626,4871,5114,5393,5645],"referencedDeclaration":4626,"src":"10873:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10873:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5103,"id":5112,"nodeType":"Return","src":"10866:41:24"}]},"documentation":{"id":5094,"nodeType":"StructuredDocumentation","src":"10693:68:24","text":" @dev Returns true if the key is in the map. O(1)."},"id":5114,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"10775:8:24","nodeType":"FunctionDefinition","parameters":{"id":5100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5097,"mutability":"mutable","name":"map","nameLocation":"10809:3:24","nodeType":"VariableDeclaration","scope":5114,"src":"10784:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap"},"typeName":{"id":5096,"nodeType":"UserDefinedTypeName","pathNode":{"id":5095,"name":"UintToAddressMap","nameLocations":["10784:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5039,"src":"10784:16:24"},"referencedDeclaration":5039,"src":"10784:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":5099,"mutability":"mutable","name":"key","nameLocation":"10822:3:24","nodeType":"VariableDeclaration","scope":5114,"src":"10814:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5098,"name":"uint256","nodeType":"ElementaryTypeName","src":"10814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10783:43:24"},"returnParameters":{"id":5103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5114,"src":"10850:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5101,"name":"bool","nodeType":"ElementaryTypeName","src":"10850:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10849:6:24"},"scope":5798,"src":"10766:148:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5128,"nodeType":"Block","src":"11075:42:24","statements":[{"expression":{"arguments":[{"expression":{"id":5124,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"11099:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap storage pointer"}},"id":5125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11103:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5038,"src":"11099:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}],"id":5123,"name":"length","nodeType":"Identifier","overloadedDeclarations":[4641,4886,5129,5408,5660],"referencedDeclaration":4641,"src":"11092:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer) view returns (uint256)"}},"id":5126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11092:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5122,"id":5127,"nodeType":"Return","src":"11085:25:24"}]},"documentation":{"id":5115,"nodeType":"StructuredDocumentation","src":"10920:72:24","text":" @dev Returns the number of elements in the map. O(1)."},"id":5129,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11006:6:24","nodeType":"FunctionDefinition","parameters":{"id":5119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5118,"mutability":"mutable","name":"map","nameLocation":"11038:3:24","nodeType":"VariableDeclaration","scope":5129,"src":"11013:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap"},"typeName":{"id":5117,"nodeType":"UserDefinedTypeName","pathNode":{"id":5116,"name":"UintToAddressMap","nameLocations":["11013:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5039,"src":"11013:16:24"},"referencedDeclaration":5039,"src":"11013:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap"}},"visibility":"internal"}],"src":"11012:30:24"},"returnParameters":{"id":5122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5129,"src":"11066:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5120,"name":"uint256","nodeType":"ElementaryTypeName","src":"11066:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11065:9:24"},"scope":5798,"src":"10997:120:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5168,"nodeType":"Block","src":"11552:134:24","statements":[{"assignments":[5143,5145],"declarations":[{"constant":false,"id":5143,"mutability":"mutable","name":"key","nameLocation":"11571:3:24","nodeType":"VariableDeclaration","scope":5168,"src":"11563:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5142,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11563:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5145,"mutability":"mutable","name":"value","nameLocation":"11584:5:24","nodeType":"VariableDeclaration","scope":5168,"src":"11576:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5144,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11576:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5151,"initialValue":{"arguments":[{"expression":{"id":5147,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"11596:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap storage pointer"}},"id":5148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11600:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5038,"src":"11596:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"id":5149,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"11608:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5146,"name":"at","nodeType":"Identifier","overloadedDeclarations":[4670,4920,5169,5448,5691],"referencedDeclaration":4670,"src":"11593:2:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"}},"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11593:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"11562:52:24"},{"expression":{"components":[{"arguments":[{"id":5154,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5143,"src":"11640:3:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11632:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5152,"name":"uint256","nodeType":"ElementaryTypeName","src":"11632:7:24","typeDescriptions":{}}},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11632:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"arguments":[{"id":5162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"11670:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11662:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5160,"name":"uint256","nodeType":"ElementaryTypeName","src":"11662:7:24","typeDescriptions":{}}},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11662:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11654:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5158,"name":"uint160","nodeType":"ElementaryTypeName","src":"11654:7:24","typeDescriptions":{}}},"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11654:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11646:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5156,"name":"address","nodeType":"ElementaryTypeName","src":"11646:7:24","typeDescriptions":{}}},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11646:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5166,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11631:48:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$","typeString":"tuple(uint256,address)"}},"functionReturnParameters":5141,"id":5167,"nodeType":"Return","src":"11624:55:24"}]},"documentation":{"id":5130,"nodeType":"StructuredDocumentation","src":"11123:326:24","text":" @dev Returns the element stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5169,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11463:2:24","nodeType":"FunctionDefinition","parameters":{"id":5136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5133,"mutability":"mutable","name":"map","nameLocation":"11491:3:24","nodeType":"VariableDeclaration","scope":5169,"src":"11466:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap"},"typeName":{"id":5132,"nodeType":"UserDefinedTypeName","pathNode":{"id":5131,"name":"UintToAddressMap","nameLocations":["11466:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5039,"src":"11466:16:24"},"referencedDeclaration":5039,"src":"11466:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":5135,"mutability":"mutable","name":"index","nameLocation":"11504:5:24","nodeType":"VariableDeclaration","scope":5169,"src":"11496:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5134,"name":"uint256","nodeType":"ElementaryTypeName","src":"11496:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11465:45:24"},"returnParameters":{"id":5141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5169,"src":"11534:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5137,"name":"uint256","nodeType":"ElementaryTypeName","src":"11534:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5169,"src":"11543:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5139,"name":"address","nodeType":"ElementaryTypeName","src":"11543:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11533:18:24"},"scope":5798,"src":"11454:232:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5208,"nodeType":"Block","src":"11924:141:24","statements":[{"assignments":[5183,5185],"declarations":[{"constant":false,"id":5183,"mutability":"mutable","name":"success","nameLocation":"11940:7:24","nodeType":"VariableDeclaration","scope":5208,"src":"11935:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5182,"name":"bool","nodeType":"ElementaryTypeName","src":"11935:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5185,"mutability":"mutable","name":"value","nameLocation":"11957:5:24","nodeType":"VariableDeclaration","scope":5208,"src":"11949:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11949:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5194,"initialValue":{"arguments":[{"expression":{"id":5187,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"11973:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap storage pointer"}},"id":5188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11977:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5038,"src":"11973:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":5191,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"11993:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11985:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11985:7:24","typeDescriptions":{}}},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11985:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5186,"name":"tryGet","nodeType":"Identifier","overloadedDeclarations":[4714,4954,5209,5488,5722],"referencedDeclaration":4714,"src":"11966:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"}},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"11934:64:24"},{"expression":{"components":[{"id":5195,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"12016:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"arguments":[{"id":5202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"12049:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12041:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5200,"name":"uint256","nodeType":"ElementaryTypeName","src":"12041:7:24","typeDescriptions":{}}},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12041:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12033:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5198,"name":"uint160","nodeType":"ElementaryTypeName","src":"12033:7:24","typeDescriptions":{}}},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12033:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12025:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5196,"name":"address","nodeType":"ElementaryTypeName","src":"12025:7:24","typeDescriptions":{}}},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12025:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12015:43:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5181,"id":5207,"nodeType":"Return","src":"12008:50:24"}]},"documentation":{"id":5170,"nodeType":"StructuredDocumentation","src":"11692:130:24","text":" @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."},"id":5209,"implemented":true,"kind":"function","modifiers":[],"name":"tryGet","nameLocation":"11836:6:24","nodeType":"FunctionDefinition","parameters":{"id":5176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5173,"mutability":"mutable","name":"map","nameLocation":"11868:3:24","nodeType":"VariableDeclaration","scope":5209,"src":"11843:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap"},"typeName":{"id":5172,"nodeType":"UserDefinedTypeName","pathNode":{"id":5171,"name":"UintToAddressMap","nameLocations":["11843:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5039,"src":"11843:16:24"},"referencedDeclaration":5039,"src":"11843:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":5175,"mutability":"mutable","name":"key","nameLocation":"11881:3:24","nodeType":"VariableDeclaration","scope":5209,"src":"11873:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5174,"name":"uint256","nodeType":"ElementaryTypeName","src":"11873:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11842:43:24"},"returnParameters":{"id":5181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5209,"src":"11909:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5177,"name":"bool","nodeType":"ElementaryTypeName","src":"11909:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5209,"src":"11915:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5179,"name":"address","nodeType":"ElementaryTypeName","src":"11915:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11908:15:24"},"scope":5798,"src":"11827:238:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5238,"nodeType":"Block","src":"12304:80:24","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":5227,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5213,"src":"12349:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap storage pointer"}},"id":5228,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12353:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5038,"src":"12349:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":5231,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"12369:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12361:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12361:7:24","typeDescriptions":{}}},"id":5232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12361:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5226,"name":"get","nodeType":"Identifier","overloadedDeclarations":[4747,4782,4978,5005,5239,5272,5518,5551,5743,5767],"referencedDeclaration":4747,"src":"12345:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"}},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12345:29:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12337:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5224,"name":"uint256","nodeType":"ElementaryTypeName","src":"12337:7:24","typeDescriptions":{}}},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12337:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12329:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5222,"name":"uint160","nodeType":"ElementaryTypeName","src":"12329:7:24","typeDescriptions":{}}},"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12329:47:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12321:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5220,"name":"address","nodeType":"ElementaryTypeName","src":"12321:7:24","typeDescriptions":{}}},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12321:56:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5219,"id":5237,"nodeType":"Return","src":"12314:63:24"}]},"documentation":{"id":5210,"nodeType":"StructuredDocumentation","src":"12071:140:24","text":" @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."},"id":5239,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"12225:3:24","nodeType":"FunctionDefinition","parameters":{"id":5216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5213,"mutability":"mutable","name":"map","nameLocation":"12254:3:24","nodeType":"VariableDeclaration","scope":5239,"src":"12229:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap"},"typeName":{"id":5212,"nodeType":"UserDefinedTypeName","pathNode":{"id":5211,"name":"UintToAddressMap","nameLocations":["12229:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5039,"src":"12229:16:24"},"referencedDeclaration":5039,"src":"12229:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":5215,"mutability":"mutable","name":"key","nameLocation":"12267:3:24","nodeType":"VariableDeclaration","scope":5239,"src":"12259:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5214,"name":"uint256","nodeType":"ElementaryTypeName","src":"12259:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:43:24"},"returnParameters":{"id":5219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5239,"src":"12295:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5217,"name":"address","nodeType":"ElementaryTypeName","src":"12295:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12294:9:24"},"scope":5798,"src":"12216:168:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5271,"nodeType":"Block","src":"12810:94:24","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":5259,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"12855:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap storage pointer"}},"id":5260,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12859:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5038,"src":"12855:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":5263,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"12875:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12867:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5261,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12867:7:24","typeDescriptions":{}}},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12867:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5265,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"12881:12:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5258,"name":"get","nodeType":"Identifier","overloadedDeclarations":[4747,4782,4978,5005,5239,5272,5518,5551,5743,5767],"referencedDeclaration":4782,"src":"12851:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32,string memory) view returns (bytes32)"}},"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12851:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12843:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5256,"name":"uint256","nodeType":"ElementaryTypeName","src":"12843:7:24","typeDescriptions":{}}},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12843:52:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12835:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5254,"name":"uint160","nodeType":"ElementaryTypeName","src":"12835:7:24","typeDescriptions":{}}},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12835:61:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12827:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5252,"name":"address","nodeType":"ElementaryTypeName","src":"12827:7:24","typeDescriptions":{}}},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12827:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5251,"id":5270,"nodeType":"Return","src":"12820:77:24"}]},"documentation":{"id":5240,"nodeType":"StructuredDocumentation","src":"12390:269:24","text":" @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."},"id":5272,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"12673:3:24","nodeType":"FunctionDefinition","parameters":{"id":5248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5243,"mutability":"mutable","name":"map","nameLocation":"12711:3:24","nodeType":"VariableDeclaration","scope":5272,"src":"12686:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap"},"typeName":{"id":5242,"nodeType":"UserDefinedTypeName","pathNode":{"id":5241,"name":"UintToAddressMap","nameLocations":["12686:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5039,"src":"12686:16:24"},"referencedDeclaration":5039,"src":"12686:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":5245,"mutability":"mutable","name":"key","nameLocation":"12732:3:24","nodeType":"VariableDeclaration","scope":5272,"src":"12724:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5244,"name":"uint256","nodeType":"ElementaryTypeName","src":"12724:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5247,"mutability":"mutable","name":"errorMessage","nameLocation":"12759:12:24","nodeType":"VariableDeclaration","scope":5272,"src":"12745:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5246,"name":"string","nodeType":"ElementaryTypeName","src":"12745:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12676:101:24"},"returnParameters":{"id":5251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5272,"src":"12801:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5249,"name":"address","nodeType":"ElementaryTypeName","src":"12801:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12800:9:24"},"scope":5798,"src":"12664:240:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5301,"nodeType":"Block","src":"13539:216:24","statements":[{"assignments":[5286],"declarations":[{"constant":false,"id":5286,"mutability":"mutable","name":"store","nameLocation":"13566:5:24","nodeType":"VariableDeclaration","scope":5301,"src":"13549:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13549:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5285,"nodeType":"ArrayTypeName","src":"13549:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5291,"initialValue":{"arguments":[{"expression":{"id":5288,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"13579:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap storage pointer"}},"id":5289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13583:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5038,"src":"13579:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}],"id":5287,"name":"keys","nodeType":"Identifier","overloadedDeclarations":[4798,5035,5302,5581,5797],"referencedDeclaration":4798,"src":"13574:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer) view returns (bytes32[] memory)"}},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13574:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"13549:41:24"},{"assignments":[5296],"declarations":[{"constant":false,"id":5296,"mutability":"mutable","name":"result","nameLocation":"13617:6:24","nodeType":"VariableDeclaration","scope":5301,"src":"13600:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5294,"name":"uint256","nodeType":"ElementaryTypeName","src":"13600:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5295,"nodeType":"ArrayTypeName","src":"13600:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5297,"nodeType":"VariableDeclarationStatement","src":"13600:23:24"},{"AST":{"nodeType":"YulBlock","src":"13686:39:24","statements":[{"nodeType":"YulAssignment","src":"13700:15:24","value":{"name":"store","nodeType":"YulIdentifier","src":"13710:5:24"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13700:6:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":5296,"isOffset":false,"isSlot":false,"src":"13700:6:24","valueSize":1},{"declaration":5286,"isOffset":false,"isSlot":false,"src":"13710:5:24","valueSize":1}],"id":5298,"nodeType":"InlineAssembly","src":"13677:48:24"},{"expression":{"id":5299,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"13742:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":5281,"id":5300,"nodeType":"Return","src":"13735:13:24"}]},"documentation":{"id":5273,"nodeType":"StructuredDocumentation","src":"12910:539:24","text":" @dev Return the an array containing all the keys\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5302,"implemented":true,"kind":"function","modifiers":[],"name":"keys","nameLocation":"13463:4:24","nodeType":"FunctionDefinition","parameters":{"id":5277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5276,"mutability":"mutable","name":"map","nameLocation":"13493:3:24","nodeType":"VariableDeclaration","scope":5302,"src":"13468:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap"},"typeName":{"id":5275,"nodeType":"UserDefinedTypeName","pathNode":{"id":5274,"name":"UintToAddressMap","nameLocations":["13468:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5039,"src":"13468:16:24"},"referencedDeclaration":5039,"src":"13468:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap"}},"visibility":"internal"}],"src":"13467:30:24"},"returnParameters":{"id":5281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5302,"src":"13521:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5278,"name":"uint256","nodeType":"ElementaryTypeName","src":"13521:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5279,"nodeType":"ArrayTypeName","src":"13521:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13520:18:24"},"scope":5798,"src":"13454:301:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableMapUpgradeable.AddressToUintMap","id":5306,"members":[{"constant":false,"id":5305,"mutability":"mutable","name":"_inner","nameLocation":"13840:6:24","nodeType":"VariableDeclaration","scope":5306,"src":"13820:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"},"typeName":{"id":5304,"nodeType":"UserDefinedTypeName","pathNode":{"id":5303,"name":"Bytes32ToBytes32Map","nameLocations":["13820:19:24"],"nodeType":"IdentifierPath","referencedDeclaration":4556,"src":"13820:19:24"},"referencedDeclaration":4556,"src":"13820:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"}},"visibility":"internal"}],"name":"AddressToUintMap","nameLocation":"13793:16:24","nodeType":"StructDefinition","scope":5798,"src":"13786:67:24","visibility":"public"},{"body":{"id":5338,"nodeType":"Block","src":"14175:87:24","statements":[{"expression":{"arguments":[{"expression":{"id":5320,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"14196:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap storage pointer"}},"id":5321,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14200:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5305,"src":"14196:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":5328,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"14232:3:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14224:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5326,"name":"uint160","nodeType":"ElementaryTypeName","src":"14224:7:24","typeDescriptions":{}}},"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14224:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14216:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5324,"name":"uint256","nodeType":"ElementaryTypeName","src":"14216:7:24","typeDescriptions":{}}},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14216:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14208:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14208:7:24","typeDescriptions":{}}},"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14208:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":5334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"14248:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14240:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14240:7:24","typeDescriptions":{}}},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14240:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5319,"name":"set","nodeType":"Identifier","overloadedDeclarations":[4584,4829,5072,5339,5609],"referencedDeclaration":4584,"src":"14192:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"}},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14192:63:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5318,"id":5337,"nodeType":"Return","src":"14185:70:24"}]},"documentation":{"id":5307,"nodeType":"StructuredDocumentation","src":"13859:216:24","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":5339,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"14089:3:24","nodeType":"FunctionDefinition","parameters":{"id":5315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5310,"mutability":"mutable","name":"map","nameLocation":"14118:3:24","nodeType":"VariableDeclaration","scope":5339,"src":"14093:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap"},"typeName":{"id":5309,"nodeType":"UserDefinedTypeName","pathNode":{"id":5308,"name":"AddressToUintMap","nameLocations":["14093:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5306,"src":"14093:16:24"},"referencedDeclaration":5306,"src":"14093:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":5312,"mutability":"mutable","name":"key","nameLocation":"14131:3:24","nodeType":"VariableDeclaration","scope":5339,"src":"14123:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5311,"name":"address","nodeType":"ElementaryTypeName","src":"14123:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5314,"mutability":"mutable","name":"value","nameLocation":"14144:5:24","nodeType":"VariableDeclaration","scope":5339,"src":"14136:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5313,"name":"uint256","nodeType":"ElementaryTypeName","src":"14136:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14092:58:24"},"returnParameters":{"id":5318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5339,"src":"14169:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5316,"name":"bool","nodeType":"ElementaryTypeName","src":"14169:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14168:6:24"},"scope":5798,"src":"14080:182:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5365,"nodeType":"Block","src":"14504:74:24","statements":[{"expression":{"arguments":[{"expression":{"id":5351,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5343,"src":"14528:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap storage pointer"}},"id":5352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14532:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5305,"src":"14528:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":5359,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"14564:3:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14556:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5357,"name":"uint160","nodeType":"ElementaryTypeName","src":"14556:7:24","typeDescriptions":{}}},"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14556:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14548:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5355,"name":"uint256","nodeType":"ElementaryTypeName","src":"14548:7:24","typeDescriptions":{}}},"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14548:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14540:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14540:7:24","typeDescriptions":{}}},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14540:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5350,"name":"remove","nodeType":"Identifier","overloadedDeclarations":[4608,4850,5093,5366,5627],"referencedDeclaration":4608,"src":"14521:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"}},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14521:50:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5349,"id":5364,"nodeType":"Return","src":"14514:57:24"}]},"documentation":{"id":5340,"nodeType":"StructuredDocumentation","src":"14268:148:24","text":" @dev Removes a value from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":5366,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"14430:6:24","nodeType":"FunctionDefinition","parameters":{"id":5346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5343,"mutability":"mutable","name":"map","nameLocation":"14462:3:24","nodeType":"VariableDeclaration","scope":5366,"src":"14437:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap"},"typeName":{"id":5342,"nodeType":"UserDefinedTypeName","pathNode":{"id":5341,"name":"AddressToUintMap","nameLocations":["14437:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5306,"src":"14437:16:24"},"referencedDeclaration":5306,"src":"14437:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":5345,"mutability":"mutable","name":"key","nameLocation":"14475:3:24","nodeType":"VariableDeclaration","scope":5366,"src":"14467:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5344,"name":"address","nodeType":"ElementaryTypeName","src":"14467:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14436:43:24"},"returnParameters":{"id":5349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5366,"src":"14498:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5347,"name":"bool","nodeType":"ElementaryTypeName","src":"14498:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14497:6:24"},"scope":5798,"src":"14421:157:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5392,"nodeType":"Block","src":"14747:76:24","statements":[{"expression":{"arguments":[{"expression":{"id":5378,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"14773:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap storage pointer"}},"id":5379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14777:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5305,"src":"14773:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":5386,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"14809:3:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14801:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5384,"name":"uint160","nodeType":"ElementaryTypeName","src":"14801:7:24","typeDescriptions":{}}},"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14801:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14793:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5382,"name":"uint256","nodeType":"ElementaryTypeName","src":"14793:7:24","typeDescriptions":{}}},"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14793:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14785:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14785:7:24","typeDescriptions":{}}},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14785:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5377,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[4626,4871,5114,5393,5645],"referencedDeclaration":4626,"src":"14764:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14764:52:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5376,"id":5391,"nodeType":"Return","src":"14757:59:24"}]},"documentation":{"id":5367,"nodeType":"StructuredDocumentation","src":"14584:68:24","text":" @dev Returns true if the key is in the map. O(1)."},"id":5393,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"14666:8:24","nodeType":"FunctionDefinition","parameters":{"id":5373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5370,"mutability":"mutable","name":"map","nameLocation":"14700:3:24","nodeType":"VariableDeclaration","scope":5393,"src":"14675:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap"},"typeName":{"id":5369,"nodeType":"UserDefinedTypeName","pathNode":{"id":5368,"name":"AddressToUintMap","nameLocations":["14675:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5306,"src":"14675:16:24"},"referencedDeclaration":5306,"src":"14675:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":5372,"mutability":"mutable","name":"key","nameLocation":"14713:3:24","nodeType":"VariableDeclaration","scope":5393,"src":"14705:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5371,"name":"address","nodeType":"ElementaryTypeName","src":"14705:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14674:43:24"},"returnParameters":{"id":5376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5393,"src":"14741:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5374,"name":"bool","nodeType":"ElementaryTypeName","src":"14741:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14740:6:24"},"scope":5798,"src":"14657:166:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5407,"nodeType":"Block","src":"14984:42:24","statements":[{"expression":{"arguments":[{"expression":{"id":5403,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5397,"src":"15008:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap storage pointer"}},"id":5404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15012:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5305,"src":"15008:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}],"id":5402,"name":"length","nodeType":"Identifier","overloadedDeclarations":[4641,4886,5129,5408,5660],"referencedDeclaration":4641,"src":"15001:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer) view returns (uint256)"}},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15001:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5401,"id":5406,"nodeType":"Return","src":"14994:25:24"}]},"documentation":{"id":5394,"nodeType":"StructuredDocumentation","src":"14829:72:24","text":" @dev Returns the number of elements in the map. O(1)."},"id":5408,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"14915:6:24","nodeType":"FunctionDefinition","parameters":{"id":5398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5397,"mutability":"mutable","name":"map","nameLocation":"14947:3:24","nodeType":"VariableDeclaration","scope":5408,"src":"14922:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap"},"typeName":{"id":5396,"nodeType":"UserDefinedTypeName","pathNode":{"id":5395,"name":"AddressToUintMap","nameLocations":["14922:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5306,"src":"14922:16:24"},"referencedDeclaration":5306,"src":"14922:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap"}},"visibility":"internal"}],"src":"14921:30:24"},"returnParameters":{"id":5401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5408,"src":"14975:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5399,"name":"uint256","nodeType":"ElementaryTypeName","src":"14975:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14974:9:24"},"scope":5798,"src":"14906:120:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5447,"nodeType":"Block","src":"15461:134:24","statements":[{"assignments":[5422,5424],"declarations":[{"constant":false,"id":5422,"mutability":"mutable","name":"key","nameLocation":"15480:3:24","nodeType":"VariableDeclaration","scope":5447,"src":"15472:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5421,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15472:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5424,"mutability":"mutable","name":"value","nameLocation":"15493:5:24","nodeType":"VariableDeclaration","scope":5447,"src":"15485:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15485:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5430,"initialValue":{"arguments":[{"expression":{"id":5426,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"15505:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap storage pointer"}},"id":5427,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15509:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5305,"src":"15505:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"id":5428,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"15517:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5425,"name":"at","nodeType":"Identifier","overloadedDeclarations":[4670,4920,5169,5448,5691],"referencedDeclaration":4670,"src":"15502:2:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"}},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15502:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"15471:52:24"},{"expression":{"components":[{"arguments":[{"arguments":[{"arguments":[{"id":5437,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"15565:3:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15557:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5435,"name":"uint256","nodeType":"ElementaryTypeName","src":"15557:7:24","typeDescriptions":{}}},"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15557:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15549:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5433,"name":"uint160","nodeType":"ElementaryTypeName","src":"15549:7:24","typeDescriptions":{}}},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15549:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15541:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5431,"name":"address","nodeType":"ElementaryTypeName","src":"15541:7:24","typeDescriptions":{}}},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15541:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"15581:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15573:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5441,"name":"uint256","nodeType":"ElementaryTypeName","src":"15573:7:24","typeDescriptions":{}}},"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15573:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5445,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15540:48:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"functionReturnParameters":5420,"id":5446,"nodeType":"Return","src":"15533:55:24"}]},"documentation":{"id":5409,"nodeType":"StructuredDocumentation","src":"15032:326:24","text":" @dev Returns the element stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5448,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"15372:2:24","nodeType":"FunctionDefinition","parameters":{"id":5415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5412,"mutability":"mutable","name":"map","nameLocation":"15400:3:24","nodeType":"VariableDeclaration","scope":5448,"src":"15375:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap"},"typeName":{"id":5411,"nodeType":"UserDefinedTypeName","pathNode":{"id":5410,"name":"AddressToUintMap","nameLocations":["15375:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5306,"src":"15375:16:24"},"referencedDeclaration":5306,"src":"15375:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":5414,"mutability":"mutable","name":"index","nameLocation":"15413:5:24","nodeType":"VariableDeclaration","scope":5448,"src":"15405:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5413,"name":"uint256","nodeType":"ElementaryTypeName","src":"15405:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15374:45:24"},"returnParameters":{"id":5420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5448,"src":"15443:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5416,"name":"address","nodeType":"ElementaryTypeName","src":"15443:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5448,"src":"15452:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5418,"name":"uint256","nodeType":"ElementaryTypeName","src":"15452:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15442:18:24"},"scope":5798,"src":"15363:232:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5487,"nodeType":"Block","src":"15833:141:24","statements":[{"assignments":[5462,5464],"declarations":[{"constant":false,"id":5462,"mutability":"mutable","name":"success","nameLocation":"15849:7:24","nodeType":"VariableDeclaration","scope":5487,"src":"15844:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5461,"name":"bool","nodeType":"ElementaryTypeName","src":"15844:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5464,"mutability":"mutable","name":"value","nameLocation":"15866:5:24","nodeType":"VariableDeclaration","scope":5487,"src":"15858:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5463,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15858:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5479,"initialValue":{"arguments":[{"expression":{"id":5466,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"15882:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap storage pointer"}},"id":5467,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15886:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5305,"src":"15882:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":5474,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"15918:3:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15910:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5472,"name":"uint160","nodeType":"ElementaryTypeName","src":"15910:7:24","typeDescriptions":{}}},"id":5475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15910:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15902:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5470,"name":"uint256","nodeType":"ElementaryTypeName","src":"15902:7:24","typeDescriptions":{}}},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15902:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15894:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15894:7:24","typeDescriptions":{}}},"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15894:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5465,"name":"tryGet","nodeType":"Identifier","overloadedDeclarations":[4714,4954,5209,5488,5722],"referencedDeclaration":4714,"src":"15875:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"}},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15875:50:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"15843:82:24"},{"expression":{"components":[{"id":5480,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5462,"src":"15943:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"id":5483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"15960:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15952:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5481,"name":"uint256","nodeType":"ElementaryTypeName","src":"15952:7:24","typeDescriptions":{}}},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15952:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5485,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15942:25:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5460,"id":5486,"nodeType":"Return","src":"15935:32:24"}]},"documentation":{"id":5449,"nodeType":"StructuredDocumentation","src":"15601:130:24","text":" @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."},"id":5488,"implemented":true,"kind":"function","modifiers":[],"name":"tryGet","nameLocation":"15745:6:24","nodeType":"FunctionDefinition","parameters":{"id":5455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5452,"mutability":"mutable","name":"map","nameLocation":"15777:3:24","nodeType":"VariableDeclaration","scope":5488,"src":"15752:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap"},"typeName":{"id":5451,"nodeType":"UserDefinedTypeName","pathNode":{"id":5450,"name":"AddressToUintMap","nameLocations":["15752:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5306,"src":"15752:16:24"},"referencedDeclaration":5306,"src":"15752:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":5454,"mutability":"mutable","name":"key","nameLocation":"15790:3:24","nodeType":"VariableDeclaration","scope":5488,"src":"15782:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5453,"name":"address","nodeType":"ElementaryTypeName","src":"15782:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15751:43:24"},"returnParameters":{"id":5460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5488,"src":"15818:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5456,"name":"bool","nodeType":"ElementaryTypeName","src":"15818:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5488,"src":"15824:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5458,"name":"uint256","nodeType":"ElementaryTypeName","src":"15824:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15817:15:24"},"scope":5798,"src":"15736:238:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5517,"nodeType":"Block","src":"16213:80:24","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":5502,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"16242:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap storage pointer"}},"id":5503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16246:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5305,"src":"16242:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":5510,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"16278:3:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16270:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5508,"name":"uint160","nodeType":"ElementaryTypeName","src":"16270:7:24","typeDescriptions":{}}},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16270:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16262:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5506,"name":"uint256","nodeType":"ElementaryTypeName","src":"16262:7:24","typeDescriptions":{}}},"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16262:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16254:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16254:7:24","typeDescriptions":{}}},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16254:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5501,"name":"get","nodeType":"Identifier","overloadedDeclarations":[4747,4782,4978,5005,5239,5272,5518,5551,5743,5767],"referencedDeclaration":4747,"src":"16238:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"}},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16238:47:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16230:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5499,"name":"uint256","nodeType":"ElementaryTypeName","src":"16230:7:24","typeDescriptions":{}}},"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16230:56:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5498,"id":5516,"nodeType":"Return","src":"16223:63:24"}]},"documentation":{"id":5489,"nodeType":"StructuredDocumentation","src":"15980:140:24","text":" @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."},"id":5518,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"16134:3:24","nodeType":"FunctionDefinition","parameters":{"id":5495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5492,"mutability":"mutable","name":"map","nameLocation":"16163:3:24","nodeType":"VariableDeclaration","scope":5518,"src":"16138:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap"},"typeName":{"id":5491,"nodeType":"UserDefinedTypeName","pathNode":{"id":5490,"name":"AddressToUintMap","nameLocations":["16138:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5306,"src":"16138:16:24"},"referencedDeclaration":5306,"src":"16138:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":5494,"mutability":"mutable","name":"key","nameLocation":"16176:3:24","nodeType":"VariableDeclaration","scope":5518,"src":"16168:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5493,"name":"address","nodeType":"ElementaryTypeName","src":"16168:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16137:43:24"},"returnParameters":{"id":5498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5518,"src":"16204:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5496,"name":"uint256","nodeType":"ElementaryTypeName","src":"16204:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16203:9:24"},"scope":5798,"src":"16125:168:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5550,"nodeType":"Block","src":"16719:94:24","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":5534,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5522,"src":"16748:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap storage pointer"}},"id":5535,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16752:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5305,"src":"16748:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":5542,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"16784:3:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16776:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5540,"name":"uint160","nodeType":"ElementaryTypeName","src":"16776:7:24","typeDescriptions":{}}},"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16776:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16768:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5538,"name":"uint256","nodeType":"ElementaryTypeName","src":"16768:7:24","typeDescriptions":{}}},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16768:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16760:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5536,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16760:7:24","typeDescriptions":{}}},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16760:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5546,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"16792:12:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5533,"name":"get","nodeType":"Identifier","overloadedDeclarations":[4747,4782,4978,5005,5239,5272,5518,5551,5743,5767],"referencedDeclaration":4782,"src":"16744:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32,string memory) view returns (bytes32)"}},"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16744:61:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16736:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5531,"name":"uint256","nodeType":"ElementaryTypeName","src":"16736:7:24","typeDescriptions":{}}},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16736:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5530,"id":5549,"nodeType":"Return","src":"16729:77:24"}]},"documentation":{"id":5519,"nodeType":"StructuredDocumentation","src":"16299:269:24","text":" @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."},"id":5551,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"16582:3:24","nodeType":"FunctionDefinition","parameters":{"id":5527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5522,"mutability":"mutable","name":"map","nameLocation":"16620:3:24","nodeType":"VariableDeclaration","scope":5551,"src":"16595:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap"},"typeName":{"id":5521,"nodeType":"UserDefinedTypeName","pathNode":{"id":5520,"name":"AddressToUintMap","nameLocations":["16595:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5306,"src":"16595:16:24"},"referencedDeclaration":5306,"src":"16595:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":5524,"mutability":"mutable","name":"key","nameLocation":"16641:3:24","nodeType":"VariableDeclaration","scope":5551,"src":"16633:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5523,"name":"address","nodeType":"ElementaryTypeName","src":"16633:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5526,"mutability":"mutable","name":"errorMessage","nameLocation":"16668:12:24","nodeType":"VariableDeclaration","scope":5551,"src":"16654:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5525,"name":"string","nodeType":"ElementaryTypeName","src":"16654:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16585:101:24"},"returnParameters":{"id":5530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5551,"src":"16710:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5528,"name":"uint256","nodeType":"ElementaryTypeName","src":"16710:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16709:9:24"},"scope":5798,"src":"16573:240:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5580,"nodeType":"Block","src":"17448:216:24","statements":[{"assignments":[5565],"declarations":[{"constant":false,"id":5565,"mutability":"mutable","name":"store","nameLocation":"17475:5:24","nodeType":"VariableDeclaration","scope":5580,"src":"17458:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17458:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5564,"nodeType":"ArrayTypeName","src":"17458:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5570,"initialValue":{"arguments":[{"expression":{"id":5567,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"17488:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap storage pointer"}},"id":5568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17492:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5305,"src":"17488:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}],"id":5566,"name":"keys","nodeType":"Identifier","overloadedDeclarations":[4798,5035,5302,5581,5797],"referencedDeclaration":4798,"src":"17483:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer) view returns (bytes32[] memory)"}},"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17483:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"17458:41:24"},{"assignments":[5575],"declarations":[{"constant":false,"id":5575,"mutability":"mutable","name":"result","nameLocation":"17526:6:24","nodeType":"VariableDeclaration","scope":5580,"src":"17509:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5573,"name":"address","nodeType":"ElementaryTypeName","src":"17509:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5574,"nodeType":"ArrayTypeName","src":"17509:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5576,"nodeType":"VariableDeclarationStatement","src":"17509:23:24"},{"AST":{"nodeType":"YulBlock","src":"17595:39:24","statements":[{"nodeType":"YulAssignment","src":"17609:15:24","value":{"name":"store","nodeType":"YulIdentifier","src":"17619:5:24"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17609:6:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":5575,"isOffset":false,"isSlot":false,"src":"17609:6:24","valueSize":1},{"declaration":5565,"isOffset":false,"isSlot":false,"src":"17619:5:24","valueSize":1}],"id":5577,"nodeType":"InlineAssembly","src":"17586:48:24"},{"expression":{"id":5578,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"17651:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":5560,"id":5579,"nodeType":"Return","src":"17644:13:24"}]},"documentation":{"id":5552,"nodeType":"StructuredDocumentation","src":"16819:539:24","text":" @dev Return the an array containing all the keys\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5581,"implemented":true,"kind":"function","modifiers":[],"name":"keys","nameLocation":"17372:4:24","nodeType":"FunctionDefinition","parameters":{"id":5556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5555,"mutability":"mutable","name":"map","nameLocation":"17402:3:24","nodeType":"VariableDeclaration","scope":5581,"src":"17377:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap"},"typeName":{"id":5554,"nodeType":"UserDefinedTypeName","pathNode":{"id":5553,"name":"AddressToUintMap","nameLocations":["17377:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5306,"src":"17377:16:24"},"referencedDeclaration":5306,"src":"17377:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap"}},"visibility":"internal"}],"src":"17376:30:24"},"returnParameters":{"id":5560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5581,"src":"17430:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5557,"name":"address","nodeType":"ElementaryTypeName","src":"17430:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5558,"nodeType":"ArrayTypeName","src":"17430:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"17429:18:24"},"scope":5798,"src":"17363:301:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableMapUpgradeable.Bytes32ToUintMap","id":5585,"members":[{"constant":false,"id":5584,"mutability":"mutable","name":"_inner","nameLocation":"17749:6:24","nodeType":"VariableDeclaration","scope":5585,"src":"17729:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"},"typeName":{"id":5583,"nodeType":"UserDefinedTypeName","pathNode":{"id":5582,"name":"Bytes32ToBytes32Map","nameLocations":["17729:19:24"],"nodeType":"IdentifierPath","referencedDeclaration":4556,"src":"17729:19:24"},"referencedDeclaration":4556,"src":"17729:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map"}},"visibility":"internal"}],"name":"Bytes32ToUintMap","nameLocation":"17702:16:24","nodeType":"StructDefinition","scope":5798,"src":"17695:67:24","visibility":"public"},{"body":{"id":5608,"nodeType":"Block","src":"18084:60:24","statements":[{"expression":{"arguments":[{"expression":{"id":5599,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"18105:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap storage pointer"}},"id":5600,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18109:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5584,"src":"18105:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"id":5601,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"18117:3:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":5604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"18130:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18122:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5602,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18122:7:24","typeDescriptions":{}}},"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18122:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5598,"name":"set","nodeType":"Identifier","overloadedDeclarations":[4584,4829,5072,5339,5609],"referencedDeclaration":4584,"src":"18101:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"}},"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18101:36:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5597,"id":5607,"nodeType":"Return","src":"18094:43:24"}]},"documentation":{"id":5586,"nodeType":"StructuredDocumentation","src":"17768:216:24","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":5609,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"17998:3:24","nodeType":"FunctionDefinition","parameters":{"id":5594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5589,"mutability":"mutable","name":"map","nameLocation":"18027:3:24","nodeType":"VariableDeclaration","scope":5609,"src":"18002:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap"},"typeName":{"id":5588,"nodeType":"UserDefinedTypeName","pathNode":{"id":5587,"name":"Bytes32ToUintMap","nameLocations":["18002:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5585,"src":"18002:16:24"},"referencedDeclaration":5585,"src":"18002:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":5591,"mutability":"mutable","name":"key","nameLocation":"18040:3:24","nodeType":"VariableDeclaration","scope":5609,"src":"18032:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18032:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5593,"mutability":"mutable","name":"value","nameLocation":"18053:5:24","nodeType":"VariableDeclaration","scope":5609,"src":"18045:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5592,"name":"uint256","nodeType":"ElementaryTypeName","src":"18045:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18001:58:24"},"returnParameters":{"id":5597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5609,"src":"18078:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5595,"name":"bool","nodeType":"ElementaryTypeName","src":"18078:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18077:6:24"},"scope":5798,"src":"17989:155:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5626,"nodeType":"Block","src":"18386:47:24","statements":[{"expression":{"arguments":[{"expression":{"id":5621,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5613,"src":"18410:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap storage pointer"}},"id":5622,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18414:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5584,"src":"18410:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"id":5623,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5615,"src":"18422:3:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5620,"name":"remove","nodeType":"Identifier","overloadedDeclarations":[4608,4850,5093,5366,5627],"referencedDeclaration":4608,"src":"18403:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"}},"id":5624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18403:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5619,"id":5625,"nodeType":"Return","src":"18396:30:24"}]},"documentation":{"id":5610,"nodeType":"StructuredDocumentation","src":"18150:148:24","text":" @dev Removes a value from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":5627,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"18312:6:24","nodeType":"FunctionDefinition","parameters":{"id":5616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5613,"mutability":"mutable","name":"map","nameLocation":"18344:3:24","nodeType":"VariableDeclaration","scope":5627,"src":"18319:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap"},"typeName":{"id":5612,"nodeType":"UserDefinedTypeName","pathNode":{"id":5611,"name":"Bytes32ToUintMap","nameLocations":["18319:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5585,"src":"18319:16:24"},"referencedDeclaration":5585,"src":"18319:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":5615,"mutability":"mutable","name":"key","nameLocation":"18357:3:24","nodeType":"VariableDeclaration","scope":5627,"src":"18349:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18349:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18318:43:24"},"returnParameters":{"id":5619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5627,"src":"18380:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5617,"name":"bool","nodeType":"ElementaryTypeName","src":"18380:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18379:6:24"},"scope":5798,"src":"18303:130:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5644,"nodeType":"Block","src":"18602:49:24","statements":[{"expression":{"arguments":[{"expression":{"id":5639,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"18628:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap storage pointer"}},"id":5640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18632:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5584,"src":"18628:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"id":5641,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"18640:3:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5638,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[4626,4871,5114,5393,5645],"referencedDeclaration":4626,"src":"18619:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18619:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5637,"id":5643,"nodeType":"Return","src":"18612:32:24"}]},"documentation":{"id":5628,"nodeType":"StructuredDocumentation","src":"18439:68:24","text":" @dev Returns true if the key is in the map. O(1)."},"id":5645,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"18521:8:24","nodeType":"FunctionDefinition","parameters":{"id":5634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5631,"mutability":"mutable","name":"map","nameLocation":"18555:3:24","nodeType":"VariableDeclaration","scope":5645,"src":"18530:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap"},"typeName":{"id":5630,"nodeType":"UserDefinedTypeName","pathNode":{"id":5629,"name":"Bytes32ToUintMap","nameLocations":["18530:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5585,"src":"18530:16:24"},"referencedDeclaration":5585,"src":"18530:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":5633,"mutability":"mutable","name":"key","nameLocation":"18568:3:24","nodeType":"VariableDeclaration","scope":5645,"src":"18560:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18560:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18529:43:24"},"returnParameters":{"id":5637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5645,"src":"18596:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5635,"name":"bool","nodeType":"ElementaryTypeName","src":"18596:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18595:6:24"},"scope":5798,"src":"18512:139:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5659,"nodeType":"Block","src":"18812:42:24","statements":[{"expression":{"arguments":[{"expression":{"id":5655,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5649,"src":"18836:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap storage pointer"}},"id":5656,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18840:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5584,"src":"18836:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}],"id":5654,"name":"length","nodeType":"Identifier","overloadedDeclarations":[4641,4886,5129,5408,5660],"referencedDeclaration":4641,"src":"18829:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer) view returns (uint256)"}},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18829:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5653,"id":5658,"nodeType":"Return","src":"18822:25:24"}]},"documentation":{"id":5646,"nodeType":"StructuredDocumentation","src":"18657:72:24","text":" @dev Returns the number of elements in the map. O(1)."},"id":5660,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"18743:6:24","nodeType":"FunctionDefinition","parameters":{"id":5650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5649,"mutability":"mutable","name":"map","nameLocation":"18775:3:24","nodeType":"VariableDeclaration","scope":5660,"src":"18750:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap"},"typeName":{"id":5648,"nodeType":"UserDefinedTypeName","pathNode":{"id":5647,"name":"Bytes32ToUintMap","nameLocations":["18750:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5585,"src":"18750:16:24"},"referencedDeclaration":5585,"src":"18750:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap"}},"visibility":"internal"}],"src":"18749:30:24"},"returnParameters":{"id":5653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5660,"src":"18803:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5651,"name":"uint256","nodeType":"ElementaryTypeName","src":"18803:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18802:9:24"},"scope":5798,"src":"18734:120:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5690,"nodeType":"Block","src":"19289:107:24","statements":[{"assignments":[5674,5676],"declarations":[{"constant":false,"id":5674,"mutability":"mutable","name":"key","nameLocation":"19308:3:24","nodeType":"VariableDeclaration","scope":5690,"src":"19300:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5673,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19300:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5676,"mutability":"mutable","name":"value","nameLocation":"19321:5:24","nodeType":"VariableDeclaration","scope":5690,"src":"19313:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19313:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5682,"initialValue":{"arguments":[{"expression":{"id":5678,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"19333:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap storage pointer"}},"id":5679,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19337:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5584,"src":"19333:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"id":5680,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"19345:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5677,"name":"at","nodeType":"Identifier","overloadedDeclarations":[4670,4920,5169,5448,5691],"referencedDeclaration":4670,"src":"19330:2:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"}},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19330:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"19299:52:24"},{"expression":{"components":[{"id":5683,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5674,"src":"19369:3:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":5686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"19382:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19374:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5684,"name":"uint256","nodeType":"ElementaryTypeName","src":"19374:7:24","typeDescriptions":{}}},"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19374:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5688,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19368:21:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_uint256_$","typeString":"tuple(bytes32,uint256)"}},"functionReturnParameters":5672,"id":5689,"nodeType":"Return","src":"19361:28:24"}]},"documentation":{"id":5661,"nodeType":"StructuredDocumentation","src":"18860:326:24","text":" @dev Returns the element stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5691,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"19200:2:24","nodeType":"FunctionDefinition","parameters":{"id":5667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5664,"mutability":"mutable","name":"map","nameLocation":"19228:3:24","nodeType":"VariableDeclaration","scope":5691,"src":"19203:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap"},"typeName":{"id":5663,"nodeType":"UserDefinedTypeName","pathNode":{"id":5662,"name":"Bytes32ToUintMap","nameLocations":["19203:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5585,"src":"19203:16:24"},"referencedDeclaration":5585,"src":"19203:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":5666,"mutability":"mutable","name":"index","nameLocation":"19241:5:24","nodeType":"VariableDeclaration","scope":5691,"src":"19233:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5665,"name":"uint256","nodeType":"ElementaryTypeName","src":"19233:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19202:45:24"},"returnParameters":{"id":5672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5691,"src":"19271:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19271:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5691,"src":"19280:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5670,"name":"uint256","nodeType":"ElementaryTypeName","src":"19280:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19270:18:24"},"scope":5798,"src":"19191:205:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5721,"nodeType":"Block","src":"19634:114:24","statements":[{"assignments":[5705,5707],"declarations":[{"constant":false,"id":5705,"mutability":"mutable","name":"success","nameLocation":"19650:7:24","nodeType":"VariableDeclaration","scope":5721,"src":"19645:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5704,"name":"bool","nodeType":"ElementaryTypeName","src":"19645:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5707,"mutability":"mutable","name":"value","nameLocation":"19667:5:24","nodeType":"VariableDeclaration","scope":5721,"src":"19659:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19659:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5713,"initialValue":{"arguments":[{"expression":{"id":5709,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5695,"src":"19683:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap storage pointer"}},"id":5710,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19687:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5584,"src":"19683:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"id":5711,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"19695:3:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5708,"name":"tryGet","nodeType":"Identifier","overloadedDeclarations":[4714,4954,5209,5488,5722],"referencedDeclaration":4714,"src":"19676:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"}},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19676:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"19644:55:24"},{"expression":{"components":[{"id":5714,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"19717:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"id":5717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"19734:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19726:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5715,"name":"uint256","nodeType":"ElementaryTypeName","src":"19726:7:24","typeDescriptions":{}}},"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19726:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5719,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19716:25:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5703,"id":5720,"nodeType":"Return","src":"19709:32:24"}]},"documentation":{"id":5692,"nodeType":"StructuredDocumentation","src":"19402:130:24","text":" @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."},"id":5722,"implemented":true,"kind":"function","modifiers":[],"name":"tryGet","nameLocation":"19546:6:24","nodeType":"FunctionDefinition","parameters":{"id":5698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5695,"mutability":"mutable","name":"map","nameLocation":"19578:3:24","nodeType":"VariableDeclaration","scope":5722,"src":"19553:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap"},"typeName":{"id":5694,"nodeType":"UserDefinedTypeName","pathNode":{"id":5693,"name":"Bytes32ToUintMap","nameLocations":["19553:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5585,"src":"19553:16:24"},"referencedDeclaration":5585,"src":"19553:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":5697,"mutability":"mutable","name":"key","nameLocation":"19591:3:24","nodeType":"VariableDeclaration","scope":5722,"src":"19583:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5696,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19583:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19552:43:24"},"returnParameters":{"id":5703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5722,"src":"19619:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5699,"name":"bool","nodeType":"ElementaryTypeName","src":"19619:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5722,"src":"19625:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5701,"name":"uint256","nodeType":"ElementaryTypeName","src":"19625:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19618:15:24"},"scope":5798,"src":"19537:211:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5742,"nodeType":"Block","src":"19987:53:24","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":5736,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"20016:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap storage pointer"}},"id":5737,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20020:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5584,"src":"20016:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"id":5738,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5728,"src":"20028:3:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5735,"name":"get","nodeType":"Identifier","overloadedDeclarations":[4747,4782,4978,5005,5239,5272,5518,5551,5743,5767],"referencedDeclaration":4747,"src":"20012:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"}},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20012:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20004:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5733,"name":"uint256","nodeType":"ElementaryTypeName","src":"20004:7:24","typeDescriptions":{}}},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20004:29:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5732,"id":5741,"nodeType":"Return","src":"19997:36:24"}]},"documentation":{"id":5723,"nodeType":"StructuredDocumentation","src":"19754:140:24","text":" @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."},"id":5743,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"19908:3:24","nodeType":"FunctionDefinition","parameters":{"id":5729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5726,"mutability":"mutable","name":"map","nameLocation":"19937:3:24","nodeType":"VariableDeclaration","scope":5743,"src":"19912:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap"},"typeName":{"id":5725,"nodeType":"UserDefinedTypeName","pathNode":{"id":5724,"name":"Bytes32ToUintMap","nameLocations":["19912:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5585,"src":"19912:16:24"},"referencedDeclaration":5585,"src":"19912:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":5728,"mutability":"mutable","name":"key","nameLocation":"19950:3:24","nodeType":"VariableDeclaration","scope":5743,"src":"19942:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5727,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19942:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19911:43:24"},"returnParameters":{"id":5732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5743,"src":"19978:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5730,"name":"uint256","nodeType":"ElementaryTypeName","src":"19978:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19977:9:24"},"scope":5798,"src":"19899:141:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5766,"nodeType":"Block","src":"20466:67:24","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":5759,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"20495:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap storage pointer"}},"id":5760,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20499:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5584,"src":"20495:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}},{"id":5761,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"20507:3:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5762,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"20512:12:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5758,"name":"get","nodeType":"Identifier","overloadedDeclarations":[4747,4782,4978,5005,5239,5272,5518,5551,5743,5767],"referencedDeclaration":4782,"src":"20491:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer,bytes32,string memory) view returns (bytes32)"}},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20491:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20483:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5756,"name":"uint256","nodeType":"ElementaryTypeName","src":"20483:7:24","typeDescriptions":{}}},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20483:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5755,"id":5765,"nodeType":"Return","src":"20476:50:24"}]},"documentation":{"id":5744,"nodeType":"StructuredDocumentation","src":"20046:269:24","text":" @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."},"id":5767,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"20329:3:24","nodeType":"FunctionDefinition","parameters":{"id":5752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5747,"mutability":"mutable","name":"map","nameLocation":"20367:3:24","nodeType":"VariableDeclaration","scope":5767,"src":"20342:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap"},"typeName":{"id":5746,"nodeType":"UserDefinedTypeName","pathNode":{"id":5745,"name":"Bytes32ToUintMap","nameLocations":["20342:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5585,"src":"20342:16:24"},"referencedDeclaration":5585,"src":"20342:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":5749,"mutability":"mutable","name":"key","nameLocation":"20388:3:24","nodeType":"VariableDeclaration","scope":5767,"src":"20380:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5748,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20380:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5751,"mutability":"mutable","name":"errorMessage","nameLocation":"20415:12:24","nodeType":"VariableDeclaration","scope":5767,"src":"20401:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5750,"name":"string","nodeType":"ElementaryTypeName","src":"20401:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20332:101:24"},"returnParameters":{"id":5755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5767,"src":"20457:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5753,"name":"uint256","nodeType":"ElementaryTypeName","src":"20457:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20456:9:24"},"scope":5798,"src":"20320:213:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5796,"nodeType":"Block","src":"21168:216:24","statements":[{"assignments":[5781],"declarations":[{"constant":false,"id":5781,"mutability":"mutable","name":"store","nameLocation":"21195:5:24","nodeType":"VariableDeclaration","scope":5796,"src":"21178:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5779,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21178:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5780,"nodeType":"ArrayTypeName","src":"21178:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5786,"initialValue":{"arguments":[{"expression":{"id":5783,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"21208:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap storage pointer"}},"id":5784,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21212:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":5584,"src":"21208:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$4556_storage","typeString":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage ref"}],"id":5782,"name":"keys","nodeType":"Identifier","overloadedDeclarations":[4798,5035,5302,5581,5797],"referencedDeclaration":4798,"src":"21203:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$4556_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableMapUpgradeable.Bytes32ToBytes32Map storage pointer) view returns (bytes32[] memory)"}},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21203:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"21178:41:24"},{"assignments":[5791],"declarations":[{"constant":false,"id":5791,"mutability":"mutable","name":"result","nameLocation":"21246:6:24","nodeType":"VariableDeclaration","scope":5796,"src":"21229:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5789,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21229:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5790,"nodeType":"ArrayTypeName","src":"21229:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5792,"nodeType":"VariableDeclarationStatement","src":"21229:23:24"},{"AST":{"nodeType":"YulBlock","src":"21315:39:24","statements":[{"nodeType":"YulAssignment","src":"21329:15:24","value":{"name":"store","nodeType":"YulIdentifier","src":"21339:5:24"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"21329:6:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":5791,"isOffset":false,"isSlot":false,"src":"21329:6:24","valueSize":1},{"declaration":5781,"isOffset":false,"isSlot":false,"src":"21339:5:24","valueSize":1}],"id":5793,"nodeType":"InlineAssembly","src":"21306:48:24"},{"expression":{"id":5794,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5791,"src":"21371:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":5776,"id":5795,"nodeType":"Return","src":"21364:13:24"}]},"documentation":{"id":5768,"nodeType":"StructuredDocumentation","src":"20539:539:24","text":" @dev Return the an array containing all the keys\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5797,"implemented":true,"kind":"function","modifiers":[],"name":"keys","nameLocation":"21092:4:24","nodeType":"FunctionDefinition","parameters":{"id":5772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5771,"mutability":"mutable","name":"map","nameLocation":"21122:3:24","nodeType":"VariableDeclaration","scope":5797,"src":"21097:28:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap"},"typeName":{"id":5770,"nodeType":"UserDefinedTypeName","pathNode":{"id":5769,"name":"Bytes32ToUintMap","nameLocations":["21097:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5585,"src":"21097:16:24"},"referencedDeclaration":5585,"src":"21097:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$5585_storage_ptr","typeString":"struct EnumerableMapUpgradeable.Bytes32ToUintMap"}},"visibility":"internal"}],"src":"21096:30:24"},"returnParameters":{"id":5776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5797,"src":"21150:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21150:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5774,"nodeType":"ArrayTypeName","src":"21150:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"21149:18:24"},"scope":5798,"src":"21083:301:24","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":5799,"src":"1640:19746:24","usedErrors":[]}],"src":"205:21182:24"},"id":24},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol","exportedSymbols":{"EnumerableSetUpgradeable":[6411]},"id":6412,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5800,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:25"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSetUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":5801,"nodeType":"StructuredDocumentation","src":"230:1098:25","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":6411,"linearizedBaseContracts":[6411],"name":"EnumerableSetUpgradeable","nameLocation":"1337:24:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSetUpgradeable.Set","id":5809,"members":[{"constant":false,"id":5804,"mutability":"mutable","name":"_values","nameLocation":"1872:7:25","nodeType":"VariableDeclaration","scope":5809,"src":"1862:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5802,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1862:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5803,"nodeType":"ArrayTypeName","src":"1862:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5808,"mutability":"mutable","name":"_indexes","nameLocation":"2040:8:25","nodeType":"VariableDeclaration","scope":5809,"src":"2012:36:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":5807,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2020:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2012:27:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5806,"name":"uint256","nodeType":"ElementaryTypeName","src":"2031:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1815:3:25","nodeType":"StructDefinition","scope":6411,"src":"1808:247:25","visibility":"public"},{"body":{"id":5850,"nodeType":"Block","src":"2294:335:25","statements":[{"condition":{"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2308:22:25","subExpression":{"arguments":[{"id":5821,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"2319:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},{"id":5822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"2324:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5820,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"2309:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5809_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":5823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2309:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5848,"nodeType":"Block","src":"2586:37:25","statements":[{"expression":{"hexValue":"66616c7365","id":5846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2607:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5819,"id":5847,"nodeType":"Return","src":"2600:12:25"}]},"id":5849,"nodeType":"IfStatement","src":"2304:319:25","trueBody":{"id":5845,"nodeType":"Block","src":"2332:248:25","statements":[{"expression":{"arguments":[{"id":5830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"2363:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":5825,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"2346:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2350:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5804,"src":"2346:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:4:25","memberName":"push","nodeType":"MemberAccess","src":"2346:16:25","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2346:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5832,"nodeType":"ExpressionStatement","src":"2346:23:25"},{"expression":{"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":5833,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"2504:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5836,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2508:8:25","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":5808,"src":"2504:12:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5837,"indexExpression":{"id":5835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"2517:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2504:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":5838,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"2526:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5839,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2530:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5804,"src":"2526:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2538:6:25","memberName":"length","nodeType":"MemberAccess","src":"2526:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2504:40:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5842,"nodeType":"ExpressionStatement","src":"2504:40:25"},{"expression":{"hexValue":"74727565","id":5843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2565:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5819,"id":5844,"nodeType":"Return","src":"2558:11:25"}]}}]},"documentation":{"id":5810,"nodeType":"StructuredDocumentation","src":"2061:159:25","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":5851,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2234:4:25","nodeType":"FunctionDefinition","parameters":{"id":5816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5813,"mutability":"mutable","name":"set","nameLocation":"2251:3:25","nodeType":"VariableDeclaration","scope":5851,"src":"2239:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":5812,"nodeType":"UserDefinedTypeName","pathNode":{"id":5811,"name":"Set","nameLocations":["2239:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":5809,"src":"2239:3:25"},"referencedDeclaration":5809,"src":"2239:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":5815,"mutability":"mutable","name":"value","nameLocation":"2264:5:25","nodeType":"VariableDeclaration","scope":5851,"src":"2256:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5814,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2256:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2238:32:25"},"returnParameters":{"id":5819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5851,"src":"2288:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5817,"name":"bool","nodeType":"ElementaryTypeName","src":"2288:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2287:6:25"},"scope":6411,"src":"2225:404:25","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5934,"nodeType":"Block","src":"2869:1316:25","statements":[{"assignments":[5863],"declarations":[{"constant":false,"id":5863,"mutability":"mutable","name":"valueIndex","nameLocation":"2987:10:25","nodeType":"VariableDeclaration","scope":5934,"src":"2979:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5862,"name":"uint256","nodeType":"ElementaryTypeName","src":"2979:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5868,"initialValue":{"baseExpression":{"expression":{"id":5864,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"3000:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3004:8:25","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":5808,"src":"3000:12:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5867,"indexExpression":{"id":5866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"3013:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3000:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2979:40:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5869,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"3034:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3048:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3034:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5932,"nodeType":"Block","src":"4142:37:25","statements":[{"expression":{"hexValue":"66616c7365","id":5930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4163:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5861,"id":5931,"nodeType":"Return","src":"4156:12:25"}]},"id":5933,"nodeType":"IfStatement","src":"3030:1149:25","trueBody":{"id":5929,"nodeType":"Block","src":"3051:1085:25","statements":[{"assignments":[5873],"declarations":[{"constant":false,"id":5873,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3411:13:25","nodeType":"VariableDeclaration","scope":5929,"src":"3403:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5872,"name":"uint256","nodeType":"ElementaryTypeName","src":"3403:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5877,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5874,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"3427:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3440:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3427:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3403:38:25"},{"assignments":[5879],"declarations":[{"constant":false,"id":5879,"mutability":"mutable","name":"lastIndex","nameLocation":"3463:9:25","nodeType":"VariableDeclaration","scope":5929,"src":"3455:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5878,"name":"uint256","nodeType":"ElementaryTypeName","src":"3455:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5885,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":5880,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"3475:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3479:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5804,"src":"3475:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3487:6:25","memberName":"length","nodeType":"MemberAccess","src":"3475:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3496:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3475:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3455:42:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5886,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"3516:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5887,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"3529:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3516:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5913,"nodeType":"IfStatement","src":"3512:398:25","trueBody":{"id":5912,"nodeType":"Block","src":"3544:366:25","statements":[{"assignments":[5890],"declarations":[{"constant":false,"id":5890,"mutability":"mutable","name":"lastValue","nameLocation":"3570:9:25","nodeType":"VariableDeclaration","scope":5912,"src":"3562:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3562:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5895,"initialValue":{"baseExpression":{"expression":{"id":5891,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"3582:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5892,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3586:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5804,"src":"3582:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5894,"indexExpression":{"id":5893,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"3594:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3582:22:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3562:42:25"},{"expression":{"id":5902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":5896,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"3704:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5899,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3708:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5804,"src":"3704:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5900,"indexExpression":{"id":5898,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"3716:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3704:26:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5901,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"3733:9:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3704:38:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5903,"nodeType":"ExpressionStatement","src":"3704:38:25"},{"expression":{"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":5904,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"3816:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5907,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3820:8:25","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":5808,"src":"3816:12:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5908,"indexExpression":{"id":5906,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"3829:9:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3816:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5909,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"3842:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3816:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5911,"nodeType":"ExpressionStatement","src":"3816:36:25"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":5914,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"3988:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5917,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3992:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5804,"src":"3988:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4000:3:25","memberName":"pop","nodeType":"MemberAccess","src":"3988:15:25","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3988:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5920,"nodeType":"ExpressionStatement","src":"3988:17:25"},{"expression":{"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4073:26:25","subExpression":{"baseExpression":{"expression":{"id":5921,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"4080:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4084:8:25","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":5808,"src":"4080:12:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5924,"indexExpression":{"id":5923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"4093:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4080:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5926,"nodeType":"ExpressionStatement","src":"4073:26:25"},{"expression":{"hexValue":"74727565","id":5927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4121:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5861,"id":5928,"nodeType":"Return","src":"4114:11:25"}]}}]},"documentation":{"id":5852,"nodeType":"StructuredDocumentation","src":"2635:157:25","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":5935,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2806:7:25","nodeType":"FunctionDefinition","parameters":{"id":5858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5855,"mutability":"mutable","name":"set","nameLocation":"2826:3:25","nodeType":"VariableDeclaration","scope":5935,"src":"2814:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":5854,"nodeType":"UserDefinedTypeName","pathNode":{"id":5853,"name":"Set","nameLocations":["2814:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":5809,"src":"2814:3:25"},"referencedDeclaration":5809,"src":"2814:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":5857,"mutability":"mutable","name":"value","nameLocation":"2839:5:25","nodeType":"VariableDeclaration","scope":5935,"src":"2831:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2831:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2813:32:25"},"returnParameters":{"id":5861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5935,"src":"2863:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5859,"name":"bool","nodeType":"ElementaryTypeName","src":"2863:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2862:6:25"},"scope":6411,"src":"2797:1388:25","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5953,"nodeType":"Block","src":"4345:48:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":5946,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5939,"src":"4362:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5947,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4366:8:25","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":5808,"src":"4362:12:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":5949,"indexExpression":{"id":5948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"4375:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4362:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4385:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4362:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5945,"id":5952,"nodeType":"Return","src":"4355:31:25"}]},"documentation":{"id":5936,"nodeType":"StructuredDocumentation","src":"4191:70:25","text":" @dev Returns true if the value is in the set. O(1)."},"id":5954,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4275:9:25","nodeType":"FunctionDefinition","parameters":{"id":5942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5939,"mutability":"mutable","name":"set","nameLocation":"4297:3:25","nodeType":"VariableDeclaration","scope":5954,"src":"4285:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":5938,"nodeType":"UserDefinedTypeName","pathNode":{"id":5937,"name":"Set","nameLocations":["4285:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":5809,"src":"4285:3:25"},"referencedDeclaration":5809,"src":"4285:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":5941,"mutability":"mutable","name":"value","nameLocation":"4310:5:25","nodeType":"VariableDeclaration","scope":5954,"src":"4302:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5940,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4302:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4284:32:25"},"returnParameters":{"id":5945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5954,"src":"4339:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5943,"name":"bool","nodeType":"ElementaryTypeName","src":"4339:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4338:6:25"},"scope":6411,"src":"4266:127:25","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5967,"nodeType":"Block","src":"4539:42:25","statements":[{"expression":{"expression":{"expression":{"id":5963,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"4556:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4560:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5804,"src":"4556:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4568:6:25","memberName":"length","nodeType":"MemberAccess","src":"4556:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5962,"id":5966,"nodeType":"Return","src":"4549:25:25"}]},"documentation":{"id":5955,"nodeType":"StructuredDocumentation","src":"4399:70:25","text":" @dev Returns the number of values on the set. O(1)."},"id":5968,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4483:7:25","nodeType":"FunctionDefinition","parameters":{"id":5959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5958,"mutability":"mutable","name":"set","nameLocation":"4503:3:25","nodeType":"VariableDeclaration","scope":5968,"src":"4491:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":5957,"nodeType":"UserDefinedTypeName","pathNode":{"id":5956,"name":"Set","nameLocations":["4491:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":5809,"src":"4491:3:25"},"referencedDeclaration":5809,"src":"4491:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"src":"4490:17:25"},"returnParameters":{"id":5962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5968,"src":"4530:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5960,"name":"uint256","nodeType":"ElementaryTypeName","src":"4530:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4529:9:25"},"scope":6411,"src":"4474:107:25","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5984,"nodeType":"Block","src":"4999:42:25","statements":[{"expression":{"baseExpression":{"expression":{"id":5979,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"5016:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5980,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5804,"src":"5016:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5982,"indexExpression":{"id":5981,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"5028:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5016:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5978,"id":5983,"nodeType":"Return","src":"5009:25:25"}]},"documentation":{"id":5969,"nodeType":"StructuredDocumentation","src":"4587:331:25","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":5985,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4932:3:25","nodeType":"FunctionDefinition","parameters":{"id":5975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5972,"mutability":"mutable","name":"set","nameLocation":"4948:3:25","nodeType":"VariableDeclaration","scope":5985,"src":"4936:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":5971,"nodeType":"UserDefinedTypeName","pathNode":{"id":5970,"name":"Set","nameLocations":["4936:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":5809,"src":"4936:3:25"},"referencedDeclaration":5809,"src":"4936:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":5974,"mutability":"mutable","name":"index","nameLocation":"4961:5:25","nodeType":"VariableDeclaration","scope":5985,"src":"4953:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5973,"name":"uint256","nodeType":"ElementaryTypeName","src":"4953:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4935:32:25"},"returnParameters":{"id":5978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5985,"src":"4990:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5976,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4990:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4989:9:25"},"scope":6411,"src":"4923:118:25","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5998,"nodeType":"Block","src":"5655:35:25","statements":[{"expression":{"expression":{"id":5995,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5989,"src":"5672:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":5996,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5676:7:25","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5804,"src":"5672:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":5994,"id":5997,"nodeType":"Return","src":"5665:18:25"}]},"documentation":{"id":5986,"nodeType":"StructuredDocumentation","src":"5047:529:25","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":5999,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5590:7:25","nodeType":"FunctionDefinition","parameters":{"id":5990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5989,"mutability":"mutable","name":"set","nameLocation":"5610:3:25","nodeType":"VariableDeclaration","scope":5999,"src":"5598:15:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":5988,"nodeType":"UserDefinedTypeName","pathNode":{"id":5987,"name":"Set","nameLocations":["5598:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":5809,"src":"5598:3:25"},"referencedDeclaration":5809,"src":"5598:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"src":"5597:17:25"},"returnParameters":{"id":5994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5999,"src":"5637:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5991,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5637:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5992,"nodeType":"ArrayTypeName","src":"5637:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5636:18:25"},"scope":6411,"src":"5581:109:25","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSetUpgradeable.Bytes32Set","id":6003,"members":[{"constant":false,"id":6002,"mutability":"mutable","name":"_inner","nameLocation":"5747:6:25","nodeType":"VariableDeclaration","scope":6003,"src":"5743:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":6001,"nodeType":"UserDefinedTypeName","pathNode":{"id":6000,"name":"Set","nameLocations":["5743:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":5809,"src":"5743:3:25"},"referencedDeclaration":5809,"src":"5743:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5722:10:25","nodeType":"StructDefinition","scope":6411,"src":"5715:45:25","visibility":"public"},{"body":{"id":6020,"nodeType":"Block","src":"6006:47:25","statements":[{"expression":{"arguments":[{"expression":{"id":6015,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"6028:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":6016,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6032:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6002,"src":"6028:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":6017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6009,"src":"6040:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6014,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"6023:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$5809_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6023:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6013,"id":6019,"nodeType":"Return","src":"6016:30:25"}]},"documentation":{"id":6004,"nodeType":"StructuredDocumentation","src":"5766:159:25","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":6021,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5939:3:25","nodeType":"FunctionDefinition","parameters":{"id":6010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6007,"mutability":"mutable","name":"set","nameLocation":"5962:3:25","nodeType":"VariableDeclaration","scope":6021,"src":"5943:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":6006,"nodeType":"UserDefinedTypeName","pathNode":{"id":6005,"name":"Bytes32Set","nameLocations":["5943:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":6003,"src":"5943:10:25"},"referencedDeclaration":6003,"src":"5943:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":6009,"mutability":"mutable","name":"value","nameLocation":"5975:5:25","nodeType":"VariableDeclaration","scope":6021,"src":"5967:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6008,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5942:39:25"},"returnParameters":{"id":6013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6021,"src":"6000:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6011,"name":"bool","nodeType":"ElementaryTypeName","src":"6000:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5999:6:25"},"scope":6411,"src":"5930:123:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6038,"nodeType":"Block","src":"6300:50:25","statements":[{"expression":{"arguments":[{"expression":{"id":6033,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"6325:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":6034,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6329:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6002,"src":"6325:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":6035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6027,"src":"6337:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6032,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"6317:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$5809_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6031,"id":6037,"nodeType":"Return","src":"6310:33:25"}]},"documentation":{"id":6022,"nodeType":"StructuredDocumentation","src":"6059:157:25","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":6039,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6230:6:25","nodeType":"FunctionDefinition","parameters":{"id":6028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6025,"mutability":"mutable","name":"set","nameLocation":"6256:3:25","nodeType":"VariableDeclaration","scope":6039,"src":"6237:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":6024,"nodeType":"UserDefinedTypeName","pathNode":{"id":6023,"name":"Bytes32Set","nameLocations":["6237:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":6003,"src":"6237:10:25"},"referencedDeclaration":6003,"src":"6237:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":6027,"mutability":"mutable","name":"value","nameLocation":"6269:5:25","nodeType":"VariableDeclaration","scope":6039,"src":"6261:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6261:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6236:39:25"},"returnParameters":{"id":6031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6039,"src":"6294:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6029,"name":"bool","nodeType":"ElementaryTypeName","src":"6294:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6293:6:25"},"scope":6411,"src":"6221:129:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6056,"nodeType":"Block","src":"6517:52:25","statements":[{"expression":{"arguments":[{"expression":{"id":6051,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"6544:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":6052,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6548:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6002,"src":"6544:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":6053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"6556:5:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6050,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"6534:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5809_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6534:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6049,"id":6055,"nodeType":"Return","src":"6527:35:25"}]},"documentation":{"id":6040,"nodeType":"StructuredDocumentation","src":"6356:70:25","text":" @dev Returns true if the value is in the set. O(1)."},"id":6057,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6440:8:25","nodeType":"FunctionDefinition","parameters":{"id":6046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6043,"mutability":"mutable","name":"set","nameLocation":"6468:3:25","nodeType":"VariableDeclaration","scope":6057,"src":"6449:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":6042,"nodeType":"UserDefinedTypeName","pathNode":{"id":6041,"name":"Bytes32Set","nameLocations":["6449:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":6003,"src":"6449:10:25"},"referencedDeclaration":6003,"src":"6449:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":6045,"mutability":"mutable","name":"value","nameLocation":"6481:5:25","nodeType":"VariableDeclaration","scope":6057,"src":"6473:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6044,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6473:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6448:39:25"},"returnParameters":{"id":6049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6057,"src":"6511:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6047,"name":"bool","nodeType":"ElementaryTypeName","src":"6511:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6510:6:25"},"scope":6411,"src":"6431:138:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6071,"nodeType":"Block","src":"6722:43:25","statements":[{"expression":{"arguments":[{"expression":{"id":6067,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6061,"src":"6747:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":6068,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6751:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6002,"src":"6747:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":6066,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"6739:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5809_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":6069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6739:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6065,"id":6070,"nodeType":"Return","src":"6732:26:25"}]},"documentation":{"id":6058,"nodeType":"StructuredDocumentation","src":"6575:70:25","text":" @dev Returns the number of values in the set. O(1)."},"id":6072,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6659:6:25","nodeType":"FunctionDefinition","parameters":{"id":6062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6061,"mutability":"mutable","name":"set","nameLocation":"6685:3:25","nodeType":"VariableDeclaration","scope":6072,"src":"6666:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":6060,"nodeType":"UserDefinedTypeName","pathNode":{"id":6059,"name":"Bytes32Set","nameLocations":["6666:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":6003,"src":"6666:10:25"},"referencedDeclaration":6003,"src":"6666:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"}],"src":"6665:24:25"},"returnParameters":{"id":6065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6072,"src":"6713:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6063,"name":"uint256","nodeType":"ElementaryTypeName","src":"6713:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6712:9:25"},"scope":6411,"src":"6650:115:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6089,"nodeType":"Block","src":"7190:46:25","statements":[{"expression":{"arguments":[{"expression":{"id":6084,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"7211:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":6085,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7215:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6002,"src":"7211:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":6086,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6078,"src":"7223:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6083,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"7207:3:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5809_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":6087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7207:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6082,"id":6088,"nodeType":"Return","src":"7200:29:25"}]},"documentation":{"id":6073,"nodeType":"StructuredDocumentation","src":"6771:331:25","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":6090,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7116:2:25","nodeType":"FunctionDefinition","parameters":{"id":6079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6076,"mutability":"mutable","name":"set","nameLocation":"7138:3:25","nodeType":"VariableDeclaration","scope":6090,"src":"7119:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":6075,"nodeType":"UserDefinedTypeName","pathNode":{"id":6074,"name":"Bytes32Set","nameLocations":["7119:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":6003,"src":"7119:10:25"},"referencedDeclaration":6003,"src":"7119:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":6078,"mutability":"mutable","name":"index","nameLocation":"7151:5:25","nodeType":"VariableDeclaration","scope":6090,"src":"7143:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6077,"name":"uint256","nodeType":"ElementaryTypeName","src":"7143:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7118:39:25"},"returnParameters":{"id":6082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6090,"src":"7181:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6080,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7181:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7180:9:25"},"scope":6411,"src":"7107:129:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6119,"nodeType":"Block","src":"7857:219:25","statements":[{"assignments":[6104],"declarations":[{"constant":false,"id":6104,"mutability":"mutable","name":"store","nameLocation":"7884:5:25","nodeType":"VariableDeclaration","scope":6119,"src":"7867:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6102,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7867:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6103,"nodeType":"ArrayTypeName","src":"7867:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":6109,"initialValue":{"arguments":[{"expression":{"id":6106,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6094,"src":"7900:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":6107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7904:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6002,"src":"7900:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":6105,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"7892:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5809_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7892:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7867:44:25"},{"assignments":[6114],"declarations":[{"constant":false,"id":6114,"mutability":"mutable","name":"result","nameLocation":"7938:6:25","nodeType":"VariableDeclaration","scope":6119,"src":"7921:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6112,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7921:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6113,"nodeType":"ArrayTypeName","src":"7921:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":6115,"nodeType":"VariableDeclarationStatement","src":"7921:23:25"},{"AST":{"nodeType":"YulBlock","src":"8007:39:25","statements":[{"nodeType":"YulAssignment","src":"8021:15:25","value":{"name":"store","nodeType":"YulIdentifier","src":"8031:5:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8021:6:25"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":6114,"isOffset":false,"isSlot":false,"src":"8021:6:25","valueSize":1},{"declaration":6104,"isOffset":false,"isSlot":false,"src":"8031:5:25","valueSize":1}],"id":6116,"nodeType":"InlineAssembly","src":"7998:48:25"},{"expression":{"id":6117,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"8063:6:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":6099,"id":6118,"nodeType":"Return","src":"8056:13:25"}]},"documentation":{"id":6091,"nodeType":"StructuredDocumentation","src":"7242:529:25","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":6120,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7785:6:25","nodeType":"FunctionDefinition","parameters":{"id":6095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6094,"mutability":"mutable","name":"set","nameLocation":"7811:3:25","nodeType":"VariableDeclaration","scope":6120,"src":"7792:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":6093,"nodeType":"UserDefinedTypeName","pathNode":{"id":6092,"name":"Bytes32Set","nameLocations":["7792:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":6003,"src":"7792:10:25"},"referencedDeclaration":6003,"src":"7792:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$6003_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"}],"src":"7791:24:25"},"returnParameters":{"id":6099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6120,"src":"7839:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6096,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7839:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6097,"nodeType":"ArrayTypeName","src":"7839:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7838:18:25"},"scope":6411,"src":"7776:300:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSetUpgradeable.AddressSet","id":6124,"members":[{"constant":false,"id":6123,"mutability":"mutable","name":"_inner","nameLocation":"8133:6:25","nodeType":"VariableDeclaration","scope":6124,"src":"8129:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":6122,"nodeType":"UserDefinedTypeName","pathNode":{"id":6121,"name":"Set","nameLocations":["8129:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":5809,"src":"8129:3:25"},"referencedDeclaration":5809,"src":"8129:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8108:10:25","nodeType":"StructDefinition","scope":6411,"src":"8101:45:25","visibility":"public"},{"body":{"id":6150,"nodeType":"Block","src":"8392:74:25","statements":[{"expression":{"arguments":[{"expression":{"id":6136,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6128,"src":"8414:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6124_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":6137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8418:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6123,"src":"8414:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":6144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"8450:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8442:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6142,"name":"uint160","nodeType":"ElementaryTypeName","src":"8442:7:25","typeDescriptions":{}}},"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8442:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":6141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8434:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6140,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:25","typeDescriptions":{}}},"id":6146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8434:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6138,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8426:7:25","typeDescriptions":{}}},"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6135,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"8409:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$5809_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":6148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8409:50:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6134,"id":6149,"nodeType":"Return","src":"8402:57:25"}]},"documentation":{"id":6125,"nodeType":"StructuredDocumentation","src":"8152:159:25","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":6151,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8325:3:25","nodeType":"FunctionDefinition","parameters":{"id":6131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6128,"mutability":"mutable","name":"set","nameLocation":"8348:3:25","nodeType":"VariableDeclaration","scope":6151,"src":"8329:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6124_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":6127,"nodeType":"UserDefinedTypeName","pathNode":{"id":6126,"name":"AddressSet","nameLocations":["8329:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":6124,"src":"8329:10:25"},"referencedDeclaration":6124,"src":"8329:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6124_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":6130,"mutability":"mutable","name":"value","nameLocation":"8361:5:25","nodeType":"VariableDeclaration","scope":6151,"src":"8353:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6129,"name":"address","nodeType":"ElementaryTypeName","src":"8353:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8328:39:25"},"returnParameters":{"id":6134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6151,"src":"8386:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6132,"name":"bool","nodeType":"ElementaryTypeName","src":"8386:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8385:6:25"},"scope":6411,"src":"8316:150:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6177,"nodeType":"Block","src":"8713:77:25","statements":[{"expression":{"arguments":[{"expression":{"id":6163,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"8738:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6124_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":6164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8742:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6123,"src":"8738:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":6171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6157,"src":"8774:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8766:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6169,"name":"uint160","nodeType":"ElementaryTypeName","src":"8766:7:25","typeDescriptions":{}}},"id":6172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8766:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":6168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8758:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6167,"name":"uint256","nodeType":"ElementaryTypeName","src":"8758:7:25","typeDescriptions":{}}},"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8758:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8750:7:25","typeDescriptions":{}}},"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8750:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6162,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"8730:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$5809_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":6175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8730:53:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6161,"id":6176,"nodeType":"Return","src":"8723:60:25"}]},"documentation":{"id":6152,"nodeType":"StructuredDocumentation","src":"8472:157:25","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":6178,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8643:6:25","nodeType":"FunctionDefinition","parameters":{"id":6158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6155,"mutability":"mutable","name":"set","nameLocation":"8669:3:25","nodeType":"VariableDeclaration","scope":6178,"src":"8650:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6124_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":6154,"nodeType":"UserDefinedTypeName","pathNode":{"id":6153,"name":"AddressSet","nameLocations":["8650:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":6124,"src":"8650:10:25"},"referencedDeclaration":6124,"src":"8650:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6124_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":6157,"mutability":"mutable","name":"value","nameLocation":"8682:5:25","nodeType":"VariableDeclaration","scope":6178,"src":"8674:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6156,"name":"address","nodeType":"ElementaryTypeName","src":"8674:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8649:39:25"},"returnParameters":{"id":6161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6178,"src":"8707:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6159,"name":"bool","nodeType":"ElementaryTypeName","src":"8707:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8706:6:25"},"scope":6411,"src":"8634:156:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6204,"nodeType":"Block","src":"8957:79:25","statements":[{"expression":{"arguments":[{"expression":{"id":6190,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"8984:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6124_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":6191,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8988:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6123,"src":"8984:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":6198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"9020:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9012:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6196,"name":"uint160","nodeType":"ElementaryTypeName","src":"9012:7:25","typeDescriptions":{}}},"id":6199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9012:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":6195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9004:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6194,"name":"uint256","nodeType":"ElementaryTypeName","src":"9004:7:25","typeDescriptions":{}}},"id":6200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9004:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8996:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8996:7:25","typeDescriptions":{}}},"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6189,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"8974:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5809_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8974:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6188,"id":6203,"nodeType":"Return","src":"8967:62:25"}]},"documentation":{"id":6179,"nodeType":"StructuredDocumentation","src":"8796:70:25","text":" @dev Returns true if the value is in the set. O(1)."},"id":6205,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8880:8:25","nodeType":"FunctionDefinition","parameters":{"id":6185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6182,"mutability":"mutable","name":"set","nameLocation":"8908:3:25","nodeType":"VariableDeclaration","scope":6205,"src":"8889:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6124_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":6181,"nodeType":"UserDefinedTypeName","pathNode":{"id":6180,"name":"AddressSet","nameLocations":["8889:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":6124,"src":"8889:10:25"},"referencedDeclaration":6124,"src":"8889:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6124_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":6184,"mutability":"mutable","name":"value","nameLocation":"8921:5:25","nodeType":"VariableDeclaration","scope":6205,"src":"8913:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6183,"name":"address","nodeType":"ElementaryTypeName","src":"8913:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8888:39:25"},"returnParameters":{"id":6188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6205,"src":"8951:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6186,"name":"bool","nodeType":"ElementaryTypeName","src":"8951:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8950:6:25"},"scope":6411,"src":"8871:165:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6219,"nodeType":"Block","src":"9189:43:25","statements":[{"expression":{"arguments":[{"expression":{"id":6215,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"9214:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6124_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":6216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9218:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6123,"src":"9214:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":6214,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"9206:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5809_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9206:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6213,"id":6218,"nodeType":"Return","src":"9199:26:25"}]},"documentation":{"id":6206,"nodeType":"StructuredDocumentation","src":"9042:70:25","text":" @dev Returns the number of values in the set. O(1)."},"id":6220,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9126:6:25","nodeType":"FunctionDefinition","parameters":{"id":6210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6209,"mutability":"mutable","name":"set","nameLocation":"9152:3:25","nodeType":"VariableDeclaration","scope":6220,"src":"9133:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6124_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":6208,"nodeType":"UserDefinedTypeName","pathNode":{"id":6207,"name":"AddressSet","nameLocations":["9133:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":6124,"src":"9133:10:25"},"referencedDeclaration":6124,"src":"9133:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6124_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"}],"src":"9132:24:25"},"returnParameters":{"id":6213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6220,"src":"9180:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6211,"name":"uint256","nodeType":"ElementaryTypeName","src":"9180:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9179:9:25"},"scope":6411,"src":"9117:115:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6246,"nodeType":"Block","src":"9657:73:25","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":6238,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"9702:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6124_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":6239,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9706:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6123,"src":"9702:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":6240,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6226,"src":"9714:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6237,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"9698:3:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5809_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9698:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9690:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6235,"name":"uint256","nodeType":"ElementaryTypeName","src":"9690:7:25","typeDescriptions":{}}},"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9690:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9682:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6233,"name":"uint160","nodeType":"ElementaryTypeName","src":"9682:7:25","typeDescriptions":{}}},"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":6232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9674:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6231,"name":"address","nodeType":"ElementaryTypeName","src":"9674:7:25","typeDescriptions":{}}},"id":6244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9674:49:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6230,"id":6245,"nodeType":"Return","src":"9667:56:25"}]},"documentation":{"id":6221,"nodeType":"StructuredDocumentation","src":"9238:331:25","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":6247,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9583:2:25","nodeType":"FunctionDefinition","parameters":{"id":6227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6224,"mutability":"mutable","name":"set","nameLocation":"9605:3:25","nodeType":"VariableDeclaration","scope":6247,"src":"9586:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6124_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":6223,"nodeType":"UserDefinedTypeName","pathNode":{"id":6222,"name":"AddressSet","nameLocations":["9586:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":6124,"src":"9586:10:25"},"referencedDeclaration":6124,"src":"9586:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6124_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":6226,"mutability":"mutable","name":"index","nameLocation":"9618:5:25","nodeType":"VariableDeclaration","scope":6247,"src":"9610:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6225,"name":"uint256","nodeType":"ElementaryTypeName","src":"9610:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9585:39:25"},"returnParameters":{"id":6230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6247,"src":"9648:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6228,"name":"address","nodeType":"ElementaryTypeName","src":"9648:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9647:9:25"},"scope":6411,"src":"9574:156:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6276,"nodeType":"Block","src":"10351:219:25","statements":[{"assignments":[6261],"declarations":[{"constant":false,"id":6261,"mutability":"mutable","name":"store","nameLocation":"10378:5:25","nodeType":"VariableDeclaration","scope":6276,"src":"10361:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10361:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6260,"nodeType":"ArrayTypeName","src":"10361:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":6266,"initialValue":{"arguments":[{"expression":{"id":6263,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6251,"src":"10394:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6124_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":6264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10398:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6123,"src":"10394:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":6262,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"10386:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5809_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10386:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10361:44:25"},{"assignments":[6271],"declarations":[{"constant":false,"id":6271,"mutability":"mutable","name":"result","nameLocation":"10432:6:25","nodeType":"VariableDeclaration","scope":6276,"src":"10415:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6269,"name":"address","nodeType":"ElementaryTypeName","src":"10415:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6270,"nodeType":"ArrayTypeName","src":"10415:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":6272,"nodeType":"VariableDeclarationStatement","src":"10415:23:25"},{"AST":{"nodeType":"YulBlock","src":"10501:39:25","statements":[{"nodeType":"YulAssignment","src":"10515:15:25","value":{"name":"store","nodeType":"YulIdentifier","src":"10525:5:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10515:6:25"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":6271,"isOffset":false,"isSlot":false,"src":"10515:6:25","valueSize":1},{"declaration":6261,"isOffset":false,"isSlot":false,"src":"10525:5:25","valueSize":1}],"id":6273,"nodeType":"InlineAssembly","src":"10492:48:25"},{"expression":{"id":6274,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"10557:6:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":6256,"id":6275,"nodeType":"Return","src":"10550:13:25"}]},"documentation":{"id":6248,"nodeType":"StructuredDocumentation","src":"9736:529:25","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":6277,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10279:6:25","nodeType":"FunctionDefinition","parameters":{"id":6252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6251,"mutability":"mutable","name":"set","nameLocation":"10305:3:25","nodeType":"VariableDeclaration","scope":6277,"src":"10286:22:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6124_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":6250,"nodeType":"UserDefinedTypeName","pathNode":{"id":6249,"name":"AddressSet","nameLocations":["10286:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":6124,"src":"10286:10:25"},"referencedDeclaration":6124,"src":"10286:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$6124_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"}],"src":"10285:24:25"},"returnParameters":{"id":6256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6277,"src":"10333:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6253,"name":"address","nodeType":"ElementaryTypeName","src":"10333:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6254,"nodeType":"ArrayTypeName","src":"10333:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10332:18:25"},"scope":6411,"src":"10270:300:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSetUpgradeable.UintSet","id":6281,"members":[{"constant":false,"id":6280,"mutability":"mutable","name":"_inner","nameLocation":"10621:6:25","nodeType":"VariableDeclaration","scope":6281,"src":"10617:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":6279,"nodeType":"UserDefinedTypeName","pathNode":{"id":6278,"name":"Set","nameLocations":["10617:3:25"],"nodeType":"IdentifierPath","referencedDeclaration":5809,"src":"10617:3:25"},"referencedDeclaration":5809,"src":"10617:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10599:7:25","nodeType":"StructDefinition","scope":6411,"src":"10592:42:25","visibility":"public"},{"body":{"id":6301,"nodeType":"Block","src":"10877:56:25","statements":[{"expression":{"arguments":[{"expression":{"id":6293,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"10899:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6281_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":6294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10903:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6280,"src":"10899:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":6297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6287,"src":"10919:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10911:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10911:7:25","typeDescriptions":{}}},"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10911:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6292,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"10894:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$5809_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10894:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6291,"id":6300,"nodeType":"Return","src":"10887:39:25"}]},"documentation":{"id":6282,"nodeType":"StructuredDocumentation","src":"10640:159:25","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":6302,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10813:3:25","nodeType":"FunctionDefinition","parameters":{"id":6288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6285,"mutability":"mutable","name":"set","nameLocation":"10833:3:25","nodeType":"VariableDeclaration","scope":6302,"src":"10817:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6281_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":6284,"nodeType":"UserDefinedTypeName","pathNode":{"id":6283,"name":"UintSet","nameLocations":["10817:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":6281,"src":"10817:7:25"},"referencedDeclaration":6281,"src":"10817:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6281_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":6287,"mutability":"mutable","name":"value","nameLocation":"10846:5:25","nodeType":"VariableDeclaration","scope":6302,"src":"10838:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6286,"name":"uint256","nodeType":"ElementaryTypeName","src":"10838:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10816:36:25"},"returnParameters":{"id":6291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6302,"src":"10871:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6289,"name":"bool","nodeType":"ElementaryTypeName","src":"10871:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10870:6:25"},"scope":6411,"src":"10804:129:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6322,"nodeType":"Block","src":"11177:59:25","statements":[{"expression":{"arguments":[{"expression":{"id":6314,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"11202:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6281_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":6315,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11206:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6280,"src":"11202:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":6318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"11222:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11214:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11214:7:25","typeDescriptions":{}}},"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11214:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6313,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"11194:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$5809_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11194:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6312,"id":6321,"nodeType":"Return","src":"11187:42:25"}]},"documentation":{"id":6303,"nodeType":"StructuredDocumentation","src":"10939:157:25","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":6323,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11110:6:25","nodeType":"FunctionDefinition","parameters":{"id":6309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6306,"mutability":"mutable","name":"set","nameLocation":"11133:3:25","nodeType":"VariableDeclaration","scope":6323,"src":"11117:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6281_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":6305,"nodeType":"UserDefinedTypeName","pathNode":{"id":6304,"name":"UintSet","nameLocations":["11117:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":6281,"src":"11117:7:25"},"referencedDeclaration":6281,"src":"11117:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6281_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":6308,"mutability":"mutable","name":"value","nameLocation":"11146:5:25","nodeType":"VariableDeclaration","scope":6323,"src":"11138:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6307,"name":"uint256","nodeType":"ElementaryTypeName","src":"11138:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11116:36:25"},"returnParameters":{"id":6312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6323,"src":"11171:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6310,"name":"bool","nodeType":"ElementaryTypeName","src":"11171:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11170:6:25"},"scope":6411,"src":"11101:135:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6343,"nodeType":"Block","src":"11400:61:25","statements":[{"expression":{"arguments":[{"expression":{"id":6335,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"11427:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6281_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":6336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11431:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6280,"src":"11427:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":6339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6329,"src":"11447:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11439:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11439:7:25","typeDescriptions":{}}},"id":6340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11439:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6334,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"11417:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5809_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11417:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6333,"id":6342,"nodeType":"Return","src":"11410:44:25"}]},"documentation":{"id":6324,"nodeType":"StructuredDocumentation","src":"11242:70:25","text":" @dev Returns true if the value is in the set. O(1)."},"id":6344,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11326:8:25","nodeType":"FunctionDefinition","parameters":{"id":6330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6327,"mutability":"mutable","name":"set","nameLocation":"11351:3:25","nodeType":"VariableDeclaration","scope":6344,"src":"11335:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6281_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":6326,"nodeType":"UserDefinedTypeName","pathNode":{"id":6325,"name":"UintSet","nameLocations":["11335:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":6281,"src":"11335:7:25"},"referencedDeclaration":6281,"src":"11335:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6281_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":6329,"mutability":"mutable","name":"value","nameLocation":"11364:5:25","nodeType":"VariableDeclaration","scope":6344,"src":"11356:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6328,"name":"uint256","nodeType":"ElementaryTypeName","src":"11356:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11334:36:25"},"returnParameters":{"id":6333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6344,"src":"11394:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6331,"name":"bool","nodeType":"ElementaryTypeName","src":"11394:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11393:6:25"},"scope":6411,"src":"11317:144:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6358,"nodeType":"Block","src":"11611:43:25","statements":[{"expression":{"arguments":[{"expression":{"id":6354,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6348,"src":"11636:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6281_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":6355,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11640:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6280,"src":"11636:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":6353,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"11628:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5809_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6352,"id":6357,"nodeType":"Return","src":"11621:26:25"}]},"documentation":{"id":6345,"nodeType":"StructuredDocumentation","src":"11467:70:25","text":" @dev Returns the number of values in the set. O(1)."},"id":6359,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11551:6:25","nodeType":"FunctionDefinition","parameters":{"id":6349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6348,"mutability":"mutable","name":"set","nameLocation":"11574:3:25","nodeType":"VariableDeclaration","scope":6359,"src":"11558:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6281_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":6347,"nodeType":"UserDefinedTypeName","pathNode":{"id":6346,"name":"UintSet","nameLocations":["11558:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":6281,"src":"11558:7:25"},"referencedDeclaration":6281,"src":"11558:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6281_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"src":"11557:21:25"},"returnParameters":{"id":6352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6359,"src":"11602:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6350,"name":"uint256","nodeType":"ElementaryTypeName","src":"11602:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11601:9:25"},"scope":6411,"src":"11542:112:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6379,"nodeType":"Block","src":"12076:55:25","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":6373,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6363,"src":"12105:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6281_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":6374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12109:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6280,"src":"12105:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":6375,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6365,"src":"12117:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6372,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"12101:3:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5809_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":6376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12101:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12093:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6370,"name":"uint256","nodeType":"ElementaryTypeName","src":"12093:7:25","typeDescriptions":{}}},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12093:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6369,"id":6378,"nodeType":"Return","src":"12086:38:25"}]},"documentation":{"id":6360,"nodeType":"StructuredDocumentation","src":"11660:331:25","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":6380,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"12005:2:25","nodeType":"FunctionDefinition","parameters":{"id":6366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6363,"mutability":"mutable","name":"set","nameLocation":"12024:3:25","nodeType":"VariableDeclaration","scope":6380,"src":"12008:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6281_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":6362,"nodeType":"UserDefinedTypeName","pathNode":{"id":6361,"name":"UintSet","nameLocations":["12008:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":6281,"src":"12008:7:25"},"referencedDeclaration":6281,"src":"12008:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6281_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":6365,"mutability":"mutable","name":"index","nameLocation":"12037:5:25","nodeType":"VariableDeclaration","scope":6380,"src":"12029:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6364,"name":"uint256","nodeType":"ElementaryTypeName","src":"12029:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12007:36:25"},"returnParameters":{"id":6369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6380,"src":"12067:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6367,"name":"uint256","nodeType":"ElementaryTypeName","src":"12067:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12066:9:25"},"scope":6411,"src":"11996:135:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6409,"nodeType":"Block","src":"12749:219:25","statements":[{"assignments":[6394],"declarations":[{"constant":false,"id":6394,"mutability":"mutable","name":"store","nameLocation":"12776:5:25","nodeType":"VariableDeclaration","scope":6409,"src":"12759:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6392,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12759:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6393,"nodeType":"ArrayTypeName","src":"12759:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":6399,"initialValue":{"arguments":[{"expression":{"id":6396,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6384,"src":"12792:3:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6281_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":6397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12796:6:25","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":6280,"src":"12792:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$5809_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":6395,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"12784:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$5809_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":6398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12784:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12759:44:25"},{"assignments":[6404],"declarations":[{"constant":false,"id":6404,"mutability":"mutable","name":"result","nameLocation":"12830:6:25","nodeType":"VariableDeclaration","scope":6409,"src":"12813:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6402,"name":"uint256","nodeType":"ElementaryTypeName","src":"12813:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6403,"nodeType":"ArrayTypeName","src":"12813:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6405,"nodeType":"VariableDeclarationStatement","src":"12813:23:25"},{"AST":{"nodeType":"YulBlock","src":"12899:39:25","statements":[{"nodeType":"YulAssignment","src":"12913:15:25","value":{"name":"store","nodeType":"YulIdentifier","src":"12923:5:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12913:6:25"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":6404,"isOffset":false,"isSlot":false,"src":"12913:6:25","valueSize":1},{"declaration":6394,"isOffset":false,"isSlot":false,"src":"12923:5:25","valueSize":1}],"id":6406,"nodeType":"InlineAssembly","src":"12890:48:25"},{"expression":{"id":6407,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6404,"src":"12955:6:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":6389,"id":6408,"nodeType":"Return","src":"12948:13:25"}]},"documentation":{"id":6381,"nodeType":"StructuredDocumentation","src":"12137:529:25","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":6410,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12680:6:25","nodeType":"FunctionDefinition","parameters":{"id":6385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6384,"mutability":"mutable","name":"set","nameLocation":"12703:3:25","nodeType":"VariableDeclaration","scope":6410,"src":"12687:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6281_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":6383,"nodeType":"UserDefinedTypeName","pathNode":{"id":6382,"name":"UintSet","nameLocations":["12687:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":6281,"src":"12687:7:25"},"referencedDeclaration":6281,"src":"12687:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$6281_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"src":"12686:21:25"},"returnParameters":{"id":6389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6410,"src":"12731:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6386,"name":"uint256","nodeType":"ElementaryTypeName","src":"12731:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6387,"nodeType":"ArrayTypeName","src":"12731:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12730:18:25"},"scope":6411,"src":"12671:297:25","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":6412,"src":"1329:11641:25","usedErrors":[]}],"src":"205:12766:25"},"id":25},"contracts/Profile.sol":{"ast":{"absolutePath":"contracts/Profile.sol","exportedSymbols":{"AccessControlUpgradeable":[335],"AddressUpgradeable":[3058],"ContextUpgradeable":[3100],"CountersUpgradeable":[3174],"ERC165Upgradeable":[3557],"ERC1967UpgradeUpgradeable":[895],"ERC721EnumerableUpgradeable":[2670],"ERC721Upgradeable":[2162],"EnumerableMapUpgradeable":[5798],"EnumerableSetUpgradeable":[6411],"IAccessControlUpgradeable":[408],"IBeaconUpgradeable":[905],"IDataStorageCartridge":[7065],"IERC165Upgradeable":[3569],"IERC1822ProxiableUpgradeable":[571],"IERC1967Upgradeable":[561],"IERC721EnumerableUpgradeable":[2701],"IERC721MetadataUpgradeable":[2728],"IERC721ReceiverUpgradeable":[2180],"IERC721Upgradeable":[2296],"Initializable":[1074],"MathUpgradeable":[4435],"OwnableUpgradeable":[540],"Profile":[7038],"SignedMathUpgradeable":[4540],"StorageSlotUpgradeable":[3284],"StorageZeroAddress":[6425],"StringsUpgradeable":[3513],"TokenTransferProhibited":[6423],"UUPSUpgradeable":[1210]},"id":7039,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6413,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:26"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableMapUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableMapUpgradeable.sol","id":6414,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7039,"sourceUnit":5799,"src":"58:88:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","id":6415,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7039,"sourceUnit":3175,"src":"147:75:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":6416,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7039,"sourceUnit":541,"src":"223:75:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","id":6417,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7039,"sourceUnit":336,"src":"299:81:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":6418,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7039,"sourceUnit":1211,"src":"381:77:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","id":6419,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7039,"sourceUnit":2163,"src":"459:80:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol","id":6420,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7039,"sourceUnit":2671,"src":"540:101:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDataStorageCartridge.sol","file":"./interfaces/IDataStorageCartridge.sol","id":6421,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7039,"sourceUnit":7066,"src":"643:48:26","symbolAliases":[],"unitAlias":""},{"errorSelector":"3859b9e9","id":6423,"name":"TokenTransferProhibited","nameLocation":"703:23:26","nodeType":"ErrorDefinition","parameters":{"id":6422,"nodeType":"ParameterList","parameters":[],"src":"726:2:26"},"src":"697:32:26"},{"errorSelector":"e57ffd07","id":6425,"name":"StorageZeroAddress","nameLocation":"740:18:26","nodeType":"ErrorDefinition","parameters":{"id":6424,"nodeType":"ParameterList","parameters":[],"src":"758:2:26"},"src":"734:27:26"},{"abstract":false,"baseContracts":[{"baseName":{"id":6426,"name":"Initializable","nameLocations":["783:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"783:13:26"},"id":6427,"nodeType":"InheritanceSpecifier","src":"783:13:26"},{"baseName":{"id":6428,"name":"ERC721Upgradeable","nameLocations":["798:17:26"],"nodeType":"IdentifierPath","referencedDeclaration":2162,"src":"798:17:26"},"id":6429,"nodeType":"InheritanceSpecifier","src":"798:17:26"},{"baseName":{"id":6430,"name":"OwnableUpgradeable","nameLocations":["817:18:26"],"nodeType":"IdentifierPath","referencedDeclaration":540,"src":"817:18:26"},"id":6431,"nodeType":"InheritanceSpecifier","src":"817:18:26"},{"baseName":{"id":6432,"name":"AccessControlUpgradeable","nameLocations":["837:24:26"],"nodeType":"IdentifierPath","referencedDeclaration":335,"src":"837:24:26"},"id":6433,"nodeType":"InheritanceSpecifier","src":"837:24:26"},{"baseName":{"id":6434,"name":"UUPSUpgradeable","nameLocations":["863:15:26"],"nodeType":"IdentifierPath","referencedDeclaration":1210,"src":"863:15:26"},"id":6435,"nodeType":"InheritanceSpecifier","src":"863:15:26"}],"canonicalName":"Profile","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7038,"linearizedBaseContracts":[7038,1210,895,561,571,335,540,2162,2728,2296,3557,3569,408,3100,1074],"name":"Profile","nameLocation":"772:7:26","nodeType":"ContractDefinition","nodes":[{"global":false,"id":6438,"libraryName":{"id":6436,"name":"StringsUpgradeable","nameLocations":["891:18:26"],"nodeType":"IdentifierPath","referencedDeclaration":3513,"src":"891:18:26"},"nodeType":"UsingForDirective","src":"885:37:26","typeName":{"id":6437,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"global":false,"id":6442,"libraryName":{"id":6439,"name":"CountersUpgradeable","nameLocations":["933:19:26"],"nodeType":"IdentifierPath","referencedDeclaration":3174,"src":"933:19:26"},"nodeType":"UsingForDirective","src":"927:58:26","typeName":{"id":6441,"nodeType":"UserDefinedTypeName","pathNode":{"id":6440,"name":"CountersUpgradeable.Counter","nameLocations":["957:19:26","977:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":3106,"src":"957:27:26"},"referencedDeclaration":3106,"src":"957:27:26","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3106_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}}},{"global":false,"id":6446,"libraryName":{"id":6443,"name":"EnumerableMapUpgradeable","nameLocations":["996:24:26"],"nodeType":"IdentifierPath","referencedDeclaration":5798,"src":"996:24:26"},"nodeType":"UsingForDirective","src":"990:77:26","typeName":{"id":6445,"nodeType":"UserDefinedTypeName","pathNode":{"id":6444,"name":"EnumerableMapUpgradeable.AddressToUintMap","nameLocations":["1025:24:26","1050:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":5306,"src":"1025:41:26"},"referencedDeclaration":5306,"src":"1025:41:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap"}}},{"global":false,"id":6450,"libraryName":{"id":6447,"name":"EnumerableMapUpgradeable","nameLocations":["1078:24:26"],"nodeType":"IdentifierPath","referencedDeclaration":5798,"src":"1078:24:26"},"nodeType":"UsingForDirective","src":"1072:77:26","typeName":{"id":6449,"nodeType":"UserDefinedTypeName","pathNode":{"id":6448,"name":"EnumerableMapUpgradeable.UintToAddressMap","nameLocations":["1107:24:26","1132:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":5039,"src":"1107:41:26"},"referencedDeclaration":5039,"src":"1107:41:26","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap"}}},{"constant":false,"id":6453,"mutability":"mutable","name":"_ownerMap","nameLocation":"1251:9:26","nodeType":"VariableDeclaration","scope":7038,"src":"1201:59:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap"},"typeName":{"id":6452,"nodeType":"UserDefinedTypeName","pathNode":{"id":6451,"name":"EnumerableMapUpgradeable.UintToAddressMap","nameLocations":["1201:24:26","1226:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":5039,"src":"1201:41:26"},"referencedDeclaration":5039,"src":"1201:41:26","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage_ptr","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap"}},"visibility":"private"},{"constant":false,"id":6456,"mutability":"mutable","name":"_tokenMap","nameLocation":"1316:9:26","nodeType":"VariableDeclaration","scope":7038,"src":"1266:59:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap"},"typeName":{"id":6455,"nodeType":"UserDefinedTypeName","pathNode":{"id":6454,"name":"EnumerableMapUpgradeable.AddressToUintMap","nameLocations":["1266:24:26","1291:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":5306,"src":"1266:41:26"},"referencedDeclaration":5306,"src":"1266:41:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage_ptr","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap"}},"visibility":"private"},{"constant":false,"id":6459,"mutability":"mutable","name":"_tokenId","nameLocation":"1384:8:26","nodeType":"VariableDeclaration","scope":7038,"src":"1348:44:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3106_storage","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":6458,"nodeType":"UserDefinedTypeName","pathNode":{"id":6457,"name":"CountersUpgradeable.Counter","nameLocations":["1348:19:26","1368:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":3106,"src":"1348:27:26"},"referencedDeclaration":3106,"src":"1348:27:26","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3106_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"private"},{"constant":false,"id":6464,"mutability":"mutable","name":"_dataStorageProviders","nameLocation":"1449:21:26","nodeType":"VariableDeclaration","scope":7038,"src":"1399:71:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_IDataStorageCartridge_$7065_$","typeString":"mapping(address => contract IDataStorageCartridge)"},"typeName":{"id":6463,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6460,"name":"address","nodeType":"ElementaryTypeName","src":"1407:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1399:41:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_IDataStorageCartridge_$7065_$","typeString":"mapping(address => contract IDataStorageCartridge)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6462,"nodeType":"UserDefinedTypeName","pathNode":{"id":6461,"name":"IDataStorageCartridge","nameLocations":["1418:21:26"],"nodeType":"IdentifierPath","referencedDeclaration":7065,"src":"1418:21:26"},"referencedDeclaration":7065,"src":"1418:21:26","typeDescriptions":{"typeIdentifier":"t_contract$_IDataStorageCartridge_$7065","typeString":"contract IDataStorageCartridge"}}},"visibility":"private"},{"canonicalName":"Profile.UserProfile","id":6477,"members":[{"constant":false,"id":6466,"mutability":"mutable","name":"checksum","nameLocation":"1514:8:26","nodeType":"VariableDeclaration","scope":6477,"src":"1506:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6465,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1506:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6468,"mutability":"mutable","name":"issuedBy","nameLocation":"1540:8:26","nodeType":"VariableDeclaration","scope":6477,"src":"1532:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6467,"name":"address","nodeType":"ElementaryTypeName","src":"1532:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6470,"mutability":"mutable","name":"issuedAt","nameLocation":"1565:8:26","nodeType":"VariableDeclaration","scope":6477,"src":"1558:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6469,"name":"uint32","nodeType":"ElementaryTypeName","src":"1558:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6472,"mutability":"mutable","name":"signature","nameLocation":"1589:9:26","nodeType":"VariableDeclaration","scope":6477,"src":"1583:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6471,"name":"bytes","nodeType":"ElementaryTypeName","src":"1583:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6474,"mutability":"mutable","name":"metadata","nameLocation":"1615:8:26","nodeType":"VariableDeclaration","scope":6477,"src":"1608:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6473,"name":"string","nodeType":"ElementaryTypeName","src":"1608:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6476,"mutability":"mutable","name":"storageAddress","nameLocation":"1641:14:26","nodeType":"VariableDeclaration","scope":6477,"src":"1633:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6475,"name":"address","nodeType":"ElementaryTypeName","src":"1633:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"UserProfile","nameLocation":"1484:11:26","nodeType":"StructDefinition","scope":7038,"src":"1477:185:26","visibility":"public"},{"constant":false,"id":6482,"mutability":"mutable","name":"_profiles","nameLocation":"1708:9:26","nodeType":"VariableDeclaration","scope":7038,"src":"1668:49:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserProfile_$6477_storage_$","typeString":"mapping(address => struct Profile.UserProfile)"},"typeName":{"id":6481,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6478,"name":"address","nodeType":"ElementaryTypeName","src":"1676:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1668:31:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserProfile_$6477_storage_$","typeString":"mapping(address => struct Profile.UserProfile)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6480,"nodeType":"UserDefinedTypeName","pathNode":{"id":6479,"name":"UserProfile","nameLocations":["1687:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":6477,"src":"1687:11:26"},"referencedDeclaration":6477,"src":"1687:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_storage_ptr","typeString":"struct Profile.UserProfile"}}},"visibility":"private"},{"anonymous":false,"eventSelector":"0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885","id":6488,"name":"Mint","nameLocation":"1730:4:26","nodeType":"EventDefinition","parameters":{"id":6487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6484,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1751:2:26","nodeType":"VariableDeclaration","scope":6488,"src":"1735:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6483,"name":"address","nodeType":"ElementaryTypeName","src":"1735:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6486,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"1763:7:26","nodeType":"VariableDeclaration","scope":6488,"src":"1755:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6485,"name":"uint256","nodeType":"ElementaryTypeName","src":"1755:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1734:37:26"},"src":"1724:48:26"},{"anonymous":false,"eventSelector":"cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5","id":6494,"name":"Burn","nameLocation":"1783:4:26","nodeType":"EventDefinition","parameters":{"id":6493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6490,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1804:2:26","nodeType":"VariableDeclaration","scope":6494,"src":"1788:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6489,"name":"address","nodeType":"ElementaryTypeName","src":"1788:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6492,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"1816:7:26","nodeType":"VariableDeclaration","scope":6494,"src":"1808:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6491,"name":"uint256","nodeType":"ElementaryTypeName","src":"1808:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1787:37:26"},"src":"1777:48:26"},{"body":{"id":6501,"nodeType":"Block","src":"2049:39:26","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6498,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"2059:20:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2059:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6500,"nodeType":"ExpressionStatement","src":"2059:22:26"}]},"documentation":{"id":6495,"nodeType":"StructuredDocumentation","src":"1831:199:26","text":"@notice the constructor is not used since the contract is upgradeable except to disable initializers in the implementations that are deployed.\n @custom:oz-upgrades-unsafe-allow constructor"},"id":6502,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6496,"nodeType":"ParameterList","parameters":[],"src":"2046:2:26"},"returnParameters":{"id":6497,"nodeType":"ParameterList","parameters":[],"src":"2049:0:26"},"scope":7038,"src":"2035:53:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6532,"nodeType":"Block","src":"2190:184:26","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6513,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"2200:14:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2200:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6515,"nodeType":"ExpressionStatement","src":"2200:16:26"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6516,"name":"__AccessControl_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"2226:20:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6518,"nodeType":"ExpressionStatement","src":"2226:22:26"},{"expression":{"arguments":[{"id":6520,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"2272:4:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6521,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6506,"src":"2278:6:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6519,"name":"__ERC721_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"2258:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":6522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2258:27:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6523,"nodeType":"ExpressionStatement","src":"2258:27:26"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6524,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"2295:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2295:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6526,"nodeType":"ExpressionStatement","src":"2295:24:26"},{"expression":{"arguments":[{"id":6528,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42,"src":"2341:18:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6529,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"2361:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6527,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"2330:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":6530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2330:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6531,"nodeType":"ExpressionStatement","src":"2330:37:26"}]},"functionSelector":"077f224a","id":6533,"implemented":true,"kind":"function","modifiers":[{"id":6511,"kind":"modifierInvocation","modifierName":{"id":6510,"name":"initializer","nameLocations":["2178:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":976,"src":"2178:11:26"},"nodeType":"ModifierInvocation","src":"2178:11:26"}],"name":"initialize","nameLocation":"2103:10:26","nodeType":"FunctionDefinition","parameters":{"id":6509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6504,"mutability":"mutable","name":"name","nameLocation":"2128:4:26","nodeType":"VariableDeclaration","scope":6533,"src":"2114:18:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6503,"name":"string","nodeType":"ElementaryTypeName","src":"2114:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6506,"mutability":"mutable","name":"symbol","nameLocation":"2148:6:26","nodeType":"VariableDeclaration","scope":6533,"src":"2134:20:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6505,"name":"string","nodeType":"ElementaryTypeName","src":"2134:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6508,"mutability":"mutable","name":"admin","nameLocation":"2164:5:26","nodeType":"VariableDeclaration","scope":6533,"src":"2156:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6507,"name":"address","nodeType":"ElementaryTypeName","src":"2156:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2113:57:26"},"returnParameters":{"id":6512,"nodeType":"ParameterList","parameters":[],"src":"2190:0:26"},"scope":7038,"src":"2094:280:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1435],"body":{"id":6567,"nodeType":"Block","src":"2479:167:26","statements":[{"assignments":[6543],"declarations":[{"constant":false,"id":6543,"mutability":"mutable","name":"owner","nameLocation":"2497:5:26","nodeType":"VariableDeclaration","scope":6567,"src":"2489:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6542,"name":"address","nodeType":"ElementaryTypeName","src":"2489:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6549,"initialValue":{"arguments":[{"id":6546,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6535,"src":"2519:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"546f6b656e206e6f74206578697374","id":6547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2528:17:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_d978df2f8ae53a6a76c0ccd875e52f50c446cfacf442f7f2e0e78d141040f42e","typeString":"literal_string \"Token not exist\""},"value":"Token not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_d978df2f8ae53a6a76c0ccd875e52f50c446cfacf442f7f2e0e78d141040f42e","typeString":"literal_string \"Token not exist\""}],"expression":{"id":6544,"name":"_ownerMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6453,"src":"2505:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap storage ref"}},"id":6545,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2515:3:26","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":5272,"src":"2505:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintToAddressMap_$5039_storage_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_address_$attached_to$_t_struct$_UintToAddressMap_$5039_storage_ptr_$","typeString":"function (struct EnumerableMapUpgradeable.UintToAddressMap storage pointer,uint256,string memory) view returns (address)"}},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2505:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2489:57:26"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"baseExpression":{"id":6552,"name":"_profiles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"2569:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserProfile_$6477_storage_$","typeString":"mapping(address => struct Profile.UserProfile storage ref)"}},"id":6554,"indexExpression":{"id":6553,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"2579:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2569:16:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_storage","typeString":"struct Profile.UserProfile storage ref"}},"id":6555,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2586:8:26","memberName":"metadata","nodeType":"MemberAccess","referencedDeclaration":6474,"src":"2569:25:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":6551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2563:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6550,"name":"bytes","nodeType":"ElementaryTypeName","src":"2563:5:26","typeDescriptions":{}}},"id":6556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2563:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2596:6:26","memberName":"length","nodeType":"MemberAccess","src":"2563:39:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2605:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2563:43:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":6564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2637:2:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2563:76:26","trueExpression":{"expression":{"baseExpression":{"id":6560,"name":"_profiles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"2609:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserProfile_$6477_storage_$","typeString":"mapping(address => struct Profile.UserProfile storage ref)"}},"id":6562,"indexExpression":{"id":6561,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"2619:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2609:16:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_storage","typeString":"struct Profile.UserProfile storage ref"}},"id":6563,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2626:8:26","memberName":"metadata","nodeType":"MemberAccess","referencedDeclaration":6474,"src":"2609:25:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6541,"id":6566,"nodeType":"Return","src":"2556:83:26"}]},"functionSelector":"c87b56dd","id":6568,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2389:8:26","nodeType":"FunctionDefinition","overrides":{"id":6538,"nodeType":"OverrideSpecifier","overrides":[{"id":6537,"name":"ERC721Upgradeable","nameLocations":["2436:17:26"],"nodeType":"IdentifierPath","referencedDeclaration":2162,"src":"2436:17:26"}],"src":"2427:27:26"},"parameters":{"id":6536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6535,"mutability":"mutable","name":"tokenId","nameLocation":"2406:7:26","nodeType":"VariableDeclaration","scope":6568,"src":"2398:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6534,"name":"uint256","nodeType":"ElementaryTypeName","src":"2398:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2397:17:26"},"returnParameters":{"id":6541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6540,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6568,"src":"2464:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6539,"name":"string","nodeType":"ElementaryTypeName","src":"2464:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2463:15:26"},"scope":7038,"src":"2380:266:26","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6716,"nodeType":"Block","src":"2750:1061:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6578,"name":"profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"2764:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_memory_ptr","typeString":"struct Profile.UserProfile memory"}},"id":6579,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2772:14:26","memberName":"storageAddress","nodeType":"MemberAccess","referencedDeclaration":6476,"src":"2764:22:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2798:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2790:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6580,"name":"address","nodeType":"ElementaryTypeName","src":"2790:7:26","typeDescriptions":{}}},"id":6583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2764:36:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6588,"nodeType":"IfStatement","src":"2760:69:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6585,"name":"StorageZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"2809:18:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2809:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6587,"nodeType":"RevertStatement","src":"2802:27:26"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":6592,"name":"_dataStorageProviders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"2855:21:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_IDataStorageCartridge_$7065_$","typeString":"mapping(address => contract IDataStorageCartridge)"}},"id":6595,"indexExpression":{"expression":{"id":6593,"name":"profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"2877:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_memory_ptr","typeString":"struct Profile.UserProfile memory"}},"id":6594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2885:14:26","memberName":"storageAddress","nodeType":"MemberAccess","referencedDeclaration":6476,"src":"2877:22:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2855:45:26","typeDescriptions":{"typeIdentifier":"t_contract$_IDataStorageCartridge_$7065","typeString":"contract IDataStorageCartridge"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IDataStorageCartridge_$7065","typeString":"contract IDataStorageCartridge"}],"id":6591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2847:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6590,"name":"address","nodeType":"ElementaryTypeName","src":"2847:7:26","typeDescriptions":{}}},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2847:54:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2913:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2905:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6597,"name":"address","nodeType":"ElementaryTypeName","src":"2905:7:26","typeDescriptions":{}}},"id":6600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2905:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2847:68:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"73746f72616765206e6f7420696e697469616c697a6564","id":6602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2917:25:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_91a54eeda269cc8a80a3dcdf518e5f3a12f24479e680e6f470b183a6b5d3ecff","typeString":"literal_string \"storage not initialized\""},"value":"storage not initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_91a54eeda269cc8a80a3dcdf518e5f3a12f24479e680e6f470b183a6b5d3ecff","typeString":"literal_string \"storage not initialized\""}],"id":6589,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2839:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2839:104:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6604,"nodeType":"ExpressionStatement","src":"2839:104:26"},{"assignments":[6606],"declarations":[{"constant":false,"id":6606,"mutability":"mutable","name":"tokenId","nameLocation":"2962:7:26","nodeType":"VariableDeclaration","scope":6716,"src":"2954:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6605,"name":"uint256","nodeType":"ElementaryTypeName","src":"2954:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6608,"initialValue":{"hexValue":"30","id":6607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2972:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2954:19:26"},{"condition":{"arguments":[{"expression":{"id":6611,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3006:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3010:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3006:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6609,"name":"_tokenMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"2987:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap storage ref"}},"id":6610,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2997:8:26","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":5393,"src":"2987:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToUintMap_$5306_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressToUintMap_$5306_storage_ptr_$","typeString":"function (struct EnumerableMapUpgradeable.AddressToUintMap storage pointer,address) view returns (bool)"}},"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2987:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6677,"nodeType":"Block","src":"3337:183:26","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6650,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6459,"src":"3351:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3106_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":6652,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3360:9:26","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":3132,"src":"3351:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$3106_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$3106_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer)"}},"id":6653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3351:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6654,"nodeType":"ExpressionStatement","src":"3351:20:26"},{"expression":{"id":6659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6655,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"3385:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6656,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6459,"src":"3395:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3106_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":6657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3404:7:26","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":3118,"src":"3395:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$3106_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$3106_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":6658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3395:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3385:28:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6660,"nodeType":"ExpressionStatement","src":"3385:28:26"},{"expression":{"arguments":[{"expression":{"id":6664,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3441:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3445:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3441:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6666,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"3453:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6661,"name":"_tokenMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"3427:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap storage ref"}},"id":6663,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3437:3:26","memberName":"set","nodeType":"MemberAccess","referencedDeclaration":5339,"src":"3427:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressToUintMap_$5306_storage_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_AddressToUintMap_$5306_storage_ptr_$","typeString":"function (struct EnumerableMapUpgradeable.AddressToUintMap storage pointer,address,uint256) returns (bool)"}},"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3427:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6668,"nodeType":"ExpressionStatement","src":"3427:34:26"},{"expression":{"arguments":[{"id":6672,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"3489:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6673,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3498:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3502:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3498:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6669,"name":"_ownerMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6453,"src":"3475:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap storage ref"}},"id":6671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3485:3:26","memberName":"set","nodeType":"MemberAccess","referencedDeclaration":5072,"src":"3475:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$5039_storage_ptr_$_t_uint256_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_UintToAddressMap_$5039_storage_ptr_$","typeString":"function (struct EnumerableMapUpgradeable.UintToAddressMap storage pointer,uint256,address) returns (bool)"}},"id":6675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3475:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6676,"nodeType":"ExpressionStatement","src":"3475:34:26"}]},"id":6678,"nodeType":"IfStatement","src":"2983:537:26","trueBody":{"id":6649,"nodeType":"Block","src":"3019:312:26","statements":[{"expression":{"id":6620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6614,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"3033:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6617,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3057:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3061:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3057:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6615,"name":"_tokenMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"3043:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap storage ref"}},"id":6616,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3053:3:26","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":5518,"src":"3043:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToUintMap_$5306_storage_ptr_$_t_address_$returns$_t_uint256_$attached_to$_t_struct$_AddressToUintMap_$5306_storage_ptr_$","typeString":"function (struct EnumerableMapUpgradeable.AddressToUintMap storage pointer,address) view returns (uint256)"}},"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3043:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3033:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6621,"nodeType":"ExpressionStatement","src":"3033:35:26"},{"assignments":[6624],"declarations":[{"constant":false,"id":6624,"mutability":"mutable","name":"prevProfile","nameLocation":"3101:11:26","nodeType":"VariableDeclaration","scope":6649,"src":"3082:30:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_memory_ptr","typeString":"struct Profile.UserProfile"},"typeName":{"id":6623,"nodeType":"UserDefinedTypeName","pathNode":{"id":6622,"name":"UserProfile","nameLocations":["3082:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":6477,"src":"3082:11:26"},"referencedDeclaration":6477,"src":"3082:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_storage_ptr","typeString":"struct Profile.UserProfile"}},"visibility":"internal"}],"id":6629,"initialValue":{"baseExpression":{"id":6625,"name":"_profiles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"3115:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserProfile_$6477_storage_$","typeString":"mapping(address => struct Profile.UserProfile storage ref)"}},"id":6628,"indexExpression":{"expression":{"id":6626,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3125:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3129:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3125:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3115:21:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_storage","typeString":"struct Profile.UserProfile storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3082:54:26"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6630,"name":"prevProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6624,"src":"3154:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_memory_ptr","typeString":"struct Profile.UserProfile memory"}},"id":6631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3166:14:26","memberName":"storageAddress","nodeType":"MemberAccess","referencedDeclaration":6476,"src":"3154:26:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":6632,"name":"profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"3184:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_memory_ptr","typeString":"struct Profile.UserProfile memory"}},"id":6633,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3192:14:26","memberName":"storageAddress","nodeType":"MemberAccess","referencedDeclaration":6476,"src":"3184:22:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3154:52:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6648,"nodeType":"IfStatement","src":"3150:171:26","trueBody":{"id":6647,"nodeType":"Block","src":"3208:113:26","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":6642,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3294:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3298:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3294:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6640,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3283:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3287:6:26","memberName":"encode","nodeType":"MemberAccess","src":"3283:10:26","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3283:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"baseExpression":{"id":6635,"name":"_dataStorageProviders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"3226:21:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_IDataStorageCartridge_$7065_$","typeString":"mapping(address => contract IDataStorageCartridge)"}},"id":6638,"indexExpression":{"expression":{"id":6636,"name":"prevProfile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6624,"src":"3248:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_memory_ptr","typeString":"struct Profile.UserProfile memory"}},"id":6637,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3260:14:26","memberName":"storageAddress","nodeType":"MemberAccess","referencedDeclaration":6476,"src":"3248:26:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3226:49:26","typeDescriptions":{"typeIdentifier":"t_contract$_IDataStorageCartridge_$7065","typeString":"contract IDataStorageCartridge"}},"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3276:6:26","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":7059,"src":"3226:56:26","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) payable external returns (bool)"}},"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3226:80:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6646,"nodeType":"ExpressionStatement","src":"3226:80:26"}]}}]}},{"expression":{"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6679,"name":"_profiles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"3530:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserProfile_$6477_storage_$","typeString":"mapping(address => struct Profile.UserProfile storage ref)"}},"id":6682,"indexExpression":{"expression":{"id":6680,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3540:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3544:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3540:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3530:21:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_storage","typeString":"struct Profile.UserProfile storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6683,"name":"profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"3554:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_memory_ptr","typeString":"struct Profile.UserProfile memory"}},"src":"3530:31:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_storage","typeString":"struct Profile.UserProfile storage ref"}},"id":6685,"nodeType":"ExpressionStatement","src":"3530:31:26"},{"assignments":[6687],"declarations":[{"constant":false,"id":6687,"mutability":"mutable","name":"result","nameLocation":"3576:6:26","nodeType":"VariableDeclaration","scope":6716,"src":"3571:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6686,"name":"bool","nodeType":"ElementaryTypeName","src":"3571:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6700,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":6695,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3649:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3653:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3649:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6697,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"3661:4:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6693,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3638:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3642:6:26","memberName":"encode","nodeType":"MemberAccess","src":"3638:10:26","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3638:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"baseExpression":{"id":6688,"name":"_dataStorageProviders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"3585:21:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_IDataStorageCartridge_$7065_$","typeString":"mapping(address => contract IDataStorageCartridge)"}},"id":6691,"indexExpression":{"expression":{"id":6689,"name":"profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"3607:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_memory_ptr","typeString":"struct Profile.UserProfile memory"}},"id":6690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3615:14:26","memberName":"storageAddress","nodeType":"MemberAccess","referencedDeclaration":6476,"src":"3607:22:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3585:45:26","typeDescriptions":{"typeIdentifier":"t_contract$_IDataStorageCartridge_$7065","typeString":"contract IDataStorageCartridge"}},"id":6692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3631:6:26","memberName":"create","nodeType":"MemberAccess","referencedDeclaration":7052,"src":"3585:52:26","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) payable external returns (bool)"}},"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:82:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3571:96:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6702,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6687,"src":"3685:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":6703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3695:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3685:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420726573706f6e73652066726f6d20646174612073746f72616765","id":6705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3701:36:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_412c23c044f12933032e9eb6ca8a55a186f713b6708f4a9e879761e14440c687","typeString":"literal_string \"invalid response from data storage\""},"value":"invalid response from data storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_412c23c044f12933032e9eb6ca8a55a186f713b6708f4a9e879761e14440c687","typeString":"literal_string \"invalid response from data storage\""}],"id":6701,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3677:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3677:61:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6707,"nodeType":"ExpressionStatement","src":"3677:61:26"},{"eventCall":{"arguments":[{"expression":{"id":6709,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3759:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3763:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3759:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6711,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"3771:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6708,"name":"Mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"3754:4:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3754:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6713,"nodeType":"EmitStatement","src":"3749:30:26"},{"expression":{"id":6714,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"3797:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6577,"id":6715,"nodeType":"Return","src":"3790:14:26"}]},"functionSelector":"faf4a931","id":6717,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"2661:4:26","nodeType":"FunctionDefinition","parameters":{"id":6574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6571,"mutability":"mutable","name":"profile","nameLocation":"2685:7:26","nodeType":"VariableDeclaration","scope":6717,"src":"2666:26:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_memory_ptr","typeString":"struct Profile.UserProfile"},"typeName":{"id":6570,"nodeType":"UserDefinedTypeName","pathNode":{"id":6569,"name":"UserProfile","nameLocations":["2666:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":6477,"src":"2666:11:26"},"referencedDeclaration":6477,"src":"2666:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_storage_ptr","typeString":"struct Profile.UserProfile"}},"visibility":"internal"},{"constant":false,"id":6573,"mutability":"mutable","name":"data","nameLocation":"2708:4:26","nodeType":"VariableDeclaration","scope":6717,"src":"2694:18:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6572,"name":"string","nodeType":"ElementaryTypeName","src":"2694:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2665:48:26"},"returnParameters":{"id":6577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6717,"src":"2740:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6575,"name":"uint256","nodeType":"ElementaryTypeName","src":"2740:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2739:9:26"},"scope":7038,"src":"2652:1159:26","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":6791,"nodeType":"Block","src":"3850:532:26","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":6723,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3887:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3891:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3887:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6721,"name":"_tokenMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"3868:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap storage ref"}},"id":6722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3878:8:26","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":5393,"src":"3868:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToUintMap_$5306_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressToUintMap_$5306_storage_ptr_$","typeString":"function (struct EnumerableMapUpgradeable.AddressToUintMap storage pointer,address) view returns (bool)"}},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3868:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546865206163636f756e7420646f6573206e6f7420686176652070726f66696c65","id":6726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3900:35:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_886b867501ea49c352a9c24cd3e606ffa17dba28c8e4cc81c5f25cf37ba68cbb","typeString":"literal_string \"The account does not have profile\""},"value":"The account does not have profile"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_886b867501ea49c352a9c24cd3e606ffa17dba28c8e4cc81c5f25cf37ba68cbb","typeString":"literal_string \"The account does not have profile\""}],"id":6720,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3860:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3860:76:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6728,"nodeType":"ExpressionStatement","src":"3860:76:26"},{"assignments":[6730],"declarations":[{"constant":false,"id":6730,"mutability":"mutable","name":"tokenId","nameLocation":"3955:7:26","nodeType":"VariableDeclaration","scope":6791,"src":"3947:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6729,"name":"uint256","nodeType":"ElementaryTypeName","src":"3947:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6736,"initialValue":{"arguments":[{"expression":{"id":6733,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3979:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3983:6:26","memberName":"sender","nodeType":"MemberAccess","src":"3979:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6731,"name":"_tokenMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"3965:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap storage ref"}},"id":6732,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3975:3:26","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":5518,"src":"3965:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToUintMap_$5306_storage_ptr_$_t_address_$returns$_t_uint256_$attached_to$_t_struct$_AddressToUintMap_$5306_storage_ptr_$","typeString":"function (struct EnumerableMapUpgradeable.AddressToUintMap storage pointer,address) view returns (uint256)"}},"id":6735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3965:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3947:43:26"},{"expression":{"arguments":[{"expression":{"id":6740,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4018:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4022:6:26","memberName":"sender","nodeType":"MemberAccess","src":"4018:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6737,"name":"_tokenMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"4001:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap storage ref"}},"id":6739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4011:6:26","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":5366,"src":"4001:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressToUintMap_$5306_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressToUintMap_$5306_storage_ptr_$","typeString":"function (struct EnumerableMapUpgradeable.AddressToUintMap storage pointer,address) returns (bool)"}},"id":6742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4001:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6743,"nodeType":"ExpressionStatement","src":"4001:28:26"},{"expression":{"arguments":[{"id":6747,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"4056:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6744,"name":"_ownerMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6453,"src":"4039:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap storage ref"}},"id":6746,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4049:6:26","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":5093,"src":"4039:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$5039_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_UintToAddressMap_$5039_storage_ptr_$","typeString":"function (struct EnumerableMapUpgradeable.UintToAddressMap storage pointer,uint256) returns (bool)"}},"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4039:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6749,"nodeType":"ExpressionStatement","src":"4039:25:26"},{"assignments":[6752],"declarations":[{"constant":false,"id":6752,"mutability":"mutable","name":"profile","nameLocation":"4094:7:26","nodeType":"VariableDeclaration","scope":6791,"src":"4075:26:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_memory_ptr","typeString":"struct Profile.UserProfile"},"typeName":{"id":6751,"nodeType":"UserDefinedTypeName","pathNode":{"id":6750,"name":"UserProfile","nameLocations":["4075:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":6477,"src":"4075:11:26"},"referencedDeclaration":6477,"src":"4075:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_storage_ptr","typeString":"struct Profile.UserProfile"}},"visibility":"internal"}],"id":6757,"initialValue":{"baseExpression":{"id":6753,"name":"_profiles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"4104:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserProfile_$6477_storage_$","typeString":"mapping(address => struct Profile.UserProfile storage ref)"}},"id":6756,"indexExpression":{"expression":{"id":6754,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4114:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4118:6:26","memberName":"sender","nodeType":"MemberAccess","src":"4114:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4104:21:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_storage","typeString":"struct Profile.UserProfile storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4075:50:26"},{"assignments":[6759],"declarations":[{"constant":false,"id":6759,"mutability":"mutable","name":"result","nameLocation":"4140:6:26","nodeType":"VariableDeclaration","scope":6791,"src":"4135:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6758,"name":"bool","nodeType":"ElementaryTypeName","src":"4135:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6771,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":6767,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4213:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4217:6:26","memberName":"sender","nodeType":"MemberAccess","src":"4213:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6765,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4202:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4206:6:26","memberName":"encode","nodeType":"MemberAccess","src":"4202:10:26","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4202:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"baseExpression":{"id":6760,"name":"_dataStorageProviders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"4149:21:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_IDataStorageCartridge_$7065_$","typeString":"mapping(address => contract IDataStorageCartridge)"}},"id":6763,"indexExpression":{"expression":{"id":6761,"name":"profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6752,"src":"4171:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_memory_ptr","typeString":"struct Profile.UserProfile memory"}},"id":6762,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4179:14:26","memberName":"storageAddress","nodeType":"MemberAccess","referencedDeclaration":6476,"src":"4171:22:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4149:45:26","typeDescriptions":{"typeIdentifier":"t_contract$_IDataStorageCartridge_$7065","typeString":"contract IDataStorageCartridge"}},"id":6764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4195:6:26","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":7059,"src":"4149:52:26","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) payable external returns (bool)"}},"id":6770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4149:76:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4135:90:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6773,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"4243:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":6774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4253:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4243:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420726573706f6e73652066726f6d20646174612073746f72616765","id":6776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4259:36:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_412c23c044f12933032e9eb6ca8a55a186f713b6708f4a9e879761e14440c687","typeString":"literal_string \"invalid response from data storage\""},"value":"invalid response from data storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_412c23c044f12933032e9eb6ca8a55a186f713b6708f4a9e879761e14440c687","typeString":"literal_string \"invalid response from data storage\""}],"id":6772,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4235:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4235:61:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6778,"nodeType":"ExpressionStatement","src":"4235:61:26"},{"expression":{"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4306:28:26","subExpression":{"baseExpression":{"id":6779,"name":"_profiles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"4313:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserProfile_$6477_storage_$","typeString":"mapping(address => struct Profile.UserProfile storage ref)"}},"id":6782,"indexExpression":{"expression":{"id":6780,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4323:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4327:6:26","memberName":"sender","nodeType":"MemberAccess","src":"4323:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4313:21:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_storage","typeString":"struct Profile.UserProfile storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6784,"nodeType":"ExpressionStatement","src":"4306:28:26"},{"eventCall":{"arguments":[{"expression":{"id":6786,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4355:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4359:6:26","memberName":"sender","nodeType":"MemberAccess","src":"4355:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6788,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"4367:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6785,"name":"Burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"4350:4:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4350:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6790,"nodeType":"EmitStatement","src":"4345:30:26"}]},"functionSelector":"44df8e70","id":6792,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"3826:4:26","nodeType":"FunctionDefinition","parameters":{"id":6718,"nodeType":"ParameterList","parameters":[],"src":"3830:2:26"},"returnParameters":{"id":6719,"nodeType":"ParameterList","parameters":[],"src":"3850:0:26"},"scope":7038,"src":"3817:565:26","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":6817,"nodeType":"Block","src":"4471:153:26","statements":[{"assignments":[6801],"declarations":[{"constant":false,"id":6801,"mutability":"mutable","name":"owner","nameLocation":"4489:5:26","nodeType":"VariableDeclaration","scope":6817,"src":"4481:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6800,"name":"address","nodeType":"ElementaryTypeName","src":"4481:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6807,"initialValue":{"arguments":[{"id":6804,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"4511:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"496e76616c696420746f6b656e4964","id":6805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4520:17:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_47dcc88603f32730c5f1349ee02d9fe469c193c742f38ce12c7b0ba84c66c8a4","typeString":"literal_string \"Invalid tokenId\""},"value":"Invalid tokenId"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_47dcc88603f32730c5f1349ee02d9fe469c193c742f38ce12c7b0ba84c66c8a4","typeString":"literal_string \"Invalid tokenId\""}],"expression":{"id":6802,"name":"_ownerMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6453,"src":"4497:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap storage ref"}},"id":6803,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4507:3:26","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":5272,"src":"4497:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintToAddressMap_$5039_storage_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_address_$attached_to$_t_struct$_UintToAddressMap_$5039_storage_ptr_$","typeString":"function (struct EnumerableMapUpgradeable.UintToAddressMap storage pointer,uint256,string memory) view returns (address)"}},"id":6806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4481:57:26"},{"assignments":[6810],"declarations":[{"constant":false,"id":6810,"mutability":"mutable","name":"profile","nameLocation":"4567:7:26","nodeType":"VariableDeclaration","scope":6817,"src":"4548:26:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_memory_ptr","typeString":"struct Profile.UserProfile"},"typeName":{"id":6809,"nodeType":"UserDefinedTypeName","pathNode":{"id":6808,"name":"UserProfile","nameLocations":["4548:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":6477,"src":"4548:11:26"},"referencedDeclaration":6477,"src":"4548:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_storage_ptr","typeString":"struct Profile.UserProfile"}},"visibility":"internal"}],"id":6814,"initialValue":{"baseExpression":{"id":6811,"name":"_profiles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"4577:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserProfile_$6477_storage_$","typeString":"mapping(address => struct Profile.UserProfile storage ref)"}},"id":6813,"indexExpression":{"id":6812,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"4587:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4577:16:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_storage","typeString":"struct Profile.UserProfile storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4548:45:26"},{"expression":{"id":6815,"name":"profile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6810,"src":"4610:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_memory_ptr","typeString":"struct Profile.UserProfile memory"}},"functionReturnParameters":6799,"id":6816,"nodeType":"Return","src":"4603:14:26"}]},"functionSelector":"1f52b76c","id":6818,"implemented":true,"kind":"function","modifiers":[],"name":"getUserProfile","nameLocation":"4397:14:26","nodeType":"FunctionDefinition","parameters":{"id":6795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6794,"mutability":"mutable","name":"tokenId","nameLocation":"4420:7:26","nodeType":"VariableDeclaration","scope":6818,"src":"4412:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6793,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:17:26"},"returnParameters":{"id":6799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6818,"src":"4450:18:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_memory_ptr","typeString":"struct Profile.UserProfile"},"typeName":{"id":6797,"nodeType":"UserDefinedTypeName","pathNode":{"id":6796,"name":"UserProfile","nameLocations":["4450:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":6477,"src":"4450:11:26"},"referencedDeclaration":6477,"src":"4450:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_UserProfile_$6477_storage_ptr","typeString":"struct Profile.UserProfile"}},"visibility":"internal"}],"src":"4449:20:26"},"scope":7038,"src":"4388:236:26","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1348],"body":{"id":6839,"nodeType":"Block","src":"4722:90:26","statements":[{"assignments":[6828,null],"declarations":[{"constant":false,"id":6828,"mutability":"mutable","name":"success","nameLocation":"4738:7:26","nodeType":"VariableDeclaration","scope":6839,"src":"4733:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6827,"name":"bool","nodeType":"ElementaryTypeName","src":"4733:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":6833,"initialValue":{"arguments":[{"id":6831,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"4767:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6829,"name":"_tokenMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"4750:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap storage ref"}},"id":6830,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4760:6:26","memberName":"tryGet","nodeType":"MemberAccess","referencedDeclaration":5488,"src":"4750:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToUintMap_$5306_storage_ptr_$_t_address_$returns$_t_bool_$_t_uint256_$attached_to$_t_struct$_AddressToUintMap_$5306_storage_ptr_$","typeString":"function (struct EnumerableMapUpgradeable.AddressToUintMap storage pointer,address) view returns (bool,uint256)"}},"id":6832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4750:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4732:41:26"},{"expression":{"condition":{"id":6834,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6828,"src":"4790:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":6836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4804:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4790:15:26","trueExpression":{"hexValue":"31","id":6835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4800:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6826,"id":6838,"nodeType":"Return","src":"4783:22:26"}]},"functionSelector":"70a08231","id":6840,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"4639:9:26","nodeType":"FunctionDefinition","overrides":{"id":6823,"nodeType":"OverrideSpecifier","overrides":[{"id":6822,"name":"ERC721Upgradeable","nameLocations":["4685:17:26"],"nodeType":"IdentifierPath","referencedDeclaration":2162,"src":"4685:17:26"}],"src":"4676:27:26"},"parameters":{"id":6821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6820,"mutability":"mutable","name":"owner","nameLocation":"4657:5:26","nodeType":"VariableDeclaration","scope":6840,"src":"4649:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6819,"name":"address","nodeType":"ElementaryTypeName","src":"4649:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4648:15:26"},"returnParameters":{"id":6826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6840,"src":"4713:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6824,"name":"uint256","nodeType":"ElementaryTypeName","src":"4713:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4712:9:26"},"scope":7038,"src":"4630:182:26","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6853,"nodeType":"Block","src":"4881:91:26","statements":[{"expression":{"arguments":[{"id":6849,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6842,"src":"4912:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"5468652077616c6c657420646f6573206e6f742068617665206120636f6d706c657465642070726f66696c65","id":6850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4918:46:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_136cddf24d256aa910ee53b8eb59c090b792ce5a8272a3e9b5c2c5258790bb0b","typeString":"literal_string \"The wallet does not have a completed profile\""},"value":"The wallet does not have a completed profile"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_136cddf24d256aa910ee53b8eb59c090b792ce5a8272a3e9b5c2c5258790bb0b","typeString":"literal_string \"The wallet does not have a completed profile\""}],"expression":{"id":6847,"name":"_tokenMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"4898:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap storage ref"}},"id":6848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4908:3:26","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":5551,"src":"4898:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToUintMap_$5306_storage_ptr_$_t_address_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressToUintMap_$5306_storage_ptr_$","typeString":"function (struct EnumerableMapUpgradeable.AddressToUintMap storage pointer,address,string memory) view returns (uint256)"}},"id":6851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4898:67:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6846,"id":6852,"nodeType":"Return","src":"4891:74:26"}]},"functionSelector":"773c02d4","id":6854,"implemented":true,"kind":"function","modifiers":[],"name":"tokenIdOf","nameLocation":"4827:9:26","nodeType":"FunctionDefinition","parameters":{"id":6843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6842,"mutability":"mutable","name":"from","nameLocation":"4845:4:26","nodeType":"VariableDeclaration","scope":6854,"src":"4837:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6841,"name":"address","nodeType":"ElementaryTypeName","src":"4837:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4836:14:26"},"returnParameters":{"id":6846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6854,"src":"4872:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6844,"name":"uint256","nodeType":"ElementaryTypeName","src":"4872:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4871:9:26"},"scope":7038,"src":"4818:154:26","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1376],"body":{"id":6869,"nodeType":"Block","src":"5070:65:26","statements":[{"expression":{"arguments":[{"id":6865,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"5101:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"496e76616c696420746f6b656e4964","id":6866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5110:17:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_47dcc88603f32730c5f1349ee02d9fe469c193c742f38ce12c7b0ba84c66c8a4","typeString":"literal_string \"Invalid tokenId\""},"value":"Invalid tokenId"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_47dcc88603f32730c5f1349ee02d9fe469c193c742f38ce12c7b0ba84c66c8a4","typeString":"literal_string \"Invalid tokenId\""}],"expression":{"id":6863,"name":"_ownerMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6453,"src":"5087:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$5039_storage","typeString":"struct EnumerableMapUpgradeable.UintToAddressMap storage ref"}},"id":6864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5097:3:26","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":5272,"src":"5087:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintToAddressMap_$5039_storage_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_address_$attached_to$_t_struct$_UintToAddressMap_$5039_storage_ptr_$","typeString":"function (struct EnumerableMapUpgradeable.UintToAddressMap storage pointer,uint256,string memory) view returns (address)"}},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5087:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6862,"id":6868,"nodeType":"Return","src":"5080:48:26"}]},"functionSelector":"6352211e","id":6870,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"4987:7:26","nodeType":"FunctionDefinition","overrides":{"id":6859,"nodeType":"OverrideSpecifier","overrides":[{"id":6858,"name":"ERC721Upgradeable","nameLocations":["5033:17:26"],"nodeType":"IdentifierPath","referencedDeclaration":2162,"src":"5033:17:26"}],"src":"5024:27:26"},"parameters":{"id":6857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6856,"mutability":"mutable","name":"tokenId","nameLocation":"5003:7:26","nodeType":"VariableDeclaration","scope":6870,"src":"4995:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6855,"name":"uint256","nodeType":"ElementaryTypeName","src":"4995:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4994:17:26"},"returnParameters":{"id":6862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6870,"src":"5061:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6860,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5060:9:26"},"scope":7038,"src":"4978:157:26","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6879,"nodeType":"Block","src":"5196:42:26","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6875,"name":"_tokenMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"5213:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$5306_storage","typeString":"struct EnumerableMapUpgradeable.AddressToUintMap storage ref"}},"id":6876,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5223:6:26","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":5408,"src":"5213:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToUintMap_$5306_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressToUintMap_$5306_storage_ptr_$","typeString":"function (struct EnumerableMapUpgradeable.AddressToUintMap storage pointer) view returns (uint256)"}},"id":6877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5213:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6874,"id":6878,"nodeType":"Return","src":"5206:25:26"}]},"functionSelector":"18160ddd","id":6880,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"5150:11:26","nodeType":"FunctionDefinition","parameters":{"id":6871,"nodeType":"ParameterList","parameters":[],"src":"5161:2:26"},"returnParameters":{"id":6874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6880,"src":"5187:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6872,"name":"uint256","nodeType":"ElementaryTypeName","src":"5187:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5186:9:26"},"scope":7038,"src":"5141:97:26","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6892,"nodeType":"Block","src":"5307:60:26","statements":[{"expression":{"arguments":[{"id":6888,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42,"src":"5332:18:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6889,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"5352:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6887,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"5324:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":6890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5324:36:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6886,"id":6891,"nodeType":"Return","src":"5317:43:26"}]},"functionSelector":"24d7806c","id":6893,"implemented":true,"kind":"function","modifiers":[],"name":"isAdmin","nameLocation":"5253:7:26","nodeType":"FunctionDefinition","parameters":{"id":6883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6882,"mutability":"mutable","name":"account","nameLocation":"5269:7:26","nodeType":"VariableDeclaration","scope":6893,"src":"5261:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6881,"name":"address","nodeType":"ElementaryTypeName","src":"5261:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5260:17:26"},"returnParameters":{"id":6886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6893,"src":"5301:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6884,"name":"bool","nodeType":"ElementaryTypeName","src":"5301:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5300:6:26"},"scope":7038,"src":"5244:123:26","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[75,1324],"body":{"id":6908,"nodeType":"Block","src":"5521:60:26","statements":[{"expression":{"arguments":[{"id":6905,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6895,"src":"5562:11:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":6903,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"5538:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Profile_$7038_$","typeString":"type(contract super Profile)"}},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5544:17:26","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":75,"src":"5538:23:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":6906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5538:36:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6902,"id":6907,"nodeType":"Return","src":"5531:43:26"}]},"functionSelector":"01ffc9a7","id":6909,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"5382:17:26","nodeType":"FunctionDefinition","overrides":{"id":6899,"nodeType":"OverrideSpecifier","overrides":[{"id":6897,"name":"ERC721Upgradeable","nameLocations":["5453:17:26"],"nodeType":"IdentifierPath","referencedDeclaration":2162,"src":"5453:17:26"},{"id":6898,"name":"AccessControlUpgradeable","nameLocations":["5472:24:26"],"nodeType":"IdentifierPath","referencedDeclaration":335,"src":"5472:24:26"}],"src":"5444:53:26"},"parameters":{"id":6896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6895,"mutability":"mutable","name":"interfaceId","nameLocation":"5407:11:26","nodeType":"VariableDeclaration","scope":6909,"src":"5400:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6894,"name":"bytes4","nodeType":"ElementaryTypeName","src":"5400:6:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"5399:20:26"},"returnParameters":{"id":6902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6909,"src":"5511:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6900,"name":"bool","nodeType":"ElementaryTypeName","src":"5511:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5510:6:26"},"scope":7038,"src":"5373:208:26","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1567],"body":{"id":6938,"nodeType":"Block","src":"5725:124:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6920,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6911,"src":"5739:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6921,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:26","typeDescriptions":{}}},"id":6924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6929,"nodeType":"IfStatement","src":"5735:56:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6926,"name":"TokenTransferProhibited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6423,"src":"5766:23:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5766:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6928,"nodeType":"RevertStatement","src":"5759:32:26"}},{"expression":{"arguments":[{"id":6933,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6911,"src":"5824:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6934,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6913,"src":"5830:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6935,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6915,"src":"5834:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6930,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"5801:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Profile_$7038_$","typeString":"type(contract super Profile)"}},"id":6932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5807:16:26","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1586,"src":"5801:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5801:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6937,"nodeType":"ExpressionStatement","src":"5801:41:26"}]},"functionSelector":"23b872dd","id":6939,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5596:12:26","nodeType":"FunctionDefinition","overrides":{"id":6918,"nodeType":"OverrideSpecifier","overrides":[{"id":6917,"name":"ERC721Upgradeable","nameLocations":["5706:17:26"],"nodeType":"IdentifierPath","referencedDeclaration":2162,"src":"5706:17:26"}],"src":"5697:27:26"},"parameters":{"id":6916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6911,"mutability":"mutable","name":"from","nameLocation":"5626:4:26","nodeType":"VariableDeclaration","scope":6939,"src":"5618:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6910,"name":"address","nodeType":"ElementaryTypeName","src":"5618:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6913,"mutability":"mutable","name":"to","nameLocation":"5648:2:26","nodeType":"VariableDeclaration","scope":6939,"src":"5640:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6912,"name":"address","nodeType":"ElementaryTypeName","src":"5640:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6915,"mutability":"mutable","name":"tokenId","nameLocation":"5668:7:26","nodeType":"VariableDeclaration","scope":6939,"src":"5660:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6914,"name":"uint256","nodeType":"ElementaryTypeName","src":"5660:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5608:73:26"},"returnParameters":{"id":6919,"nodeType":"ParameterList","parameters":[],"src":"5725:0:26"},"scope":7038,"src":"5587:262:26","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1586],"body":{"id":6968,"nodeType":"Block","src":"5967:124:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6950,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"5981:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5997:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5989:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6951,"name":"address","nodeType":"ElementaryTypeName","src":"5989:7:26","typeDescriptions":{}}},"id":6954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5989:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5981:18:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6959,"nodeType":"IfStatement","src":"5977:56:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6956,"name":"TokenTransferProhibited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6423,"src":"6008:23:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6008:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6958,"nodeType":"RevertStatement","src":"6001:32:26"}},{"expression":{"arguments":[{"id":6963,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"6066:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6964,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"6072:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6965,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"6076:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6960,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"6043:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Profile_$7038_$","typeString":"type(contract super Profile)"}},"id":6962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6049:16:26","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1586,"src":"6043:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6043:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6967,"nodeType":"ExpressionStatement","src":"6043:41:26"}]},"functionSelector":"42842e0e","id":6969,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5864:16:26","nodeType":"FunctionDefinition","overrides":{"id":6948,"nodeType":"OverrideSpecifier","overrides":[{"id":6947,"name":"ERC721Upgradeable","nameLocations":["5948:17:26"],"nodeType":"IdentifierPath","referencedDeclaration":2162,"src":"5948:17:26"}],"src":"5939:27:26"},"parameters":{"id":6946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6941,"mutability":"mutable","name":"from","nameLocation":"5889:4:26","nodeType":"VariableDeclaration","scope":6969,"src":"5881:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6940,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6943,"mutability":"mutable","name":"to","nameLocation":"5903:2:26","nodeType":"VariableDeclaration","scope":6969,"src":"5895:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6942,"name":"address","nodeType":"ElementaryTypeName","src":"5895:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6945,"mutability":"mutable","name":"tokenId","nameLocation":"5915:7:26","nodeType":"VariableDeclaration","scope":6969,"src":"5907:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6944,"name":"uint256","nodeType":"ElementaryTypeName","src":"5907:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:43:26"},"returnParameters":{"id":6949,"nodeType":"ParameterList","parameters":[],"src":"5967:0:26"},"scope":7038,"src":"5855:236:26","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1616],"body":{"id":7001,"nodeType":"Block","src":"6266:130:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6982,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6971,"src":"6280:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6296:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6288:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6983,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:26","typeDescriptions":{}}},"id":6986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6288:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6280:18:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6991,"nodeType":"IfStatement","src":"6276:56:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6988,"name":"TokenTransferProhibited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6423,"src":"6307:23:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6307:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6990,"nodeType":"RevertStatement","src":"6300:32:26"}},{"expression":{"arguments":[{"id":6995,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6971,"src":"6365:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6996,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6973,"src":"6371:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6997,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6975,"src":"6375:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6998,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"6384:4:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6992,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"6342:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Profile_$7038_$","typeString":"type(contract super Profile)"}},"id":6994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6348:16:26","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"6342:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":6999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6342:47:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7000,"nodeType":"ExpressionStatement","src":"6342:47:26"}]},"functionSelector":"b88d4fde","id":7002,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"6106:16:26","nodeType":"FunctionDefinition","overrides":{"id":6980,"nodeType":"OverrideSpecifier","overrides":[{"id":6979,"name":"ERC721Upgradeable","nameLocations":["6247:17:26"],"nodeType":"IdentifierPath","referencedDeclaration":2162,"src":"6247:17:26"}],"src":"6238:27:26"},"parameters":{"id":6978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6971,"mutability":"mutable","name":"from","nameLocation":"6140:4:26","nodeType":"VariableDeclaration","scope":7002,"src":"6132:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6970,"name":"address","nodeType":"ElementaryTypeName","src":"6132:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6973,"mutability":"mutable","name":"to","nameLocation":"6162:2:26","nodeType":"VariableDeclaration","scope":7002,"src":"6154:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6972,"name":"address","nodeType":"ElementaryTypeName","src":"6154:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6975,"mutability":"mutable","name":"tokenId","nameLocation":"6182:7:26","nodeType":"VariableDeclaration","scope":7002,"src":"6174:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6974,"name":"uint256","nodeType":"ElementaryTypeName","src":"6174:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6977,"mutability":"mutable","name":"data","nameLocation":"6212:4:26","nodeType":"VariableDeclaration","scope":7002,"src":"6199:17:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6976,"name":"bytes","nodeType":"ElementaryTypeName","src":"6199:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6122:100:26"},"returnParameters":{"id":6981,"nodeType":"ParameterList","parameters":[],"src":"6266:0:26"},"scope":7038,"src":"6097:299:26","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":7027,"nodeType":"Block","src":"6471:147:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7010,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"6489:8:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6509:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6501:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7011,"name":"address","nodeType":"ElementaryTypeName","src":"6501:7:26","typeDescriptions":{}}},"id":7014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6501:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6489:22:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"73746f72616765207a65726f2061646472657373","id":7016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6513:22:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_ab1237ff2a5428b64010bd9fbc5393e377fb2464f5079afa40305359d5d0ea2d","typeString":"literal_string \"storage zero address\""},"value":"storage zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ab1237ff2a5428b64010bd9fbc5393e377fb2464f5079afa40305359d5d0ea2d","typeString":"literal_string \"storage zero address\""}],"id":7009,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6481:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6481:55:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7018,"nodeType":"ExpressionStatement","src":"6481:55:26"},{"expression":{"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7019,"name":"_dataStorageProviders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"6546:21:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_IDataStorageCartridge_$7065_$","typeString":"mapping(address => contract IDataStorageCartridge)"}},"id":7021,"indexExpression":{"id":7020,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"6568:8:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6546:31:26","typeDescriptions":{"typeIdentifier":"t_contract$_IDataStorageCartridge_$7065","typeString":"contract IDataStorageCartridge"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7023,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"6602:8:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7022,"name":"IDataStorageCartridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"6580:21:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDataStorageCartridge_$7065_$","typeString":"type(contract IDataStorageCartridge)"}},"id":7024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6580:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IDataStorageCartridge_$7065","typeString":"contract IDataStorageCartridge"}},"src":"6546:65:26","typeDescriptions":{"typeIdentifier":"t_contract$_IDataStorageCartridge_$7065","typeString":"contract IDataStorageCartridge"}},"id":7026,"nodeType":"ExpressionStatement","src":"6546:65:26"}]},"functionSelector":"5dc4fe7e","id":7028,"implemented":true,"kind":"function","modifiers":[{"id":7007,"kind":"modifierInvocation","modifierName":{"id":7006,"name":"onlyOwner","nameLocations":["6461:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":454,"src":"6461:9:26"},"nodeType":"ModifierInvocation","src":"6461:9:26"}],"name":"setDataStorageProvider","nameLocation":"6411:22:26","nodeType":"FunctionDefinition","parameters":{"id":7005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7004,"mutability":"mutable","name":"_address","nameLocation":"6442:8:26","nodeType":"VariableDeclaration","scope":7028,"src":"6434:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7003,"name":"address","nodeType":"ElementaryTypeName","src":"6434:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6433:18:26"},"returnParameters":{"id":7008,"nodeType":"ParameterList","parameters":[],"src":"6471:0:26"},"scope":7038,"src":"6402:216:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1204],"body":{"id":7036,"nodeType":"Block","src":"6706:2:26","statements":[]},"id":7037,"implemented":true,"kind":"function","modifiers":[{"id":7033,"kind":"modifierInvocation","modifierName":{"id":7032,"name":"onlyOwner","nameLocations":["6687:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":454,"src":"6687:9:26"},"nodeType":"ModifierInvocation","src":"6687:9:26"}],"name":"_authorizeUpgrade","nameLocation":"6633:17:26","nodeType":"FunctionDefinition","overrides":{"id":7034,"nodeType":"OverrideSpecifier","overrides":[],"src":"6697:8:26"},"parameters":{"id":7031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7030,"mutability":"mutable","name":"newImplementation","nameLocation":"6659:17:26","nodeType":"VariableDeclaration","scope":7037,"src":"6651:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7029,"name":"address","nodeType":"ElementaryTypeName","src":"6651:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6650:27:26"},"returnParameters":{"id":7035,"nodeType":"ParameterList","parameters":[],"src":"6706:0:26"},"scope":7038,"src":"6624:84:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":7039,"src":"763:5947:26","usedErrors":[6423,6425]}],"src":"32:6679:26"},"id":26},"contracts/interfaces/IDataStorageCartridge.sol":{"ast":{"absolutePath":"contracts/interfaces/IDataStorageCartridge.sol","exportedSymbols":{"IDataStorageCartridge":[7065]},"id":7066,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7040,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"IDataStorageCartridge","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":7065,"linearizedBaseContracts":[7065],"name":"IDataStorageCartridge","nameLocation":"68:21:27","nodeType":"ContractDefinition","nodes":[{"functionSelector":"a95c372d","id":7045,"implemented":false,"kind":"function","modifiers":[],"name":"fetch","nameLocation":"105:5:27","nodeType":"FunctionDefinition","parameters":{"id":7041,"nodeType":"ParameterList","parameters":[],"src":"110:2:27"},"returnParameters":{"id":7044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7045,"src":"136:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7042,"name":"string","nodeType":"ElementaryTypeName","src":"136:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"135:15:27"},"scope":7065,"src":"96:55:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cf5ba53f","id":7052,"implemented":false,"kind":"function","modifiers":[],"name":"create","nameLocation":"166:6:27","nodeType":"FunctionDefinition","parameters":{"id":7048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7047,"mutability":"mutable","name":"args","nameLocation":"188:4:27","nodeType":"VariableDeclaration","scope":7052,"src":"173:19:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7046,"name":"bytes","nodeType":"ElementaryTypeName","src":"173:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"172:21:27"},"returnParameters":{"id":7051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7052,"src":"220:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7049,"name":"bool","nodeType":"ElementaryTypeName","src":"220:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"219:6:27"},"scope":7065,"src":"157:69:27","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"58edef4c","id":7059,"implemented":false,"kind":"function","modifiers":[],"name":"remove","nameLocation":"241:6:27","nodeType":"FunctionDefinition","parameters":{"id":7055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7054,"mutability":"mutable","name":"args","nameLocation":"263:4:27","nodeType":"VariableDeclaration","scope":7059,"src":"248:19:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7053,"name":"bytes","nodeType":"ElementaryTypeName","src":"248:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"247:21:27"},"returnParameters":{"id":7058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7059,"src":"295:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7056,"name":"bool","nodeType":"ElementaryTypeName","src":"295:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"294:6:27"},"scope":7065,"src":"232:69:27","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"57fc69d5","id":7064,"implemented":false,"kind":"function","modifiers":[],"name":"typeOf","nameLocation":"316:6:27","nodeType":"FunctionDefinition","parameters":{"id":7060,"nodeType":"ParameterList","parameters":[],"src":"322:2:27"},"returnParameters":{"id":7063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7064,"src":"348:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"348:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"347:9:27"},"scope":7065,"src":"307:50:27","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":7066,"src":"58:302:27","usedErrors":[]}],"src":"32:329:27"},"id":27}},"contracts":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709\",\"dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":912,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":915,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3099,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":3556,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":39,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"_roles","offset":0,"slot":"101","type":"t_mapping(t_bytes32,t_struct(RoleData)34_storage)"},{"astId":334,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)34_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)34_storage"},"t_struct(RoleData)34_storage":{"encoding":"inplace","label":"struct AccessControlUpgradeable.RoleData","members":[{"astId":31,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":33,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"IAccessControlUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":\"IAccessControlUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":912,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":915,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3099,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":419,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":539,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"IERC1967Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":\"IERC1967Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"IERC1822ProxiableUpgradeable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ERC1967UpgradeUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":912,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":915,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":894,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"IBeaconUpgradeable":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":912,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":915,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":912,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":915,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":894,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1209,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol":{"ERC721Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10F3 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xCEC JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xD34 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xD9A JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x57F JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x65 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xF16 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xF16 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317 DUP3 PUSH2 0x649 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33E DUP3 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3CC JUMPI POP PUSH2 0x3CC DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 PUSH2 0x6AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x457 CALLER DUP3 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x473 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 DUP4 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x59D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x66 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xF16 JUMP JUMPDEST PUSH2 0x599 CALLER DUP4 DUP4 PUSH2 0x8FC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5A7 CALLER DUP4 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x5CF DUP5 DUP5 DUP5 DUP5 PUSH2 0x9CA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5E0 DUP3 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F7 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x642 JUMP JUMPDEST DUP1 PUSH2 0x621 DUP5 PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x632 SWAP3 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x6E0 DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x725 DUP4 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x76C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x790 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x785 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AB DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x846 DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x68 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x67 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x9D5 DUP5 DUP5 DUP5 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x9E1 DUP5 DUP5 DUP5 DUP5 PUSH2 0xA90 JUMP JUMPDEST PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xA0A DUP4 PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA2A JUMPI PUSH2 0xA2A PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA54 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA5E JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xB86 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xAD4 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB0F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB0C SWAP2 DUP2 ADD SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB6C JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB3D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xB64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x1011 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x790 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xBD0 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xBFC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC1A JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xC32 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xC46 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xC58 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x274 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x642 DUP2 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCB7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC9F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xCD8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x642 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD50 DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7C DUP5 PUSH2 0xD18 JUMP JUMPDEST SWAP3 POP PUSH2 0xD8A PUSH1 0x20 DUP6 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x642 DUP3 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD1 DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE26 DUP6 PUSH2 0xD18 JUMP JUMPDEST SWAP4 POP PUSH2 0xE34 PUSH1 0x20 DUP7 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE7E JUMPI PUSH2 0xE7E PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xEA6 JUMPI PUSH2 0xEA6 PUSH2 0xDF1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xEBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEFF DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH2 0xF0D PUSH1 0x20 DUP5 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF2A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF4A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xFAF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xC9C JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xFC3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xC9C JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1096 SWAP1 DUP4 ADD DUP5 PUSH2 0xCC0 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x642 DUP2 PUSH2 0xC69 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP OR CREATE 0xA7 0x4E LOG0 0xF7 0x27 0x23 0xE6 DUP7 PUSH28 0x35694747AEADFC9F314568AC3FB08D4532AC65FA64736F6C63430008 SGT STOP CALLER ","sourceMap":"751:17105:9:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2141":{"entryPoint":null,"id":2141,"parameterSlots":4,"returnSlots":0},"@_approve_2007":{"entryPoint":1707,"id":2007,"parameterSlots":2,"returnSlots":0},"@_baseURI_1444":{"entryPoint":null,"id":1444,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_2128":{"entryPoint":null,"id":2128,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_2115":{"entryPoint":2704,"id":2115,"parameterSlots":4,"returnSlots":1},"@_exists_1676":{"entryPoint":null,"id":1676,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1710":{"entryPoint":1817,"id":1710,"parameterSlots":2,"returnSlots":1},"@_msgSender_3085":{"entryPoint":null,"id":3085,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1658":{"entryPoint":null,"id":1658,"parameterSlots":1,"returnSlots":1},"@_requireMinted_2053":{"entryPoint":1609,"id":2053,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_1645":{"entryPoint":2506,"id":1645,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_2039":{"entryPoint":2300,"id":2039,"parameterSlots":3,"returnSlots":0},"@_transfer_1983":{"entryPoint":1944,"id":1983,"parameterSlots":3,"returnSlots":0},"@approve_1487":{"entryPoint":819,"id":1487,"parameterSlots":2,"returnSlots":0},"@balanceOf_1348":{"entryPoint":1273,"id":1348,"parameterSlots":1,"returnSlots":1},"@getApproved_1505":{"entryPoint":780,"id":1505,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_1540":{"entryPoint":null,"id":1540,"parameterSlots":2,"returnSlots":1},"@isContract_2746":{"entryPoint":null,"id":2746,"parameterSlots":1,"returnSlots":1},"@log10_4272":{"entryPoint":2961,"id":4272,"parameterSlots":1,"returnSlots":1},"@name_1386":{"entryPoint":634,"id":1386,"parameterSlots":0,"returnSlots":1},"@ownerOf_1376":{"entryPoint":1177,"id":1376,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_1586":{"entryPoint":1150,"id":1586,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1616":{"entryPoint":1437,"id":1616,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1522":{"entryPoint":1422,"id":1522,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1324":{"entryPoint":552,"id":1324,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3551":{"entryPoint":null,"id":3551,"parameterSlots":1,"returnSlots":1},"@symbol_1396":{"entryPoint":1407,"id":1396,"parameterSlots":0,"returnSlots":1},"@toString_3343":{"entryPoint":2557,"id":3343,"parameterSlots":1,"returnSlots":1},"@tokenURI_1435":{"entryPoint":1493,"id":1435,"parameterSlots":1,"returnSlots":1},"@transferFrom_1567":{"entryPoint":1101,"id":1567,"parameterSlots":3,"returnSlots":0},"abi_decode_address":{"entryPoint":3352,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3482,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3811,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3422,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":3591,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":3509,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3380,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":3199,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":4256,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3327,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":3264,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3997,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4195,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3308,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3920,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4113,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4044,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3228,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3862,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3569,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":3177,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10132:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"58:87:28","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:28"},"nodeType":"YulFunctionCall","src":"125:12:28"},"nodeType":"YulExpressionStatement","src":"125:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"81:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"92:5:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"108:10:28","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"99:3:28"},"nodeType":"YulFunctionCall","src":"99:20:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"88:3:28"},"nodeType":"YulFunctionCall","src":"88:32:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"78:2:28"},"nodeType":"YulFunctionCall","src":"78:43:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"71:6:28"},"nodeType":"YulFunctionCall","src":"71:51:28"},"nodeType":"YulIf","src":"68:71:28"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47:5:28","type":""}],"src":"14:131:28"},{"body":{"nodeType":"YulBlock","src":"219:176:28","statements":[{"body":{"nodeType":"YulBlock","src":"265:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"274:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"277:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"267:6:28"},"nodeType":"YulFunctionCall","src":"267:12:28"},"nodeType":"YulExpressionStatement","src":"267:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"240:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"249:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"236:3:28"},"nodeType":"YulFunctionCall","src":"236:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"261:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"232:3:28"},"nodeType":"YulFunctionCall","src":"232:32:28"},"nodeType":"YulIf","src":"229:52:28"},{"nodeType":"YulVariableDeclaration","src":"290:36:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"316:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"303:12:28"},"nodeType":"YulFunctionCall","src":"303:23:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"294:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"359:5:28"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"335:23:28"},"nodeType":"YulFunctionCall","src":"335:30:28"},"nodeType":"YulExpressionStatement","src":"335:30:28"},{"nodeType":"YulAssignment","src":"374:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"384:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"374:6:28"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"185:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"196:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"208:6:28","type":""}],"src":"150:245:28"},{"body":{"nodeType":"YulBlock","src":"495:92:28","statements":[{"nodeType":"YulAssignment","src":"505:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"517:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"528:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"513:3:28"},"nodeType":"YulFunctionCall","src":"513:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"505:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"547:9:28"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"572:6:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"565:6:28"},"nodeType":"YulFunctionCall","src":"565:14:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"558:6:28"},"nodeType":"YulFunctionCall","src":"558:22:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"540:6:28"},"nodeType":"YulFunctionCall","src":"540:41:28"},"nodeType":"YulExpressionStatement","src":"540:41:28"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"464:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"475:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"486:4:28","type":""}],"src":"400:187:28"},{"body":{"nodeType":"YulBlock","src":"658:184:28","statements":[{"nodeType":"YulVariableDeclaration","src":"668:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"677:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"672:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"737:63:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"762:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"767:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"758:3:28"},"nodeType":"YulFunctionCall","src":"758:11:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"781:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"786:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:28"},"nodeType":"YulFunctionCall","src":"777:11:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"771:5:28"},"nodeType":"YulFunctionCall","src":"771:18:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"751:6:28"},"nodeType":"YulFunctionCall","src":"751:39:28"},"nodeType":"YulExpressionStatement","src":"751:39:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"698:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"701:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"695:2:28"},"nodeType":"YulFunctionCall","src":"695:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"709:19:28","statements":[{"nodeType":"YulAssignment","src":"711:15:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"720:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"723:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"716:3:28"},"nodeType":"YulFunctionCall","src":"716:10:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"711:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"691:3:28","statements":[]},"src":"687:113:28"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"820:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"825:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"816:3:28"},"nodeType":"YulFunctionCall","src":"816:16:28"},{"kind":"number","nodeType":"YulLiteral","src":"834:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:28"},"nodeType":"YulFunctionCall","src":"809:27:28"},"nodeType":"YulExpressionStatement","src":"809:27:28"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"636:3:28","type":""},{"name":"dst","nodeType":"YulTypedName","src":"641:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"646:6:28","type":""}],"src":"592:250:28"},{"body":{"nodeType":"YulBlock","src":"897:221:28","statements":[{"nodeType":"YulVariableDeclaration","src":"907:26:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"927:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"921:5:28"},"nodeType":"YulFunctionCall","src":"921:12:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"911:6:28","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"949:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"954:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"942:6:28"},"nodeType":"YulFunctionCall","src":"942:19:28"},"nodeType":"YulExpressionStatement","src":"942:19:28"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1009:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"1016:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1005:3:28"},"nodeType":"YulFunctionCall","src":"1005:16:28"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1027:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"1032:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:28"},"nodeType":"YulFunctionCall","src":"1023:14:28"},{"name":"length","nodeType":"YulIdentifier","src":"1039:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"970:34:28"},"nodeType":"YulFunctionCall","src":"970:76:28"},"nodeType":"YulExpressionStatement","src":"970:76:28"},{"nodeType":"YulAssignment","src":"1055:57:28","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1070:3:28"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1083:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"1091:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1079:3:28"},"nodeType":"YulFunctionCall","src":"1079:15:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1100:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1096:3:28"},"nodeType":"YulFunctionCall","src":"1096:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1075:3:28"},"nodeType":"YulFunctionCall","src":"1075:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1066:3:28"},"nodeType":"YulFunctionCall","src":"1066:39:28"},{"kind":"number","nodeType":"YulLiteral","src":"1107:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1062:3:28"},"nodeType":"YulFunctionCall","src":"1062:50:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1055:3:28"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"874:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"881:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"889:3:28","type":""}],"src":"847:271:28"},{"body":{"nodeType":"YulBlock","src":"1244:99:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1261:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1272:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1254:6:28"},"nodeType":"YulFunctionCall","src":"1254:21:28"},"nodeType":"YulExpressionStatement","src":"1254:21:28"},{"nodeType":"YulAssignment","src":"1284:53:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1310:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1322:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1333:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1318:3:28"},"nodeType":"YulFunctionCall","src":"1318:18:28"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1292:17:28"},"nodeType":"YulFunctionCall","src":"1292:45:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1284:4:28"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1213:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1224:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1235:4:28","type":""}],"src":"1123:220:28"},{"body":{"nodeType":"YulBlock","src":"1418:110:28","statements":[{"body":{"nodeType":"YulBlock","src":"1464:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1473:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1476:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1466:6:28"},"nodeType":"YulFunctionCall","src":"1466:12:28"},"nodeType":"YulExpressionStatement","src":"1466:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1439:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1448:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1435:3:28"},"nodeType":"YulFunctionCall","src":"1435:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"1460:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1431:3:28"},"nodeType":"YulFunctionCall","src":"1431:32:28"},"nodeType":"YulIf","src":"1428:52:28"},{"nodeType":"YulAssignment","src":"1489:33:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1499:12:28"},"nodeType":"YulFunctionCall","src":"1499:23:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1489:6:28"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1384:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1395:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1407:6:28","type":""}],"src":"1348:180:28"},{"body":{"nodeType":"YulBlock","src":"1634:102:28","statements":[{"nodeType":"YulAssignment","src":"1644:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1656:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1667:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1652:3:28"},"nodeType":"YulFunctionCall","src":"1652:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1644:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1686:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1701:6:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1717:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1722:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1713:3:28"},"nodeType":"YulFunctionCall","src":"1713:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"1726:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1709:3:28"},"nodeType":"YulFunctionCall","src":"1709:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1697:3:28"},"nodeType":"YulFunctionCall","src":"1697:32:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1679:6:28"},"nodeType":"YulFunctionCall","src":"1679:51:28"},"nodeType":"YulExpressionStatement","src":"1679:51:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1603:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1614:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1625:4:28","type":""}],"src":"1533:203:28"},{"body":{"nodeType":"YulBlock","src":"1790:124:28","statements":[{"nodeType":"YulAssignment","src":"1800:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1822:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1809:12:28"},"nodeType":"YulFunctionCall","src":"1809:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1800:5:28"}]},{"body":{"nodeType":"YulBlock","src":"1892:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1901:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1904:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1894:6:28"},"nodeType":"YulFunctionCall","src":"1894:12:28"},"nodeType":"YulExpressionStatement","src":"1894:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1851:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1862:5:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1877:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1882:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1873:3:28"},"nodeType":"YulFunctionCall","src":"1873:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"1886:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1869:3:28"},"nodeType":"YulFunctionCall","src":"1869:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1858:3:28"},"nodeType":"YulFunctionCall","src":"1858:31:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1848:2:28"},"nodeType":"YulFunctionCall","src":"1848:42:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1841:6:28"},"nodeType":"YulFunctionCall","src":"1841:50:28"},"nodeType":"YulIf","src":"1838:70:28"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1769:6:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1780:5:28","type":""}],"src":"1741:173:28"},{"body":{"nodeType":"YulBlock","src":"2006:167:28","statements":[{"body":{"nodeType":"YulBlock","src":"2052:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2061:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2064:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2054:6:28"},"nodeType":"YulFunctionCall","src":"2054:12:28"},"nodeType":"YulExpressionStatement","src":"2054:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2027:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2036:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2023:3:28"},"nodeType":"YulFunctionCall","src":"2023:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2048:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2019:3:28"},"nodeType":"YulFunctionCall","src":"2019:32:28"},"nodeType":"YulIf","src":"2016:52:28"},{"nodeType":"YulAssignment","src":"2077:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2106:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2087:18:28"},"nodeType":"YulFunctionCall","src":"2087:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2077:6:28"}]},{"nodeType":"YulAssignment","src":"2125:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2152:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2163:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2148:3:28"},"nodeType":"YulFunctionCall","src":"2148:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2135:12:28"},"nodeType":"YulFunctionCall","src":"2135:32:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2125:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1964:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1975:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1987:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1995:6:28","type":""}],"src":"1919:254:28"},{"body":{"nodeType":"YulBlock","src":"2282:224:28","statements":[{"body":{"nodeType":"YulBlock","src":"2328:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2337:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2340:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2330:6:28"},"nodeType":"YulFunctionCall","src":"2330:12:28"},"nodeType":"YulExpressionStatement","src":"2330:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2303:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2312:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2299:3:28"},"nodeType":"YulFunctionCall","src":"2299:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2324:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2295:3:28"},"nodeType":"YulFunctionCall","src":"2295:32:28"},"nodeType":"YulIf","src":"2292:52:28"},{"nodeType":"YulAssignment","src":"2353:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2382:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2363:18:28"},"nodeType":"YulFunctionCall","src":"2363:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2353:6:28"}]},{"nodeType":"YulAssignment","src":"2401:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2434:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2445:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2430:3:28"},"nodeType":"YulFunctionCall","src":"2430:18:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2411:18:28"},"nodeType":"YulFunctionCall","src":"2411:38:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2401:6:28"}]},{"nodeType":"YulAssignment","src":"2458:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2485:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2496:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2481:3:28"},"nodeType":"YulFunctionCall","src":"2481:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2468:12:28"},"nodeType":"YulFunctionCall","src":"2468:32:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2458:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2232:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2243:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2255:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2263:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2271:6:28","type":""}],"src":"2178:328:28"},{"body":{"nodeType":"YulBlock","src":"2581:116:28","statements":[{"body":{"nodeType":"YulBlock","src":"2627:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2636:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2639:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2629:6:28"},"nodeType":"YulFunctionCall","src":"2629:12:28"},"nodeType":"YulExpressionStatement","src":"2629:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2602:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2611:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2598:3:28"},"nodeType":"YulFunctionCall","src":"2598:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2623:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2594:3:28"},"nodeType":"YulFunctionCall","src":"2594:32:28"},"nodeType":"YulIf","src":"2591:52:28"},{"nodeType":"YulAssignment","src":"2652:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2662:18:28"},"nodeType":"YulFunctionCall","src":"2662:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2652:6:28"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2547:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2558:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2570:6:28","type":""}],"src":"2511:186:28"},{"body":{"nodeType":"YulBlock","src":"2803:76:28","statements":[{"nodeType":"YulAssignment","src":"2813:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2825:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2836:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2821:3:28"},"nodeType":"YulFunctionCall","src":"2821:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2813:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2855:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"2866:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2848:6:28"},"nodeType":"YulFunctionCall","src":"2848:25:28"},"nodeType":"YulExpressionStatement","src":"2848:25:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2772:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2783:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2794:4:28","type":""}],"src":"2702:177:28"},{"body":{"nodeType":"YulBlock","src":"2968:263:28","statements":[{"body":{"nodeType":"YulBlock","src":"3014:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3023:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3026:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3016:6:28"},"nodeType":"YulFunctionCall","src":"3016:12:28"},"nodeType":"YulExpressionStatement","src":"3016:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2989:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2998:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2985:3:28"},"nodeType":"YulFunctionCall","src":"2985:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"3010:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2981:3:28"},"nodeType":"YulFunctionCall","src":"2981:32:28"},"nodeType":"YulIf","src":"2978:52:28"},{"nodeType":"YulAssignment","src":"3039:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3068:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3049:18:28"},"nodeType":"YulFunctionCall","src":"3049:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3039:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"3087:45:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3117:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3128:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3113:3:28"},"nodeType":"YulFunctionCall","src":"3113:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3100:12:28"},"nodeType":"YulFunctionCall","src":"3100:32:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3091:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3185:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3194:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3197:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3187:6:28"},"nodeType":"YulFunctionCall","src":"3187:12:28"},"nodeType":"YulExpressionStatement","src":"3187:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3154:5:28"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3175:5:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3168:6:28"},"nodeType":"YulFunctionCall","src":"3168:13:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3161:6:28"},"nodeType":"YulFunctionCall","src":"3161:21:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3151:2:28"},"nodeType":"YulFunctionCall","src":"3151:32:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3144:6:28"},"nodeType":"YulFunctionCall","src":"3144:40:28"},"nodeType":"YulIf","src":"3141:60:28"},{"nodeType":"YulAssignment","src":"3210:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"3220:5:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3210:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2926:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2937:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2949:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2957:6:28","type":""}],"src":"2884:347:28"},{"body":{"nodeType":"YulBlock","src":"3268:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3285:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3292:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3297:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3288:3:28"},"nodeType":"YulFunctionCall","src":"3288:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3278:6:28"},"nodeType":"YulFunctionCall","src":"3278:31:28"},"nodeType":"YulExpressionStatement","src":"3278:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3325:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3328:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3318:6:28"},"nodeType":"YulFunctionCall","src":"3318:15:28"},"nodeType":"YulExpressionStatement","src":"3318:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3349:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3352:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3342:6:28"},"nodeType":"YulFunctionCall","src":"3342:15:28"},"nodeType":"YulExpressionStatement","src":"3342:15:28"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3236:127:28"},{"body":{"nodeType":"YulBlock","src":"3498:1008:28","statements":[{"body":{"nodeType":"YulBlock","src":"3545:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3554:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3557:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3547:6:28"},"nodeType":"YulFunctionCall","src":"3547:12:28"},"nodeType":"YulExpressionStatement","src":"3547:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3519:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"3528:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3515:3:28"},"nodeType":"YulFunctionCall","src":"3515:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"3540:3:28","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3511:3:28"},"nodeType":"YulFunctionCall","src":"3511:33:28"},"nodeType":"YulIf","src":"3508:53:28"},{"nodeType":"YulAssignment","src":"3570:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3599:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3580:18:28"},"nodeType":"YulFunctionCall","src":"3580:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3570:6:28"}]},{"nodeType":"YulAssignment","src":"3618:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3651:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3662:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3647:3:28"},"nodeType":"YulFunctionCall","src":"3647:18:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3628:18:28"},"nodeType":"YulFunctionCall","src":"3628:38:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3618:6:28"}]},{"nodeType":"YulAssignment","src":"3675:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3702:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3713:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3698:3:28"},"nodeType":"YulFunctionCall","src":"3698:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3685:12:28"},"nodeType":"YulFunctionCall","src":"3685:32:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3675:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"3726:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3757:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3768:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3753:3:28"},"nodeType":"YulFunctionCall","src":"3753:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3740:12:28"},"nodeType":"YulFunctionCall","src":"3740:32:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3730:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3781:28:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3791:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3785:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3836:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3845:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3848:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3838:6:28"},"nodeType":"YulFunctionCall","src":"3838:12:28"},"nodeType":"YulExpressionStatement","src":"3838:12:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3824:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"3832:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3821:2:28"},"nodeType":"YulFunctionCall","src":"3821:14:28"},"nodeType":"YulIf","src":"3818:34:28"},{"nodeType":"YulVariableDeclaration","src":"3861:32:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3875:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"3886:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3871:3:28"},"nodeType":"YulFunctionCall","src":"3871:22:28"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3865:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3941:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3950:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3953:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3943:6:28"},"nodeType":"YulFunctionCall","src":"3943:12:28"},"nodeType":"YulExpressionStatement","src":"3943:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3920:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"3924:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3916:3:28"},"nodeType":"YulFunctionCall","src":"3916:13:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3931:7:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3912:3:28"},"nodeType":"YulFunctionCall","src":"3912:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3905:6:28"},"nodeType":"YulFunctionCall","src":"3905:35:28"},"nodeType":"YulIf","src":"3902:55:28"},{"nodeType":"YulVariableDeclaration","src":"3966:26:28","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3989:2:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3976:12:28"},"nodeType":"YulFunctionCall","src":"3976:16:28"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3970:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4015:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4017:16:28"},"nodeType":"YulFunctionCall","src":"4017:18:28"},"nodeType":"YulExpressionStatement","src":"4017:18:28"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4007:2:28"},{"name":"_1","nodeType":"YulIdentifier","src":"4011:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4004:2:28"},"nodeType":"YulFunctionCall","src":"4004:10:28"},"nodeType":"YulIf","src":"4001:36:28"},{"nodeType":"YulVariableDeclaration","src":"4046:17:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4060:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4056:3:28"},"nodeType":"YulFunctionCall","src":"4056:7:28"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"4050:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4072:23:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4092:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4086:5:28"},"nodeType":"YulFunctionCall","src":"4086:9:28"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4076:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4104:71:28","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4126:6:28"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4150:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"4154:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4146:3:28"},"nodeType":"YulFunctionCall","src":"4146:13:28"},{"name":"_4","nodeType":"YulIdentifier","src":"4161:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4142:3:28"},"nodeType":"YulFunctionCall","src":"4142:22:28"},{"kind":"number","nodeType":"YulLiteral","src":"4166:2:28","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4138:3:28"},"nodeType":"YulFunctionCall","src":"4138:31:28"},{"name":"_4","nodeType":"YulIdentifier","src":"4171:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4134:3:28"},"nodeType":"YulFunctionCall","src":"4134:40:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4122:3:28"},"nodeType":"YulFunctionCall","src":"4122:53:28"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4108:10:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4234:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4236:16:28"},"nodeType":"YulFunctionCall","src":"4236:18:28"},"nodeType":"YulExpressionStatement","src":"4236:18:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4193:10:28"},{"name":"_1","nodeType":"YulIdentifier","src":"4205:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4190:2:28"},"nodeType":"YulFunctionCall","src":"4190:18:28"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4213:10:28"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4225:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4210:2:28"},"nodeType":"YulFunctionCall","src":"4210:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4187:2:28"},"nodeType":"YulFunctionCall","src":"4187:46:28"},"nodeType":"YulIf","src":"4184:72:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4272:2:28","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4276:10:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4265:6:28"},"nodeType":"YulFunctionCall","src":"4265:22:28"},"nodeType":"YulExpressionStatement","src":"4265:22:28"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4303:6:28"},{"name":"_3","nodeType":"YulIdentifier","src":"4311:2:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4296:6:28"},"nodeType":"YulFunctionCall","src":"4296:18:28"},"nodeType":"YulExpressionStatement","src":"4296:18:28"},{"body":{"nodeType":"YulBlock","src":"4360:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4369:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4372:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4362:6:28"},"nodeType":"YulFunctionCall","src":"4362:12:28"},"nodeType":"YulExpressionStatement","src":"4362:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4337:2:28"},{"name":"_3","nodeType":"YulIdentifier","src":"4341:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4333:3:28"},"nodeType":"YulFunctionCall","src":"4333:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"4346:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4329:3:28"},"nodeType":"YulFunctionCall","src":"4329:20:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4351:7:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4326:2:28"},"nodeType":"YulFunctionCall","src":"4326:33:28"},"nodeType":"YulIf","src":"4323:53:28"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4402:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4410:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4398:3:28"},"nodeType":"YulFunctionCall","src":"4398:15:28"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4419:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"4423:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4415:3:28"},"nodeType":"YulFunctionCall","src":"4415:11:28"},{"name":"_3","nodeType":"YulIdentifier","src":"4428:2:28"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4385:12:28"},"nodeType":"YulFunctionCall","src":"4385:46:28"},"nodeType":"YulExpressionStatement","src":"4385:46:28"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4455:6:28"},{"name":"_3","nodeType":"YulIdentifier","src":"4463:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4451:3:28"},"nodeType":"YulFunctionCall","src":"4451:15:28"},{"kind":"number","nodeType":"YulLiteral","src":"4468:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4447:3:28"},"nodeType":"YulFunctionCall","src":"4447:24:28"},{"kind":"number","nodeType":"YulLiteral","src":"4473:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4440:6:28"},"nodeType":"YulFunctionCall","src":"4440:35:28"},"nodeType":"YulExpressionStatement","src":"4440:35:28"},{"nodeType":"YulAssignment","src":"4484:16:28","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"4494:6:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4484:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3440:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3451:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3463:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3471:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3479:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3487:6:28","type":""}],"src":"3368:1138:28"},{"body":{"nodeType":"YulBlock","src":"4598:173:28","statements":[{"body":{"nodeType":"YulBlock","src":"4644:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4653:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4656:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4646:6:28"},"nodeType":"YulFunctionCall","src":"4646:12:28"},"nodeType":"YulExpressionStatement","src":"4646:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4619:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"4628:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4615:3:28"},"nodeType":"YulFunctionCall","src":"4615:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"4640:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4611:3:28"},"nodeType":"YulFunctionCall","src":"4611:32:28"},"nodeType":"YulIf","src":"4608:52:28"},{"nodeType":"YulAssignment","src":"4669:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4698:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4679:18:28"},"nodeType":"YulFunctionCall","src":"4679:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4669:6:28"}]},{"nodeType":"YulAssignment","src":"4717:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4750:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4761:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4746:3:28"},"nodeType":"YulFunctionCall","src":"4746:18:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4727:18:28"},"nodeType":"YulFunctionCall","src":"4727:38:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4717:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4556:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4567:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4579:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4587:6:28","type":""}],"src":"4511:260:28"},{"body":{"nodeType":"YulBlock","src":"4831:325:28","statements":[{"nodeType":"YulAssignment","src":"4841:22:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4855:1:28","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"4858:4:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4851:3:28"},"nodeType":"YulFunctionCall","src":"4851:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4841:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"4872:38:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4902:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"4908:1:28","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4898:3:28"},"nodeType":"YulFunctionCall","src":"4898:12:28"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4876:18:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4949:31:28","statements":[{"nodeType":"YulAssignment","src":"4951:27:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4965:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4973:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4961:3:28"},"nodeType":"YulFunctionCall","src":"4961:17:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4951:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4929:18:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4922:6:28"},"nodeType":"YulFunctionCall","src":"4922:26:28"},"nodeType":"YulIf","src":"4919:61:28"},{"body":{"nodeType":"YulBlock","src":"5039:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5060:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5067:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5072:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5063:3:28"},"nodeType":"YulFunctionCall","src":"5063:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5053:6:28"},"nodeType":"YulFunctionCall","src":"5053:31:28"},"nodeType":"YulExpressionStatement","src":"5053:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5104:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5107:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5097:6:28"},"nodeType":"YulFunctionCall","src":"5097:15:28"},"nodeType":"YulExpressionStatement","src":"5097:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5132:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5135:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5125:6:28"},"nodeType":"YulFunctionCall","src":"5125:15:28"},"nodeType":"YulExpressionStatement","src":"5125:15:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4995:18:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5018:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"5026:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5015:2:28"},"nodeType":"YulFunctionCall","src":"5015:14:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4992:2:28"},"nodeType":"YulFunctionCall","src":"4992:38:28"},"nodeType":"YulIf","src":"4989:161:28"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4811:4:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4820:6:28","type":""}],"src":"4776:380:28"},{"body":{"nodeType":"YulBlock","src":"5335:223:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5352:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5363:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5345:6:28"},"nodeType":"YulFunctionCall","src":"5345:21:28"},"nodeType":"YulExpressionStatement","src":"5345:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5386:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5397:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5382:3:28"},"nodeType":"YulFunctionCall","src":"5382:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"5402:2:28","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5375:6:28"},"nodeType":"YulFunctionCall","src":"5375:30:28"},"nodeType":"YulExpressionStatement","src":"5375:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5425:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5436:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5421:3:28"},"nodeType":"YulFunctionCall","src":"5421:18:28"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"5441:34:28","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5414:6:28"},"nodeType":"YulFunctionCall","src":"5414:62:28"},"nodeType":"YulExpressionStatement","src":"5414:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5496:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5507:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5492:3:28"},"nodeType":"YulFunctionCall","src":"5492:18:28"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"5512:3:28","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5485:6:28"},"nodeType":"YulFunctionCall","src":"5485:31:28"},"nodeType":"YulExpressionStatement","src":"5485:31:28"},{"nodeType":"YulAssignment","src":"5525:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5537:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5548:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5533:3:28"},"nodeType":"YulFunctionCall","src":"5533:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5525:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5312:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5326:4:28","type":""}],"src":"5161:397:28"},{"body":{"nodeType":"YulBlock","src":"5737:251:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5754:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5765:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5747:6:28"},"nodeType":"YulFunctionCall","src":"5747:21:28"},"nodeType":"YulExpressionStatement","src":"5747:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5788:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5799:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5784:3:28"},"nodeType":"YulFunctionCall","src":"5784:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"5804:2:28","type":"","value":"61"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5777:6:28"},"nodeType":"YulFunctionCall","src":"5777:30:28"},"nodeType":"YulExpressionStatement","src":"5777:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5827:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5838:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5823:3:28"},"nodeType":"YulFunctionCall","src":"5823:18:28"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"5843:34:28","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5816:6:28"},"nodeType":"YulFunctionCall","src":"5816:62:28"},"nodeType":"YulExpressionStatement","src":"5816:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5898:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5909:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5894:3:28"},"nodeType":"YulFunctionCall","src":"5894:18:28"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"5914:31:28","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5887:6:28"},"nodeType":"YulFunctionCall","src":"5887:59:28"},"nodeType":"YulExpressionStatement","src":"5887:59:28"},{"nodeType":"YulAssignment","src":"5955:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5967:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5978:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5963:3:28"},"nodeType":"YulFunctionCall","src":"5963:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5955:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5714:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5728:4:28","type":""}],"src":"5563:425:28"},{"body":{"nodeType":"YulBlock","src":"6167:235:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6184:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6195:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6177:6:28"},"nodeType":"YulFunctionCall","src":"6177:21:28"},"nodeType":"YulExpressionStatement","src":"6177:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6218:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6229:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6214:3:28"},"nodeType":"YulFunctionCall","src":"6214:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"6234:2:28","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6207:6:28"},"nodeType":"YulFunctionCall","src":"6207:30:28"},"nodeType":"YulExpressionStatement","src":"6207:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6257:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6268:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6253:3:28"},"nodeType":"YulFunctionCall","src":"6253:18:28"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"6273:34:28","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6246:6:28"},"nodeType":"YulFunctionCall","src":"6246:62:28"},"nodeType":"YulExpressionStatement","src":"6246:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6328:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6339:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6324:3:28"},"nodeType":"YulFunctionCall","src":"6324:18:28"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"6344:15:28","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6317:6:28"},"nodeType":"YulFunctionCall","src":"6317:43:28"},"nodeType":"YulExpressionStatement","src":"6317:43:28"},{"nodeType":"YulAssignment","src":"6369:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6381:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6392:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6377:3:28"},"nodeType":"YulFunctionCall","src":"6377:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6369:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6144:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6158:4:28","type":""}],"src":"5993:409:28"},{"body":{"nodeType":"YulBlock","src":"6581:174:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6598:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6609:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6591:6:28"},"nodeType":"YulFunctionCall","src":"6591:21:28"},"nodeType":"YulExpressionStatement","src":"6591:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6632:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6643:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6628:3:28"},"nodeType":"YulFunctionCall","src":"6628:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"6648:2:28","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6621:6:28"},"nodeType":"YulFunctionCall","src":"6621:30:28"},"nodeType":"YulExpressionStatement","src":"6621:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6671:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6682:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6667:3:28"},"nodeType":"YulFunctionCall","src":"6667:18:28"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"6687:26:28","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6660:6:28"},"nodeType":"YulFunctionCall","src":"6660:54:28"},"nodeType":"YulExpressionStatement","src":"6660:54:28"},{"nodeType":"YulAssignment","src":"6723:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6735:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6746:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6731:3:28"},"nodeType":"YulFunctionCall","src":"6731:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6723:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6558:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6572:4:28","type":""}],"src":"6407:348:28"},{"body":{"nodeType":"YulBlock","src":"6934:231:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6951:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6962:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6944:6:28"},"nodeType":"YulFunctionCall","src":"6944:21:28"},"nodeType":"YulExpressionStatement","src":"6944:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6985:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6996:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6981:3:28"},"nodeType":"YulFunctionCall","src":"6981:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"7001:2:28","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6974:6:28"},"nodeType":"YulFunctionCall","src":"6974:30:28"},"nodeType":"YulExpressionStatement","src":"6974:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7024:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7035:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7020:3:28"},"nodeType":"YulFunctionCall","src":"7020:18:28"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"7040:34:28","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7013:6:28"},"nodeType":"YulFunctionCall","src":"7013:62:28"},"nodeType":"YulExpressionStatement","src":"7013:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7095:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7106:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7091:3:28"},"nodeType":"YulFunctionCall","src":"7091:18:28"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"7111:11:28","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7084:6:28"},"nodeType":"YulFunctionCall","src":"7084:39:28"},"nodeType":"YulExpressionStatement","src":"7084:39:28"},{"nodeType":"YulAssignment","src":"7132:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7144:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7155:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7140:3:28"},"nodeType":"YulFunctionCall","src":"7140:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7132:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6911:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6925:4:28","type":""}],"src":"6760:405:28"},{"body":{"nodeType":"YulBlock","src":"7357:309:28","statements":[{"nodeType":"YulVariableDeclaration","src":"7367:27:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7387:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7381:5:28"},"nodeType":"YulFunctionCall","src":"7381:13:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7371:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7442:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"7450:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7438:3:28"},"nodeType":"YulFunctionCall","src":"7438:17:28"},{"name":"pos","nodeType":"YulIdentifier","src":"7457:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"7462:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7403:34:28"},"nodeType":"YulFunctionCall","src":"7403:66:28"},"nodeType":"YulExpressionStatement","src":"7403:66:28"},{"nodeType":"YulVariableDeclaration","src":"7478:29:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7495:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"7500:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7491:3:28"},"nodeType":"YulFunctionCall","src":"7491:16:28"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"7482:5:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7516:29:28","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7538:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7532:5:28"},"nodeType":"YulFunctionCall","src":"7532:13:28"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"7520:8:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7593:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"7601:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:28"},"nodeType":"YulFunctionCall","src":"7589:17:28"},{"name":"end_1","nodeType":"YulIdentifier","src":"7608:5:28"},{"name":"length_1","nodeType":"YulIdentifier","src":"7615:8:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7554:34:28"},"nodeType":"YulFunctionCall","src":"7554:70:28"},"nodeType":"YulExpressionStatement","src":"7554:70:28"},{"nodeType":"YulAssignment","src":"7633:27:28","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"7644:5:28"},{"name":"length_1","nodeType":"YulIdentifier","src":"7651:8:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7640:3:28"},"nodeType":"YulFunctionCall","src":"7640:20:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7633:3:28"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7325:3:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7330:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7338:6:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7349:3:28","type":""}],"src":"7170:496:28"},{"body":{"nodeType":"YulBlock","src":"7845:227:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7862:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7873:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7855:6:28"},"nodeType":"YulFunctionCall","src":"7855:21:28"},"nodeType":"YulExpressionStatement","src":"7855:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7896:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7907:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7892:3:28"},"nodeType":"YulFunctionCall","src":"7892:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"7912:2:28","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7885:6:28"},"nodeType":"YulFunctionCall","src":"7885:30:28"},"nodeType":"YulExpressionStatement","src":"7885:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7935:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7946:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7931:3:28"},"nodeType":"YulFunctionCall","src":"7931:18:28"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"7951:34:28","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7924:6:28"},"nodeType":"YulFunctionCall","src":"7924:62:28"},"nodeType":"YulExpressionStatement","src":"7924:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8006:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8017:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8002:3:28"},"nodeType":"YulFunctionCall","src":"8002:18:28"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"8022:7:28","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7995:6:28"},"nodeType":"YulFunctionCall","src":"7995:35:28"},"nodeType":"YulExpressionStatement","src":"7995:35:28"},{"nodeType":"YulAssignment","src":"8039:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8051:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8062:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8047:3:28"},"nodeType":"YulFunctionCall","src":"8047:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8039:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7822:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7836:4:28","type":""}],"src":"7671:401:28"},{"body":{"nodeType":"YulBlock","src":"8251:226:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8268:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8279:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8261:6:28"},"nodeType":"YulFunctionCall","src":"8261:21:28"},"nodeType":"YulExpressionStatement","src":"8261:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8302:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8313:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8298:3:28"},"nodeType":"YulFunctionCall","src":"8298:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"8318:2:28","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8291:6:28"},"nodeType":"YulFunctionCall","src":"8291:30:28"},"nodeType":"YulExpressionStatement","src":"8291:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8341:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8352:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8337:3:28"},"nodeType":"YulFunctionCall","src":"8337:18:28"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"8357:34:28","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8330:6:28"},"nodeType":"YulFunctionCall","src":"8330:62:28"},"nodeType":"YulExpressionStatement","src":"8330:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8412:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8423:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8408:3:28"},"nodeType":"YulFunctionCall","src":"8408:18:28"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"8428:6:28","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8401:6:28"},"nodeType":"YulFunctionCall","src":"8401:34:28"},"nodeType":"YulExpressionStatement","src":"8401:34:28"},{"nodeType":"YulAssignment","src":"8444:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8456:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8467:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8452:3:28"},"nodeType":"YulFunctionCall","src":"8452:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8444:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8228:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8242:4:28","type":""}],"src":"8077:400:28"},{"body":{"nodeType":"YulBlock","src":"8656:175:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8673:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8684:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8666:6:28"},"nodeType":"YulFunctionCall","src":"8666:21:28"},"nodeType":"YulExpressionStatement","src":"8666:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8707:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8718:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8703:3:28"},"nodeType":"YulFunctionCall","src":"8703:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"8723:2:28","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8696:6:28"},"nodeType":"YulFunctionCall","src":"8696:30:28"},"nodeType":"YulExpressionStatement","src":"8696:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8746:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8757:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8742:3:28"},"nodeType":"YulFunctionCall","src":"8742:18:28"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"8762:27:28","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8735:6:28"},"nodeType":"YulFunctionCall","src":"8735:55:28"},"nodeType":"YulExpressionStatement","src":"8735:55:28"},{"nodeType":"YulAssignment","src":"8799:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8811:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8822:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8807:3:28"},"nodeType":"YulFunctionCall","src":"8807:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8799:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8633:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8647:4:28","type":""}],"src":"8482:349:28"},{"body":{"nodeType":"YulBlock","src":"9010:240:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9027:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9038:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9020:6:28"},"nodeType":"YulFunctionCall","src":"9020:21:28"},"nodeType":"YulExpressionStatement","src":"9020:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9061:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9072:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9057:3:28"},"nodeType":"YulFunctionCall","src":"9057:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"9077:2:28","type":"","value":"50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9050:6:28"},"nodeType":"YulFunctionCall","src":"9050:30:28"},"nodeType":"YulExpressionStatement","src":"9050:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9100:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9111:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9096:3:28"},"nodeType":"YulFunctionCall","src":"9096:18:28"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"9116:34:28","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9089:6:28"},"nodeType":"YulFunctionCall","src":"9089:62:28"},"nodeType":"YulExpressionStatement","src":"9089:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9171:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9182:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9167:3:28"},"nodeType":"YulFunctionCall","src":"9167:18:28"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"9187:20:28","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9160:6:28"},"nodeType":"YulFunctionCall","src":"9160:48:28"},"nodeType":"YulExpressionStatement","src":"9160:48:28"},{"nodeType":"YulAssignment","src":"9217:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9229:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9240:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9225:3:28"},"nodeType":"YulFunctionCall","src":"9225:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9217:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8987:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9001:4:28","type":""}],"src":"8836:414:28"},{"body":{"nodeType":"YulBlock","src":"9287:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9304:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9311:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9316:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9307:3:28"},"nodeType":"YulFunctionCall","src":"9307:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9297:6:28"},"nodeType":"YulFunctionCall","src":"9297:31:28"},"nodeType":"YulExpressionStatement","src":"9297:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9344:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9347:4:28","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9337:6:28"},"nodeType":"YulFunctionCall","src":"9337:15:28"},"nodeType":"YulExpressionStatement","src":"9337:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9368:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9371:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9361:6:28"},"nodeType":"YulFunctionCall","src":"9361:15:28"},"nodeType":"YulExpressionStatement","src":"9361:15:28"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"9255:127:28"},{"body":{"nodeType":"YulBlock","src":"9590:286:28","statements":[{"nodeType":"YulVariableDeclaration","src":"9600:29:28","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9618:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9623:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9614:3:28"},"nodeType":"YulFunctionCall","src":"9614:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"9627:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9610:3:28"},"nodeType":"YulFunctionCall","src":"9610:19:28"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9604:2:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9645:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9660:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"9668:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9656:3:28"},"nodeType":"YulFunctionCall","src":"9656:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9638:6:28"},"nodeType":"YulFunctionCall","src":"9638:34:28"},"nodeType":"YulExpressionStatement","src":"9638:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9692:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9703:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9688:3:28"},"nodeType":"YulFunctionCall","src":"9688:18:28"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9712:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"9720:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9708:3:28"},"nodeType":"YulFunctionCall","src":"9708:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9681:6:28"},"nodeType":"YulFunctionCall","src":"9681:43:28"},"nodeType":"YulExpressionStatement","src":"9681:43:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9744:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9755:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9740:3:28"},"nodeType":"YulFunctionCall","src":"9740:18:28"},{"name":"value2","nodeType":"YulIdentifier","src":"9760:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9733:6:28"},"nodeType":"YulFunctionCall","src":"9733:34:28"},"nodeType":"YulExpressionStatement","src":"9733:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9787:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9798:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9783:3:28"},"nodeType":"YulFunctionCall","src":"9783:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"9803:3:28","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9776:6:28"},"nodeType":"YulFunctionCall","src":"9776:31:28"},"nodeType":"YulExpressionStatement","src":"9776:31:28"},{"nodeType":"YulAssignment","src":"9816:54:28","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9842:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9854:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9865:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9850:3:28"},"nodeType":"YulFunctionCall","src":"9850:19:28"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"9824:17:28"},"nodeType":"YulFunctionCall","src":"9824:46:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9816:4:28"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9535:9:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9546:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9554:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9562:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9570:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9581:4:28","type":""}],"src":"9387:489:28"},{"body":{"nodeType":"YulBlock","src":"9961:169:28","statements":[{"body":{"nodeType":"YulBlock","src":"10007:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10016:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10019:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10009:6:28"},"nodeType":"YulFunctionCall","src":"10009:12:28"},"nodeType":"YulExpressionStatement","src":"10009:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9982:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"9991:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9978:3:28"},"nodeType":"YulFunctionCall","src":"9978:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"10003:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9974:3:28"},"nodeType":"YulFunctionCall","src":"9974:32:28"},"nodeType":"YulIf","src":"9971:52:28"},{"nodeType":"YulVariableDeclaration","src":"10032:29:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10051:9:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10045:5:28"},"nodeType":"YulFunctionCall","src":"10045:16:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10036:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10094:5:28"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"10070:23:28"},"nodeType":"YulFunctionCall","src":"10070:30:28"},"nodeType":"YulExpressionStatement","src":"10070:30:28"},{"nodeType":"YulAssignment","src":"10109:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"10119:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10109:6:28"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9927:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9938:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9950:6:28","type":""}],"src":"9881:249:28"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xCEC JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xD34 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xD9A JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x57F JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x65 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xF16 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xF16 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317 DUP3 PUSH2 0x649 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33E DUP3 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3CC JUMPI POP PUSH2 0x3CC DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 PUSH2 0x6AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x457 CALLER DUP3 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x473 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 DUP4 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x59D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x66 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xF16 JUMP JUMPDEST PUSH2 0x599 CALLER DUP4 DUP4 PUSH2 0x8FC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5A7 CALLER DUP4 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x5CF DUP5 DUP5 DUP5 DUP5 PUSH2 0x9CA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5E0 DUP3 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F7 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x642 JUMP JUMPDEST DUP1 PUSH2 0x621 DUP5 PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x632 SWAP3 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x6E0 DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x725 DUP4 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x76C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x790 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x785 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AB DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x846 DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x68 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x67 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x9D5 DUP5 DUP5 DUP5 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x9E1 DUP5 DUP5 DUP5 DUP5 PUSH2 0xA90 JUMP JUMPDEST PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xA0A DUP4 PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA2A JUMPI PUSH2 0xA2A PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA54 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA5E JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xB86 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xAD4 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB0F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB0C SWAP2 DUP2 ADD SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB6C JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB3D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xB64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x1011 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x790 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xBD0 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xBFC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC1A JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xC32 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xC46 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xC58 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x274 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x642 DUP2 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCB7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC9F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xCD8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x642 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD50 DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7C DUP5 PUSH2 0xD18 JUMP JUMPDEST SWAP3 POP PUSH2 0xD8A PUSH1 0x20 DUP6 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x642 DUP3 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD1 DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE26 DUP6 PUSH2 0xD18 JUMP JUMPDEST SWAP4 POP PUSH2 0xE34 PUSH1 0x20 DUP7 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE7E JUMPI PUSH2 0xE7E PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xEA6 JUMPI PUSH2 0xEA6 PUSH2 0xDF1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xEBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEFF DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH2 0xF0D PUSH1 0x20 DUP5 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF2A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF4A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xFAF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xC9C JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xFC3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xC9C JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1096 SWAP1 DUP4 ADD DUP5 PUSH2 0xCC0 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x642 DUP2 PUSH2 0xC69 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP OR CREATE 0xA7 0x4E LOG0 0xF7 0x27 0x23 0xE6 DUP7 PUSH28 0x35694747AEADFC9F314568AC3FB08D4532AC65FA64736F6C63430008 SGT STOP CALLER ","sourceMap":"751:17105:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1987:344;;;;;;:::i;:::-;;:::i;:::-;;;565:14:28;;558:22;540:41;;528:2;513:18;1987:344:9;;;;;;;;2932:98;;;:::i;:::-;;;;;;;:::i;4407:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:28;;;1679:51;;1667:2;1652:18;4407:167:9;1533:203:28;3929:417:9;;;;;;:::i;:::-;;:::i;:::-;;5084:296;;;;;;:::i;:::-;;:::i;5446:149::-;;;;;;:::i;:::-;;:::i;2651:219::-;;;;;;:::i;:::-;;:::i;2390:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2848:25:28;;;2836:2;2821:18;2390:204:9;2702:177:28;3094:102:9;;;:::i;4641:153::-;;;;;;:::i;:::-;;:::i;5661:276::-;;;;;;:::i;:::-;;:::i;3262:::-;;;;;;:::i;:::-;;:::i;4860:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4980:25:9;;;4957:4;4980:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4860:162;1987:344;2111:4;-1:-1:-1;;;;;;2146:51:9;;-1:-1:-1;;;2146:51:9;;:126;;-1:-1:-1;;;;;;;2213:59:9;;-1:-1:-1;;;2213:59:9;2146:126;:178;;;-1:-1:-1;;;;;;;;;;1168:51:20;;;2288:36:9;2127:197;1987:344;-1:-1:-1;;1987:344:9:o;2932:98::-;2986:13;3018:5;3011:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2932:98;:::o;4407:167::-;4483:7;4502:23;4517:7;4502:14;:23::i;:::-;-1:-1:-1;4543:24:9;;;;:15;:24;;;;;;-1:-1:-1;;;;;4543:24:9;;4407:167::o;3929:417::-;4009:13;4025:34;4051:7;4025:25;:34::i;:::-;4009:50;;4083:5;-1:-1:-1;;;;;4077:11:9;:2;-1:-1:-1;;;;;4077:11:9;;4069:57;;;;-1:-1:-1;;;4069:57:9;;5363:2:28;4069:57:9;;;5345:21:28;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;-1:-1:-1;;;5492:18:28;;;5485:31;5533:19;;4069:57:9;;;;;;;;;929:10:16;-1:-1:-1;;;;;4158:21:9;;;;:62;;-1:-1:-1;4183:37:9;4200:5;929:10:16;4860:162:9;:::i;4183:37::-;4137:170;;;;-1:-1:-1;;;4137:170:9;;5765:2:28;4137:170:9;;;5747:21:28;5804:2;5784:18;;;5777:30;5843:34;5823:18;;;5816:62;5914:31;5894:18;;;5887:59;5963:19;;4137:170:9;5563:425:28;4137:170:9;4318:21;4327:2;4331:7;4318:8;:21::i;:::-;3999:347;3929:417;;:::o;5084:296::-;5243:41;929:10:16;5276:7:9;5243:18;:41::i;:::-;5235:99;;;;-1:-1:-1;;;5235:99:9;;;;;;;:::i;:::-;5345:28;5355:4;5361:2;5365:7;5345:9;:28::i;5446:149::-;5549:39;5566:4;5572:2;5576:7;5549:39;;;;;;;;;;;;:16;:39::i;2651:219::-;2723:7;7266:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7266:16:9;;2785:56;;;;-1:-1:-1;;;2785:56:9;;6609:2:28;2785:56:9;;;6591:21:28;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:28;;;6660:54;6731:18;;2785:56:9;6407:348:28;2390:204:9;2462:7;-1:-1:-1;;;;;2489:19:9;;2481:73;;;;-1:-1:-1;;;2481:73:9;;6962:2:28;2481:73:9;;;6944:21:28;7001:2;6981:18;;;6974:30;7040:34;7020:18;;;7013:62;-1:-1:-1;;;7091:18:28;;;7084:39;7140:19;;2481:73:9;6760:405:28;2481:73:9;-1:-1:-1;;;;;;2571:16:9;;;;;:9;:16;;;;;;;2390:204::o;3094:102::-;3150:13;3182:7;3175:14;;;;;:::i;4641:153::-;4735:52;929:10:16;4768:8:9;4778;4735:18;:52::i;:::-;4641:153;;:::o;5661:276::-;5791:41;929:10:16;5824:7:9;5791:18;:41::i;:::-;5783:99;;;;-1:-1:-1;;;5783:99:9;;;;;;;:::i;:::-;5892:38;5906:4;5912:2;5916:7;5925:4;5892:13;:38::i;:::-;5661:276;;;;:::o;3262:::-;3335:13;3360:23;3375:7;3360:14;:23::i;:::-;3394:21;3418:10;3856:9;;;;;;;;;-1:-1:-1;3856:9:9;;;3780:92;3418:10;3394:34;;3469:1;3451:7;3445:21;:25;:86;;;;;;;;;;;;;;;;;3497:7;3506:18;:7;:16;:18::i;:::-;3480:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3445:86;3438:93;3262:276;-1:-1:-1;;;3262:276:9:o;13778:133::-;7657:4;7266:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7266:16:9;13851:53;;;;-1:-1:-1;;;13851:53:9;;6609:2:28;13851:53:9;;;6591:21:28;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:28;;;6660:54;6731:18;;13851:53:9;6407:348:28;13851:53:9;13778:133;:::o;13099:182::-;13173:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;13173:29:9;-1:-1:-1;;;;;13173:29:9;;;;;;;;:24;;13226:34;13173:24;13226:25;:34::i;:::-;-1:-1:-1;;;;;13217:57:9;;;;;;;;;;;13099:182;;:::o;7876:272::-;7969:4;7985:13;8001:34;8027:7;8001:25;:34::i;:::-;7985:50;;8064:5;-1:-1:-1;;;;;8053:16:9;:7;-1:-1:-1;;;;;8053:16:9;;:52;;;-1:-1:-1;;;;;;4980:25:9;;;4957:4;4980:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;8073:32;8053:87;;;;8133:7;-1:-1:-1;;;;;8109:31:9;:20;8121:7;8109:11;:20::i;:::-;-1:-1:-1;;;;;8109:31:9;;8053:87;8045:96;7876:272;-1:-1:-1;;;;7876:272:9:o;11762:1225::-;11897:4;-1:-1:-1;;;;;11859:42:9;:34;11885:7;11859:25;:34::i;:::-;-1:-1:-1;;;;;11859:42:9;;11851:92;;;;-1:-1:-1;;;11851:92:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;11961:16:9;;11953:65;;;;-1:-1:-1;;;11953:65:9;;8279:2:28;11953:65:9;;;8261:21:28;8318:2;8298:18;;;8291:30;8357:34;8337:18;;;8330:62;-1:-1:-1;;;8408:18:28;;;8401:34;8452:19;;11953:65:9;8077:400:28;11953:65:9;12209:4;-1:-1:-1;;;;;12171:42:9;:34;12197:7;12171:25;:34::i;:::-;-1:-1:-1;;;;;12171:42:9;;12163:92;;;;-1:-1:-1;;;12163:92:9;;;;;;;:::i;:::-;12324:24;;;;:15;:24;;;;;;;;12317:31;;-1:-1:-1;;;;;;12317:31:9;;;;;;-1:-1:-1;;;;;12792:15:9;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12792:20:9;;;12826:13;;;;;;;;;:18;;12317:31;12826:18;;;12864:16;;;:7;:16;;;;;;:21;;;;;;;;;;12901:27;;12340:7;;12901:27;;;3999:347;3929:417;;:::o;13417:277::-;13537:8;-1:-1:-1;;;;;13528:17:9;:5;-1:-1:-1;;;;;13528:17:9;;13520:55;;;;-1:-1:-1;;;13520:55:9;;8684:2:28;13520:55:9;;;8666:21:28;8723:2;8703:18;;;8696:30;8762:27;8742:18;;;8735:55;8807:18;;13520:55:9;8482:349:28;13520:55:9;-1:-1:-1;;;;;13585:25:9;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13585:46:9;;;;;;;;;;13646:41;;540::28;;;13646::9;;513:18:28;13646:41:9;;;;;;;13417:277;;;:::o;6798:267::-;6910:28;6920:4;6926:2;6930:7;6910:9;:28::i;:::-;6956:47;6979:4;6985:2;6989:7;6998:4;6956:22;:47::i;:::-;6948:110;;;;-1:-1:-1;;;6948:110:9;;;;;;;:::i;480:707:19:-;536:13;585:14;602:28;624:5;602:21;:28::i;:::-;633:1;602:32;585:49;;648:20;682:6;671:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;671:18:19;-1:-1:-1;648:41:19;-1:-1:-1;809:28:19;;;825:2;809:28;864:280;-1:-1:-1;;895:5:19;-1:-1:-1;;;1029:2:19;1018:14;;1013:30;895:5;1000:44;1088:2;1079:11;;;-1:-1:-1;1108:21:19;864:280;1108:21;-1:-1:-1;1164:6:19;480:707;-1:-1:-1;;;480:707:19:o;14463:853:9:-;14612:4;-1:-1:-1;;;;;14632:13:9;;1713:19:15;:23;14628:682:9;;14667:82;;-1:-1:-1;;;14667:82:9;;-1:-1:-1;;;;;14667:47:9;;;;;:82;;929:10:16;;14729:4:9;;14735:7;;14744:4;;14667:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14667:82:9;;;;;;;;-1:-1:-1;;14667:82:9;;;;;;;;;;;;:::i;:::-;;;14663:595;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14927:6;:13;14944:1;14927:18;14923:321;;14969:60;;-1:-1:-1;;;14969:60:9;;;;;;;:::i;14923:321::-;15196:6;15190:13;15181:6;15177:2;15173:15;15166:38;14663:595;-1:-1:-1;;;;;;14799:62:9;-1:-1:-1;;;14799:62:9;;-1:-1:-1;14792:69:9;;14628:682;-1:-1:-1;15295:4:9;14463:853;;;;;;:::o;10150:916:22:-;10203:7;;-1:-1:-1;;;10278:17:22;;10274:103;;-1:-1:-1;;;10315:17:22;;;-1:-1:-1;10360:2:22;10350:12;10274:103;10403:8;10394:5;:17;10390:103;;10440:8;10431:17;;;-1:-1:-1;10476:2:22;10466:12;10390:103;10519:8;10510:5;:17;10506:103;;10556:8;10547:17;;;-1:-1:-1;10592:2:22;10582:12;10506:103;10635:7;10626:5;:16;10622:100;;10671:7;10662:16;;;-1:-1:-1;10706:1:22;10696:11;10622:100;10748:7;10739:5;:16;10735:100;;10784:7;10775:16;;;-1:-1:-1;10819:1:22;10809:11;10735:100;10861:7;10852:5;:16;10848:100;;10897:7;10888:16;;;-1:-1:-1;10932:1:22;10922:11;10848:100;10974:7;10965:5;:16;10961:66;;11011:1;11001:11;11053:6;10150:916;-1:-1:-1;;10150:916:22:o;14:131:28:-;-1:-1:-1;;;;;;88:32:28;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:28;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:28;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:28:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:28;;1348:180;-1:-1:-1;1348:180:28:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:28;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:28:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:186::-;2570:6;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2662:29;2681:9;2662:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:28;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;5993:409::-;6195:2;6177:21;;;6234:2;6214:18;;;6207:30;6273:34;6268:2;6253:18;;6246:62;-1:-1:-1;;;6339:2:28;6324:18;;6317:43;6392:3;6377:19;;5993:409::o;7170:496::-;7349:3;7387:6;7381:13;7403:66;7462:6;7457:3;7450:4;7442:6;7438:17;7403:66;:::i;:::-;7532:13;;7491:16;;;;7554:70;7532:13;7491:16;7601:4;7589:17;;7554:70;:::i;:::-;7640:20;;7170:496;-1:-1:-1;;;;7170:496:28:o;7671:401::-;7873:2;7855:21;;;7912:2;7892:18;;;7885:30;7951:34;7946:2;7931:18;;7924:62;-1:-1:-1;;;8017:2:28;8002:18;;7995:35;8062:3;8047:19;;7671:401::o;8836:414::-;9038:2;9020:21;;;9077:2;9057:18;;;9050:30;9116:34;9111:2;9096:18;;9089:62;-1:-1:-1;;;9182:2:28;9167:18;;9160:48;9240:3;9225:19;;8836:414::o;9387:489::-;-1:-1:-1;;;;;9656:15:28;;;9638:34;;9708:15;;9703:2;9688:18;;9681:43;9755:2;9740:18;;9733:34;;;9803:3;9798:2;9783:18;;9776:31;;;9581:4;;9824:46;;9850:19;;9842:6;9824:46;:::i;:::-;9816:54;9387:489;-1:-1:-1;;;;;;9387:489:28:o;9881:249::-;9950:6;10003:2;9991:9;9982:7;9978:23;9974:32;9971:52;;;10019:1;10016;10009:12;9971:52;10051:9;10045:16;10070:30;10094:5;10070:30;:::i"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":\"ERC721Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x09fa60c34ff9b067e5ad3af7719d490a12e0ca39132df6f870746eb0d32308ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acebbc807a56154030015434db278d821bca9a5316fbc3626b3f51f14403819a\",\"dweb:/ipfs/QmPacbrj1Hqzrw6b657EXuyMAazLFh1VAo9c66ZJNmfhR3\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":912,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":915,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3099,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":3556,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":1239,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable","label":"_name","offset":0,"slot":"101","type":"t_string_storage"},{"astId":1241,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable","label":"_symbol","offset":0,"slot":"102","type":"t_string_storage"},{"astId":1245,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable","label":"_owners","offset":0,"slot":"103","type":"t_mapping(t_uint256,t_address)"},{"astId":1249,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable","label":"_balances","offset":0,"slot":"104","type":"t_mapping(t_address,t_uint256)"},{"astId":1253,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable","label":"_tokenApprovals","offset":0,"slot":"105","type":"t_mapping(t_uint256,t_address)"},{"astId":1259,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable","label":"_operatorApprovals","offset":0,"slot":"106","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":2161,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable","label":"__gap","offset":0,"slot":"107","type":"t_array(t_uint256)44_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)44_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[44]","numberOfBytes":"1408"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol":{"IERC721ReceiverUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\":\"IERC721ReceiverUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol":{"IERC721Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":\"IERC721Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol":{"ERC721EnumerableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol\":\"ERC721EnumerableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x09fa60c34ff9b067e5ad3af7719d490a12e0ca39132df6f870746eb0d32308ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acebbc807a56154030015434db278d821bca9a5316fbc3626b3f51f14403819a\",\"dweb:/ipfs/QmPacbrj1Hqzrw6b657EXuyMAazLFh1VAo9c66ZJNmfhR3\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol\":{\"keccak256\":\"0x2c98457c4171d86094adf9a4fd8cd2402b7e3e309e961f07910a60a576dd100f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04d2ed5d0fc239e80a6b3f3044b423d4b5b1d1d5d9a08ba3454ea98b556760f9\",\"dweb:/ipfs/QmQQNic6ZcSqH6HZXLvm4woYbZ59er2szVQMdouwJPouhv\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721EnumerableUpgradeable.sol\":{\"keccak256\":\"0xf1870306db8391db9cf14b41be0da76857a88df0e5c623d2b2338fb30a3bd5ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://466149e3f8e96b81781b18dbb7b00a20d7172ddee599ef9d51b64c7e78ddfb1d\",\"dweb:/ipfs/QmTvLPy7ZF2Vm7JLSrknWm1Z2fyVaNhoXY2RFcRkmSKFAe\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":912,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":915,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3099,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":3556,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":1239,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable","label":"_name","offset":0,"slot":"101","type":"t_string_storage"},{"astId":1241,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable","label":"_symbol","offset":0,"slot":"102","type":"t_string_storage"},{"astId":1245,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable","label":"_owners","offset":0,"slot":"103","type":"t_mapping(t_uint256,t_address)"},{"astId":1249,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable","label":"_balances","offset":0,"slot":"104","type":"t_mapping(t_address,t_uint256)"},{"astId":1253,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable","label":"_tokenApprovals","offset":0,"slot":"105","type":"t_mapping(t_uint256,t_address)"},{"astId":1259,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable","label":"_operatorApprovals","offset":0,"slot":"106","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":2161,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable","label":"__gap","offset":0,"slot":"107","type":"t_array(t_uint256)44_storage"},{"astId":2326,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable","label":"_ownedTokens","offset":0,"slot":"151","type":"t_mapping(t_address,t_mapping(t_uint256,t_uint256))"},{"astId":2330,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable","label":"_ownedTokensIndex","offset":0,"slot":"152","type":"t_mapping(t_uint256,t_uint256)"},{"astId":2333,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable","label":"_allTokens","offset":0,"slot":"153","type":"t_array(t_uint256)dyn_storage"},{"astId":2337,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable","label":"_allTokensIndex","offset":0,"slot":"154","type":"t_mapping(t_uint256,t_uint256)"},{"astId":2669,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable","label":"__gap","offset":0,"slot":"155","type":"t_array(t_uint256)46_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)44_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[44]","numberOfBytes":"1408"},"t_array(t_uint256)46_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[46]","numberOfBytes":"1472"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_mapping(t_uint256,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721EnumerableUpgradeable.sol":{"IERC721EnumerableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721EnumerableUpgradeable.sol\":\"IERC721EnumerableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721EnumerableUpgradeable.sol\":{\"keccak256\":\"0xf1870306db8391db9cf14b41be0da76857a88df0e5c623d2b2338fb30a3bd5ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://466149e3f8e96b81781b18dbb7b00a20d7172ddee599ef9d51b64c7e78ddfb1d\",\"dweb:/ipfs/QmTvLPy7ZF2Vm7JLSrknWm1Z2fyVaNhoXY2RFcRkmSKFAe\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol":{"IERC721MetadataUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":\"IERC721MetadataUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c2b4e09038a93c465ca14ebc76b734be33d74eebb5af4ca36db46e6cba52808d64736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xB4 0xE0 SWAP1 CODESIZE 0xA9 EXTCODECOPY CHAINID 0x5C LOG1 0x4E 0xBC PUSH23 0xB734BE33D74EEBB5AF4CA36DB46E6CBA52808D64736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"194:9180:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c2b4e09038a93c465ca14ebc76b734be33d74eebb5af4ca36db46e6cba52808d64736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xB4 0xE0 SWAP1 CODESIZE 0xA9 EXTCODECOPY CHAINID 0x5C LOG1 0x4E 0xBC PUSH23 0xB734BE33D74EEBB5AF4CA36DB46E6CBA52808D64736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"194:9180:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":912,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":915,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3099,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"CountersUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220378958a1278a77b6a1bdb008a04b011d42e7bfdbc52888477dd7ea7c4480b61364736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY DUP10 PC LOG1 0x27 DUP11 PUSH24 0xB6A1BDB008A04B011D42E7BFDBC52888477DD7EA7C4480B6 SGT PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"424:982:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:982:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220378958a1278a77b6a1bdb008a04b011d42e7bfdbc52888477dd7ea7c4480b61364736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY DUP10 PC LOG1 0x27 DUP11 PUSH24 0xB6A1BDB008A04B011D42E7BFDBC52888477DD7EA7C4480B6 SGT PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"424:982:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":\"CountersUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"StorageSlotUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206d15c78c51d0895d5280fdb75a0c35fc5f82d2d01a0b996cd84838d0d7b5f77964736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x15C78C51D0895D5280FDB75A0C35 0xFC 0x5F DUP3 0xD2 0xD0 BYTE SIGNEXTEND SWAP10 PUSH13 0xD84838D0D7B5F77964736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ","sourceMap":"1420:2696:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1420:2696:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206d15c78c51d0895d5280fdb75a0c35fc5f82d2d01a0b996cd84838d0d7b5f77964736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x15C78C51D0895D5280FDB75A0C35 0xFC 0x5F DUP3 0xD2 0xD0 BYTE SIGNEXTEND SWAP10 PUSH13 0xD84838D0D7B5F77964736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ","sourceMap":"1420:2696:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"StringsUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220545b43c7c7759571d263e64d13e6c5f3ed77b4d4533c43632edef20f325f050a64736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD JUMPDEST NUMBER 0xC7 0xC7 PUSH22 0x9571D263E64D13E6C5F3ED77B4D4533C43632EDEF20F ORIGIN 0x5F SDIV EXP PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"242:2603:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;242:2603:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220545b43c7c7759571d263e64d13e6c5f3ed77b4d4533c43632edef20f325f050a64736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD JUMPDEST NUMBER 0xC7 0xC7 PUSH22 0x9571D263E64D13E6C5F3ED77B4D4533C43632EDEF20F ORIGIN 0x5F SDIV EXP PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"242:2603:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":\"StringsUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":912,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":915,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3556,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"IERC165Upgradeable":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"MathUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122059033cc204a1ba5180ce8c09567c282ee8665cbc78ca5a1f31460c7cbf0c7ac664736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE SUB EXTCODECOPY 0xC2 DIV LOG1 0xBA MLOAD DUP1 0xCE DUP13 MULMOD JUMP PUSH29 0x282EE8665CBC78CA5A1F31460C7CBF0C7AC664736F6C63430008130033 ","sourceMap":"202:12593:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12593:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122059033cc204a1ba5180ce8c09567c282ee8665cbc78ca5a1f31460c7cbf0c7ac664736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE SUB EXTCODECOPY 0xC2 DIV LOG1 0xBA MLOAD DUP1 0xCE DUP13 MULMOD JUMP PUSH29 0x282EE8665CBC78CA5A1F31460C7CBF0C7AC664736F6C63430008130033 ","sourceMap":"202:12593:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"SignedMathUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ff55d02c1b1e630a56b0ba6d494158a84016b9a65dbe52a330e86d5e253c812164736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT SSTORE 0xD0 0x2C SHL 0x1E PUSH4 0xA56B0BA PUSH14 0x494158A84016B9A65DBE52A330E8 PUSH14 0x5E253C812164736F6C6343000813 STOP CALLER ","sourceMap":"215:1058:23:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1058:23;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ff55d02c1b1e630a56b0ba6d494158a84016b9a65dbe52a330e86d5e253c812164736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT SSTORE 0xD0 0x2C SHL 0x1E PUSH4 0xA56B0BA PUSH14 0x494158A84016B9A65DBE52A330E8 PUSH14 0x5E253C812164736F6C6343000813 STOP CALLER ","sourceMap":"215:1058:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":\"SignedMathUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableMapUpgradeable.sol":{"EnumerableMapUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220180f0e36704076c5371a705a452597e608285baaaa0afc77acfce7a64370e11964736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xF 0xE CALLDATASIZE PUSH17 0x4076C5371A705A452597E608285BAAAA0A 0xFC PUSH24 0xACFCE7A64370E11964736F6C634300081300330000000000 ","sourceMap":"1640:19746:24:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1640:19746:24;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220180f0e36704076c5371a705a452597e608285baaaa0afc77acfce7a64370e11964736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xF 0xE CALLDATASIZE PUSH17 0x4076C5371A705A452597E608285BAAAA0A 0xFC PUSH24 0xACFCE7A64370E11964736F6C634300081300330000000000 ","sourceMap":"1640:19746:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing an enumerable variant of Solidity's https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`] type. Maps have the following properties: - Entries are added, removed, and checked for existence in constant time (O(1)). - Entries are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableMap for EnumerableMap.UintToAddressMap;     // Declare a set state variable     EnumerableMap.UintToAddressMap private myMap; } ``` The following map types are supported: - `uint256 -> address` (`UintToAddressMap`) since v3.0.0 - `address -> uint256` (`AddressToUintMap`) since v4.6.0 - `bytes32 -> bytes32` (`Bytes32ToBytes32Map`) since v4.6.0 - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0 - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0 [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an array of EnumerableMap. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableMapUpgradeable.sol\":\"EnumerableMapUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableMapUpgradeable.sol\":{\"keccak256\":\"0xdfa041144ad3a40abcdc6f97fd9e9b467448206722b0c9b9bd13f343891ae447\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f74d375967e813aacc9ab924ea9dd07a9dbf149b5c93a2cf968f89269fd942ca\",\"dweb:/ipfs/QmeNAiboecuK4CGjFkr1gqBmk3UbTdr1w41R31AaVtMJXf\"]},\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://876afb75e0d5615b07f70a0bc69ae7f098df8ef058251b5934b9d05c9c7e0d1f\",\"dweb:/ipfs/Qmay4sdoBJQtP2cC1EDyQ8GzNPJZzo3v5soRRy8rDNLfBJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"EnumerableSetUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fcac345dccef10619a37512f1866e35cb46901d7b2e7761707b0dd2f3e50e4f64736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xCA 0xC3 GASLIMIT 0xDC 0xCE CALL MOD NOT LOG3 PUSH22 0x12F1866E35CB46901D7B2E7761707B0DD2F3E50E4F64 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"1329:11641:25:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1329:11641:25;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fcac345dccef10619a37512f1866e35cb46901d7b2e7761707b0dd2f3e50e4f64736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xCA 0xC3 GASLIMIT 0xDC 0xCE CALL MOD NOT LOG3 PUSH22 0x12F1866E35CB46901D7B2E7761707B0DD2F3E50E4F64 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"1329:11641:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":\"EnumerableSetUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://876afb75e0d5615b07f70a0bc69ae7f098df8ef058251b5934b9d05c9c7e0d1f\",\"dweb:/ipfs/Qmay4sdoBJQtP2cC1EDyQ8GzNPJZzo3v5soRRy8rDNLfBJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/Profile.sol":{"Profile":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"StorageZeroAddress","type":"error"},{"inputs":[],"name":"TokenTransferProhibited","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"burn","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getUserProfile","outputs":[{"components":[{"internalType":"bytes32","name":"checksum","type":"bytes32"},{"internalType":"address","name":"issuedBy","type":"address"},{"internalType":"uint32","name":"issuedAt","type":"uint32"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"string","name":"metadata","type":"string"},{"internalType":"address","name":"storageAddress","type":"address"}],"internalType":"struct Profile.UserProfile","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"admin","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isAdmin","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"checksum","type":"bytes32"},{"internalType":"address","name":"issuedBy","type":"address"},{"internalType":"uint32","name":"issuedAt","type":"uint32"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"string","name":"metadata","type":"string"},{"internalType":"address","name":"storageAddress","type":"address"}],"internalType":"struct Profile.UserProfile","name":"profile","type":"tuple"},{"internalType":"string","name":"data","type":"string"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"setDataStorageProvider","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"}],"name":"tokenIdOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_6502":{"entryPoint":null,"id":6502,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_1055":{"entryPoint":38,"id":1055,"parameterSlots":0,"returnSlots":0},"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:608:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"188:229:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"205:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"216:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"198:6:28"},"nodeType":"YulFunctionCall","src":"198:21:28"},"nodeType":"YulExpressionStatement","src":"198:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"239:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"250:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"235:3:28"},"nodeType":"YulFunctionCall","src":"235:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"255:2:28","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"228:6:28"},"nodeType":"YulFunctionCall","src":"228:30:28"},"nodeType":"YulExpressionStatement","src":"228:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"278:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"289:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"274:3:28"},"nodeType":"YulFunctionCall","src":"274:18:28"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469","kind":"string","nodeType":"YulLiteral","src":"294:34:28","type":"","value":"Initializable: contract is initi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"267:6:28"},"nodeType":"YulFunctionCall","src":"267:62:28"},"nodeType":"YulExpressionStatement","src":"267:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"349:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"360:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"345:3:28"},"nodeType":"YulFunctionCall","src":"345:18:28"},{"hexValue":"616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"365:9:28","type":"","value":"alizing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"338:6:28"},"nodeType":"YulFunctionCall","src":"338:37:28"},"nodeType":"YulExpressionStatement","src":"338:37:28"},{"nodeType":"YulAssignment","src":"384:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"396:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"407:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"392:3:28"},"nodeType":"YulFunctionCall","src":"392:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"384:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"165:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"179:4:28","type":""}],"src":"14:403:28"},{"body":{"nodeType":"YulBlock","src":"519:87:28","statements":[{"nodeType":"YulAssignment","src":"529:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"541:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"552:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"537:3:28"},"nodeType":"YulFunctionCall","src":"537:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"529:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"571:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"586:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"594:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"582:3:28"},"nodeType":"YulFunctionCall","src":"582:17:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"564:6:28"},"nodeType":"YulFunctionCall","src":"564:36:28"},"nodeType":"YulExpressionStatement","src":"564:36:28"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"488:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"499:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"510:4:28","type":""}],"src":"422:184:28"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Initializable: contract is initi\")\n        mstore(add(headStart, 96), \"alizing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a0604052306080523480156200001557600080fd5b506200002062000026565b620000e7565b600054610100900460ff1615620000935760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000e5576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b60805161375e6200011f60003960008181610c2401528181610c6401528181611063015281816110a30152611132015261375e6000f3fe6080604052600436106101ee5760003560e01c806352d1902d1161010d57806395d89b41116100a0578063c87b56dd1161006f578063c87b56dd14610551578063d547741f14610571578063e985e9c514610591578063f2fde38b146105da578063faf4a931146105fa57600080fd5b806395d89b41146104e7578063a217fddf146104fc578063a22cb46514610511578063b88d4fde1461053157600080fd5b8063715018a6116100dc578063715018a614610474578063773c02d4146104895780638da5cb5b146104a957806391d14854146104c757600080fd5b806352d1902d146103ff5780635dc4fe7e146104145780636352211e1461043457806370a082311461045457600080fd5b8063248a9ca3116101855780633659cfe6116101545780633659cfe6146103c457806342842e0e1461031457806344df8e70146103e45780634f1ef286146103ec57600080fd5b8063248a9ca31461033457806324d7806c146103645780632f2ff15d1461038457806336568abe146103a457600080fd5b8063095ea7b3116101c1578063095ea7b3146102a457806318160ddd146102c45780631f52b76c146102e757806323b872dd1461031457600080fd5b806301ffc9a7146101f357806306fdde0314610228578063077f224a1461024a578063081812fc1461026c575b600080fd5b3480156101ff57600080fd5b5061021361020e366004612c99565b61060d565b60405190151581526020015b60405180910390f35b34801561023457600080fd5b5061023d61061e565b60405161021f9190612d06565b34801561025657600080fd5b5061026a610265366004612e01565b6106b0565b005b34801561027857600080fd5b5061028c610287366004612e75565b6107ee565b6040516001600160a01b03909116815260200161021f565b3480156102b057600080fd5b5061026a6102bf366004612e8e565b610815565b3480156102d057600080fd5b506102d961092a565b60405190815260200161021f565b3480156102f357600080fd5b50610307610302366004612e75565b61093c565b60405161021f9190612eb8565b34801561032057600080fd5b5061026a61032f366004612f3b565b610b38565b34801561034057600080fd5b506102d961034f366004612e75565b600090815260c9602052604090206001015490565b34801561037057600080fd5b5061021361037f366004612f77565b610b6b565b34801561039057600080fd5b5061026a61039f366004612f92565b610b77565b3480156103b057600080fd5b5061026a6103bf366004612f92565b610b9c565b3480156103d057600080fd5b5061026a6103df366004612f77565b610c1a565b61026a610cf9565b61026a6103fa366004612fbe565b611059565b34801561040b57600080fd5b506102d9611125565b34801561042057600080fd5b5061026a61042f366004612f77565b6111d8565b34801561044057600080fd5b5061028c61044f366004612e75565b611258565b34801561046057600080fd5b506102d961046f366004612f77565b611298565b34801561048057600080fd5b5061026a6112c3565b34801561049557600080fd5b506102d96104a4366004612f77565b6112d7565b3480156104b557600080fd5b506097546001600160a01b031661028c565b3480156104d357600080fd5b506102136104e2366004612f92565b611300565b3480156104f357600080fd5b5061023d61132b565b34801561050857600080fd5b506102d9600081565b34801561051d57600080fd5b5061026a61052c36600461301a565b61133a565b34801561053d57600080fd5b5061026a61054c366004613051565b611345565b34801561055d57600080fd5b5061023d61056c366004612e75565b611379565b34801561057d57600080fd5b5061026a61058c366004612f92565b6114b0565b34801561059d57600080fd5b506102136105ac3660046130b9565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b3480156105e657600080fd5b5061026a6105f5366004612f77565b6114d5565b6102d96106083660046130f7565b61154b565b600061061882611a35565b92915050565b60606065805461062d906131e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610659906131e0565b80156106a65780601f1061067b576101008083540402835291602001916106a6565b820191906000526020600020905b81548152906001019060200180831161068957829003601f168201915b5050505050905090565b600054610100900460ff16158080156106d05750600054600160ff909116105b806106ea5750303b1580156106ea575060005460ff166001145b6107525760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610775576000805461ff0019166101001790555b61077d611a5a565b610785611a89565b61078f8484611ab0565b610797611a89565b6107a2600083611ae1565b80156107e8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60006107f982611b67565b506000908152606960205260409020546001600160a01b031690565b600061082082611bc6565b9050806001600160a01b0316836001600160a01b03160361088d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610749565b336001600160a01b03821614806108a957506108a981336105ac565b61091b5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610749565b6109258383611c26565b505050565b6000610937610162611c94565b905090565b6040805160c081018252600080825260208083018290528284018290526060808401819052608084015260a083018290528351808501909452600f84526e125b9d985b1a59081d1bdad95b9259608a1b9084015290916109a19061015f908590611c9f565b6001600160a01b03818116600090815261016760209081526040808320815160c08101835281548152600182015495861693810193909352600160a01b90940463ffffffff169082015260028301805494955091939092916060840191610a07906131e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610a33906131e0565b8015610a805780601f10610a5557610100808354040283529160200191610a80565b820191906000526020600020905b815481529060010190602001808311610a6357829003601f168201915b50505050508152602001600382018054610a99906131e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac5906131e0565b8015610b125780601f10610ae757610100808354040283529160200191610b12565b820191906000526020600020905b815481529060010190602001808311610af557829003601f168201915b5050509183525050600491909101546001600160a01b0316602090910152949350505050565b6001600160a01b03831615610b6057604051633859b9e960e01b815260040160405180910390fd5b610925838383611cb4565b60006106188183611300565b600082815260c96020526040902060010154610b9281611ccf565b6109258383611ae1565b6001600160a01b0381163314610c0c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610749565b610c168282611cd9565b5050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610c625760405162461bcd60e51b81526004016107499061321a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610cab6000805160206136e2833981519152546001600160a01b031690565b6001600160a01b031614610cd15760405162461bcd60e51b815260040161074990613266565b610cda81611d40565b60408051600080825260208201909252610cf691839190611d48565b50565b610d0561016233611eb3565b610d5b5760405162461bcd60e51b815260206004820152602160248201527f546865206163636f756e7420646f6573206e6f7420686176652070726f66696c6044820152606560f81b6064820152608401610749565b6000610d6961016233611ec8565b9050610d7761016233611edd565b50610d8461015f82611ef2565b5033600090815261016760209081526040808320815160c0810183528154815260018201546001600160a01b03811694820194909452600160a01b90930463ffffffff1691830191909152600281018054606084019190610de4906131e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610e10906131e0565b8015610e5d5780601f10610e3257610100808354040283529160200191610e5d565b820191906000526020600020905b815481529060010190602001808311610e4057829003601f168201915b50505050508152602001600382018054610e76906131e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610ea2906131e0565b8015610eef5780601f10610ec457610100808354040283529160200191610eef565b820191906000526020600020905b815481529060010190602001808311610ed257829003601f168201915b5050509183525050600491909101546001600160a01b0390811660209283015260a083015181166000908152610166835260408082205481513381870152825180820390960186528083019283905263163b7bd360e21b9092529495509093909116916358edef4c91610f659190604401612d06565b6020604051808303816000875af1158015610f84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa891906132b2565b9050600181151514610fcc5760405162461bcd60e51b8152600401610749906132cf565b336000908152610167602052604081208181556001810180546001600160c01b031916905590610fff6002830182612c35565b61100d600383016000612c35565b5060040180546001600160a01b031916905560405183815233907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59060200160405180910390a2505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036110a15760405162461bcd60e51b81526004016107499061321a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166110ea6000805160206136e2833981519152546001600160a01b031690565b6001600160a01b0316146111105760405162461bcd60e51b815260040161074990613266565b61111982611d40565b610c1682826001611d48565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146111c55760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610749565b506000805160206136e283398151915290565b6111e0611efe565b6001600160a01b03811661122d5760405162461bcd60e51b815260206004820152601460248201527373746f72616765207a65726f206164647265737360601b6044820152606401610749565b6001600160a01b031660008181526101666020526040902080546001600160a01b0319169091179055565b6000610618826040518060400160405280600f81526020016e125b9d985b1a59081d1bdad95b9259608a1b81525061015f611c9f9092919063ffffffff16565b6000806112a761016284611f58565b509050806112b65760006112b9565b60015b60ff169392505050565b6112cb611efe565b6112d56000611f7f565b565b6000610618826040518060600160405280602c81526020016136b6602c91396101629190611fd1565b600091825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606066805461062d906131e0565b610c16338383611fe7565b6001600160a01b0384161561136d57604051633859b9e960e01b815260040160405180910390fd5b6107e8848484846120b5565b606060006113bb836040518060400160405280600f81526020016e151bdad95b881b9bdd08195e1a5cdd608a1b81525061015f611c9f9092919063ffffffff16565b6001600160a01b038116600090815261016760205260408120600301805492935090916113e7906131e0565b90501161140357604051806020016040528060008152506114a9565b6001600160a01b038116600090815261016760205260409020600301805461142a906131e0565b80601f0160208091040260200160405190810160405280929190818152602001828054611456906131e0565b80156114a35780601f10611478576101008083540402835291602001916114a3565b820191906000526020600020905b81548152906001019060200180831161148657829003601f168201915b50505050505b9392505050565b600082815260c960205260409020600101546114cb81611ccf565b6109258383611cd9565b6114dd611efe565b6001600160a01b0381166115425760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610749565b610cf681611f7f565b60a08201516000906001600160a01b03166115795760405163e57ffd0760e01b815260040160405180910390fd5b60a08301516001600160a01b0390811660009081526101666020526040902054166115e65760405162461bcd60e51b815260206004820152601760248201527f73746f72616765206e6f7420696e697469616c697a65640000000000000000006044820152606401610749565b60006115f461016233611eb3565b1561185a5761160561016233611ec8565b33600090815261016760209081526040808320815160c0810183528154815260018201546001600160a01b03811694820194909452600160a01b90930463ffffffff169183019190915260028101805494955092939192909160608401919061166d906131e0565b80601f0160208091040260200160405190810160405280929190818152602001828054611699906131e0565b80156116e65780601f106116bb576101008083540402835291602001916116e6565b820191906000526020600020905b8154815290600101906020018083116116c957829003601f168201915b505050505081526020016003820180546116ff906131e0565b80601f016020809104026020016040519081016040528092919081815260200182805461172b906131e0565b80156117785780601f1061174d57610100808354040283529160200191611778565b820191906000526020600020905b81548152906001019060200180831161175b57829003601f168201915b5050509183525050600491909101546001600160a01b0390811660209092019190915260a0878101519083015192935081169116146118545760a08101516001600160a01b03908116600090815261016660209081526040918290205482513381840152835180820390930183528084019384905263163b7bd360e21b909352909216916358edef4c9161180f9190604401612d06565b6020604051808303816000875af115801561182e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185291906132b2565b505b5061188b565b61186961016580546001019055565b506101655461187b610162338361212d565b5061188961015f8233612143565b505b336000908152610167602090815260409182902086518155908601516001820180549388015163ffffffff16600160a01b026001600160c01b03199094166001600160a01b03929092169190911792909217909155606085015185919060028201906118f7908261335f565b506080820151600382019061190c908261335f565b5060a09182015160049190910180546001600160a01b0319166001600160a01b039283161790559085015181166000908152610166602090815260408083205490519293169163cf5ba53f9161196691339189910161341f565b6040516020818303038152906040526040518263ffffffff1660e01b81526004016119919190612d06565b6020604051808303816000875af11580156119b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119d491906132b2565b90506001811515146119f85760405162461bcd60e51b8152600401610749906132cf565b60405182815233907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968859060200160405180910390a2509392505050565b60006001600160e01b03198216637965db0b60e01b1480610618575061061882612159565b600054610100900460ff16611a815760405162461bcd60e51b815260040161074990613443565b6112d56121a9565b600054610100900460ff166112d55760405162461bcd60e51b815260040161074990613443565b600054610100900460ff16611ad75760405162461bcd60e51b815260040161074990613443565b610c1682826121d9565b611aeb8282611300565b610c1657600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611b233390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000818152606760205260409020546001600160a01b0316610cf65760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610749565b6000818152606760205260408120546001600160a01b0316806106185760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610749565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611c5b82611bc6565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061061882612219565b6000611cac848484612224565b949350505050565b61092583838360405180602001604052806000815250611345565b610cf68133612270565b611ce38282611300565b15610c1657600082815260c9602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b610cf6611efe565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611d7b57610925836122c9565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611dd5575060408051601f3d908101601f19168201909252611dd29181019061348e565b60015b611e385760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610749565b6000805160206136e28339815191528114611ea75760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610749565b50610925838383612365565b60006114a9836001600160a01b03841661238a565b60006114a9836001600160a01b038416612396565b60006114a9836001600160a01b038416612406565b60006114a98383612406565b6097546001600160a01b031633146112d55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610749565b6000808080611f70866001600160a01b038716612423565b909450925050505b9250929050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611cac846001600160a01b03851684612224565b816001600160a01b0316836001600160a01b0316036120485760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610749565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6120bf338361245d565b6121215760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610749565b6107e8848484846124db565b6000611cac846001600160a01b0385168461250e565b6000611cac84846001600160a01b03851661250e565b60006001600160e01b031982166380ac58cd60e01b148061218a57506001600160e01b03198216635b5e139f60e01b145b8061061857506301ffc9a760e01b6001600160e01b0319831614610618565b600054610100900460ff166121d05760405162461bcd60e51b815260040161074990613443565b6112d533611f7f565b600054610100900460ff166122005760405162461bcd60e51b815260040161074990613443565b606561220c838261335f565b506066610925828261335f565b60006106188261252b565b6000828152600284016020526040812054801515806122485750612248858561238a565b83906122675760405162461bcd60e51b81526004016107499190612d06565b50949350505050565b61227a8282611300565b610c165761228781612535565b612292836020612547565b6040516020016122a39291906134a7565b60408051601f198184030181529082905262461bcd60e51b825261074991600401612d06565b6001600160a01b0381163b6123365760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610749565b6000805160206136e283398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61236e836126e3565b60008251118061237b5750805b15610925576107e88383612723565b60006114a98383612748565b6000818152600283016020526040812054801515806123ba57506123ba848461238a565b6114a95760405162461bcd60e51b815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b657900006044820152606401610749565b600081815260028301602052604081208190556114a98383612760565b600081815260028301602052604081205481908061245257612445858561238a565b925060009150611f789050565b600192509050611f78565b60008061246983611bc6565b9050806001600160a01b0316846001600160a01b031614806124b057506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b80611cac5750836001600160a01b03166124c9846107ee565b6001600160a01b031614949350505050565b6124e684848461276c565b6124f2848484846128d0565b6107e85760405162461bcd60e51b81526004016107499061351c565b60008281526002840160205260408120829055611cac84846129d1565b6000610618825490565b60606106186001600160a01b03831660145b60606000612556836002613584565b61256190600261359b565b67ffffffffffffffff81111561257957612579612d19565b6040519080825280601f01601f1916602001820160405280156125a3576020820181803683370190505b509050600360fc1b816000815181106125be576125be6135ae565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106125ed576125ed6135ae565b60200101906001600160f81b031916908160001a9053506000612611846002613584565b61261c90600161359b565b90505b6001811115612694576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110612650576126506135ae565b1a60f81b828281518110612666576126666135ae565b60200101906001600160f81b031916908160001a90535060049490941c9361268d816135c4565b905061261f565b5083156114a95760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610749565b6126ec816122c9565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606114a98383604051806060016040528060278152602001613702602791396129dd565b600081815260018301602052604081205415156114a9565b60006114a98383612a55565b826001600160a01b031661277f82611bc6565b6001600160a01b0316146127a55760405162461bcd60e51b8152600401610749906135db565b6001600160a01b0382166128075760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610749565b826001600160a01b031661281a82611bc6565b6001600160a01b0316146128405760405162461bcd60e51b8152600401610749906135db565b600081815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260688552838620805460001901905590871680865283862080546001019055868652606790945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006001600160a01b0384163b156129c657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612914903390899088908890600401613620565b6020604051808303816000875af192505050801561294f575060408051601f3d908101601f1916820190925261294c91810190613653565b60015b6129ac573d80801561297d576040519150601f19603f3d011682016040523d82523d6000602084013e612982565b606091505b5080516000036129a45760405162461bcd60e51b81526004016107499061351c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611cac565b506001949350505050565b60006114a98383612b48565b6060600080856001600160a01b0316856040516129fa9190613670565b600060405180830381855af49150503d8060008114612a35576040519150601f19603f3d011682016040523d82523d6000602084013e612a3a565b606091505b5091509150612a4b86838387612b97565b9695505050505050565b60008181526001830160205260408120548015612b3e576000612a7960018361368c565b8554909150600090612a8d9060019061368c565b9050818114612af2576000866000018281548110612aad57612aad6135ae565b9060005260206000200154905080876000018481548110612ad057612ad06135ae565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080612b0357612b0361369f565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610618565b6000915050610618565b6000818152600183016020526040812054612b8f57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610618565b506000610618565b60608315612c06578251600003612bff576001600160a01b0385163b612bff5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610749565b5081611cac565b611cac8383815115612c1b5781518083602001fd5b8060405162461bcd60e51b81526004016107499190612d06565b508054612c41906131e0565b6000825580601f10612c51575050565b601f016020900490600052602060002090810190610cf691905b80821115612c7f5760008155600101612c6b565b5090565b6001600160e01b031981168114610cf657600080fd5b600060208284031215612cab57600080fd5b81356114a981612c83565b60005b83811015612cd1578181015183820152602001612cb9565b50506000910152565b60008151808452612cf2816020860160208601612cb6565b601f01601f19169290920160200192915050565b6020815260006114a96020830184612cda565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715612d5257612d52612d19565b60405290565b600082601f830112612d6957600080fd5b813567ffffffffffffffff80821115612d8457612d84612d19565b604051601f8301601f19908116603f01168101908282118183101715612dac57612dac612d19565b81604052838152866020858801011115612dc557600080fd5b836020870160208301376000602085830101528094505050505092915050565b80356001600160a01b0381168114612dfc57600080fd5b919050565b600080600060608486031215612e1657600080fd5b833567ffffffffffffffff80821115612e2e57600080fd5b612e3a87838801612d58565b94506020860135915080821115612e5057600080fd5b50612e5d86828701612d58565b925050612e6c60408501612de5565b90509250925092565b600060208284031215612e8757600080fd5b5035919050565b60008060408385031215612ea157600080fd5b612eaa83612de5565b946020939093013593505050565b60208152815160208201526000602083015160018060a01b03808216604085015263ffffffff60408601511660608501526060850151915060c06080850152612f0460e0850183612cda565b91506080850151601f198584030160a0860152612f218382612cda565b9250508060a08601511660c0850152508091505092915050565b600080600060608486031215612f5057600080fd5b612f5984612de5565b9250612f6760208501612de5565b9150604084013590509250925092565b600060208284031215612f8957600080fd5b6114a982612de5565b60008060408385031215612fa557600080fd5b82359150612fb560208401612de5565b90509250929050565b60008060408385031215612fd157600080fd5b612fda83612de5565b9150602083013567ffffffffffffffff811115612ff657600080fd5b61300285828601612d58565b9150509250929050565b8015158114610cf657600080fd5b6000806040838503121561302d57600080fd5b61303683612de5565b915060208301356130468161300c565b809150509250929050565b6000806000806080858703121561306757600080fd5b61307085612de5565b935061307e60208601612de5565b925060408501359150606085013567ffffffffffffffff8111156130a157600080fd5b6130ad87828801612d58565b91505092959194509250565b600080604083850312156130cc57600080fd5b6130d583612de5565b9150612fb560208401612de5565b803563ffffffff81168114612dfc57600080fd5b6000806040838503121561310a57600080fd5b823567ffffffffffffffff8082111561312257600080fd5b9084019060c0828703121561313657600080fd5b61313e612d2f565b8235815261314e60208401612de5565b602082015261315f604084016130e3565b604082015260608301358281111561317657600080fd5b61318288828601612d58565b60608301525060808301358281111561319a57600080fd5b6131a688828601612d58565b6080830152506131b860a08401612de5565b60a0820152935060208501359150808211156131d357600080fd5b5061300285828601612d58565b600181811c908216806131f457607f821691505b60208210810361321457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6000602082840312156132c457600080fd5b81516114a98161300c565b60208082526022908201527f696e76616c696420726573706f6e73652066726f6d20646174612073746f7261604082015261676560f01b606082015260800190565b601f82111561092557600081815260208120601f850160051c810160208610156133385750805b601f850160051c820191505b8181101561335757828155600101613344565b505050505050565b815167ffffffffffffffff81111561337957613379612d19565b61338d8161338784546131e0565b84613311565b602080601f8311600181146133c257600084156133aa5750858301515b600019600386901b1c1916600185901b178555613357565b600085815260208120601f198616915b828110156133f1578886015182559484019460019091019084016133d2565b508582101561340f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0383168152604060208201819052600090611cac90830184612cda565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000602082840312156134a057600080fd5b5051919050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516134df816017850160208801612cb6565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351613510816028840160208801612cb6565b01602801949350505050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176106185761061861356e565b808201808211156106185761061861356e565b634e487b7160e01b600052603260045260246000fd5b6000816135d3576135d361356e565b506000190190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612a4b90830184612cda565b60006020828403121561366557600080fd5b81516114a981612c83565b60008251613682818460208701612cb6565b9190910192915050565b818103818111156106185761061861356e565b634e487b7160e01b600052603160045260246000fdfe5468652077616c6c657420646f6573206e6f742068617665206120636f6d706c657465642070726f66696c65360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122002ed85b0b5f4d68d5f1c3287a166bb2d66cfe8315286e1ed0becb03474b8e97964736f6c63430008130033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x20 PUSH3 0x26 JUMP JUMPDEST PUSH3 0xE7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF SWAP1 DUP2 AND EQ PUSH3 0xE5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x375E PUSH3 0x11F PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xC24 ADD MSTORE DUP2 DUP2 PUSH2 0xC64 ADD MSTORE DUP2 DUP2 PUSH2 0x1063 ADD MSTORE DUP2 DUP2 PUSH2 0x10A3 ADD MSTORE PUSH2 0x1132 ADD MSTORE PUSH2 0x375E PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52D1902D GT PUSH2 0x10D JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x551 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x571 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5DA JUMPI DUP1 PUSH4 0xFAF4A931 EQ PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4E7 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4FC JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0x773C02D4 EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x5DC4FE7E EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x3659CFE6 GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x44DF8E70 EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x3EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x1F52B76C EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x77F224A EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x26C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x2C99 JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH2 0x61E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E01 JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E75 JUMP JUMPDEST PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x2E8E JUMP JUMPDEST PUSH2 0x815 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x92A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E75 JUMP JUMPDEST PUSH2 0x93C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x2EB8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x2F3B JUMP JUMPDEST PUSH2 0xB38 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x2E75 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x2F77 JUMP JUMPDEST PUSH2 0xB6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x39F CALLDATASIZE PUSH1 0x4 PUSH2 0x2F92 JUMP JUMPDEST PUSH2 0xB77 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x3BF CALLDATASIZE PUSH1 0x4 PUSH2 0x2F92 JUMP JUMPDEST PUSH2 0xB9C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x3DF CALLDATASIZE PUSH1 0x4 PUSH2 0x2F77 JUMP JUMPDEST PUSH2 0xC1A JUMP JUMPDEST PUSH2 0x26A PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x2FBE JUMP JUMPDEST PUSH2 0x1059 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x1125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x42F CALLDATASIZE PUSH1 0x4 PUSH2 0x2F77 JUMP JUMPDEST PUSH2 0x11D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x44F CALLDATASIZE PUSH1 0x4 PUSH2 0x2E75 JUMP JUMPDEST PUSH2 0x1258 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x46F CALLDATASIZE PUSH1 0x4 PUSH2 0x2F77 JUMP JUMPDEST PUSH2 0x1298 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x12C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x4A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F77 JUMP JUMPDEST PUSH2 0x12D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x28C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x4E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F92 JUMP JUMPDEST PUSH2 0x1300 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH2 0x132B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x52C CALLDATASIZE PUSH1 0x4 PUSH2 0x301A JUMP JUMPDEST PUSH2 0x133A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x54C CALLDATASIZE PUSH1 0x4 PUSH2 0x3051 JUMP JUMPDEST PUSH2 0x1345 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH2 0x56C CALLDATASIZE PUSH1 0x4 PUSH2 0x2E75 JUMP JUMPDEST PUSH2 0x1379 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x58C CALLDATASIZE PUSH1 0x4 PUSH2 0x2F92 JUMP JUMPDEST PUSH2 0x14B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x5AC CALLDATASIZE PUSH1 0x4 PUSH2 0x30B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x5F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F77 JUMP JUMPDEST PUSH2 0x14D5 JUMP JUMPDEST PUSH2 0x2D9 PUSH2 0x608 CALLDATASIZE PUSH1 0x4 PUSH2 0x30F7 JUMP JUMPDEST PUSH2 0x154B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x618 DUP3 PUSH2 0x1A35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x65 DUP1 SLOAD PUSH2 0x62D SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x659 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x67B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x689 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x6D0 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x6EA JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6EA JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x775 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x77D PUSH2 0x1A5A JUMP JUMPDEST PUSH2 0x785 PUSH2 0x1A89 JUMP JUMPDEST PUSH2 0x78F DUP5 DUP5 PUSH2 0x1AB0 JUMP JUMPDEST PUSH2 0x797 PUSH2 0x1A89 JUMP JUMPDEST PUSH2 0x7A2 PUSH1 0x0 DUP4 PUSH2 0x1AE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F9 DUP3 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x820 DUP3 PUSH2 0x1BC6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x88D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x749 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x8A9 JUMPI POP PUSH2 0x8A9 DUP2 CALLER PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x91B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x749 JUMP JUMPDEST PUSH2 0x925 DUP4 DUP4 PUSH2 0x1C26 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x937 PUSH2 0x162 PUSH2 0x1C94 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP3 DUP5 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0xF DUP5 MSTORE PUSH15 0x125B9D985B1A59081D1BDAD95B9259 PUSH1 0x8A SHL SWAP1 DUP5 ADD MSTORE SWAP1 SWAP2 PUSH2 0x9A1 SWAP1 PUSH2 0x15F SWAP1 DUP6 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x167 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP6 DUP7 AND SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP5 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x2 DUP4 ADD DUP1 SLOAD SWAP5 SWAP6 POP SWAP2 SWAP4 SWAP1 SWAP3 SWAP2 PUSH1 0x60 DUP5 ADD SWAP2 PUSH2 0xA07 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA33 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA80 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA55 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA80 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA63 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0xA99 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAC5 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB12 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAE7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB12 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAF5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0xB60 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3859B9E9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x925 DUP4 DUP4 DUP4 PUSH2 0x1CB4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x618 DUP2 DUP4 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xB92 DUP2 PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0x925 DUP4 DUP4 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x749 JUMP JUMPDEST PUSH2 0xC16 DUP3 DUP3 PUSH2 0x1CD9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x321A JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCAB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36E2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x3266 JUMP JUMPDEST PUSH2 0xCDA DUP2 PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCF6 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xD05 PUSH2 0x162 CALLER PUSH2 0x1EB3 JUMP JUMPDEST PUSH2 0xD5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206163636F756E7420646F6573206E6F7420686176652070726F66696C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x749 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD69 PUSH2 0x162 CALLER PUSH2 0x1EC8 JUMP JUMPDEST SWAP1 POP PUSH2 0xD77 PUSH2 0x162 CALLER PUSH2 0x1EDD JUMP JUMPDEST POP PUSH2 0xD84 PUSH2 0x15F DUP3 PUSH2 0x1EF2 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x167 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP4 DIV PUSH4 0xFFFFFFFF AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 PUSH2 0xDE4 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE10 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE5D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE32 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE5D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE40 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0xE76 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEA2 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEEF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEC4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEEF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xED2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 SWAP3 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x166 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP2 MLOAD CALLER DUP2 DUP8 ADD MSTORE DUP3 MLOAD DUP1 DUP3 SUB SWAP1 SWAP7 ADD DUP7 MSTORE DUP1 DUP4 ADD SWAP3 DUP4 SWAP1 MSTORE PUSH4 0x163B7BD3 PUSH1 0xE2 SHL SWAP1 SWAP3 MSTORE SWAP5 SWAP6 POP SWAP1 SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH4 0x58EDEF4C SWAP2 PUSH2 0xF65 SWAP2 SWAP1 PUSH1 0x44 ADD PUSH2 0x2D06 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF84 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFA8 SWAP2 SWAP1 PUSH2 0x32B2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ PUSH2 0xFCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x32CF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x167 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 PUSH2 0xFFF PUSH1 0x2 DUP4 ADD DUP3 PUSH2 0x2C35 JUMP JUMPDEST PUSH2 0x100D PUSH1 0x3 DUP4 ADD PUSH1 0x0 PUSH2 0x2C35 JUMP JUMPDEST POP PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x10A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x321A JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10EA PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36E2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1110 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x3266 JUMP JUMPDEST PUSH2 0x1119 DUP3 PUSH2 0x1D40 JUMP JUMPDEST PUSH2 0xC16 DUP3 DUP3 PUSH1 0x1 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x11C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x749 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36E2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x11E0 PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x122D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x73746F72616765207A65726F2061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x749 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x166 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x618 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH15 0x125B9D985B1A59081D1BDAD95B9259 PUSH1 0x8A SHL DUP2 MSTORE POP PUSH2 0x15F PUSH2 0x1C9F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x12A7 PUSH2 0x162 DUP5 PUSH2 0x1F58 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x12B6 JUMPI PUSH1 0x0 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x12CB PUSH2 0x1EFE JUMP JUMPDEST PUSH2 0x12D5 PUSH1 0x0 PUSH2 0x1F7F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x618 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36B6 PUSH1 0x2C SWAP2 CODECOPY PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x1FD1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xC9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x66 DUP1 SLOAD PUSH2 0x62D SWAP1 PUSH2 0x31E0 JUMP JUMPDEST PUSH2 0xC16 CALLER DUP4 DUP4 PUSH2 0x1FE7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x136D JUMPI PUSH1 0x40 MLOAD PUSH4 0x3859B9E9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7E8 DUP5 DUP5 DUP5 DUP5 PUSH2 0x20B5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x13BB DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH15 0x151BDAD95B881B9BDD08195E1A5CDD PUSH1 0x8A SHL DUP2 MSTORE POP PUSH2 0x15F PUSH2 0x1C9F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x167 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH2 0x13E7 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x1403 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x167 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x142A SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1456 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1478 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1486 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x14CB DUP2 PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0x925 DUP4 DUP4 PUSH2 0x1CD9 JUMP JUMPDEST PUSH2 0x14DD PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1542 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x749 JUMP JUMPDEST PUSH2 0xCF6 DUP2 PUSH2 0x1F7F JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1579 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE57FFD07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x166 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x15E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73746F72616765206E6F7420696E697469616C697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x749 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F4 PUSH2 0x162 CALLER PUSH2 0x1EB3 JUMP JUMPDEST ISZERO PUSH2 0x185A JUMPI PUSH2 0x1605 PUSH2 0x162 CALLER PUSH2 0x1EC8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x167 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP4 DIV PUSH4 0xFFFFFFFF AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 ADD DUP1 SLOAD SWAP5 SWAP6 POP SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 PUSH2 0x166D SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1699 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16E6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16BB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16E6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16C9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0x16FF SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x172B SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1778 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x174D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1778 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x175B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP8 DUP2 ADD MLOAD SWAP1 DUP4 ADD MLOAD SWAP3 SWAP4 POP DUP2 AND SWAP2 AND EQ PUSH2 0x1854 JUMPI PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x166 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD CALLER DUP2 DUP5 ADD MSTORE DUP4 MLOAD DUP1 DUP3 SUB SWAP1 SWAP4 ADD DUP4 MSTORE DUP1 DUP5 ADD SWAP4 DUP5 SWAP1 MSTORE PUSH4 0x163B7BD3 PUSH1 0xE2 SHL SWAP1 SWAP4 MSTORE SWAP1 SWAP3 AND SWAP2 PUSH4 0x58EDEF4C SWAP2 PUSH2 0x180F SWAP2 SWAP1 PUSH1 0x44 ADD PUSH2 0x2D06 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x182E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1852 SWAP2 SWAP1 PUSH2 0x32B2 JUMP JUMPDEST POP JUMPDEST POP PUSH2 0x188B JUMP JUMPDEST PUSH2 0x1869 PUSH2 0x165 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST POP PUSH2 0x165 SLOAD PUSH2 0x187B PUSH2 0x162 CALLER DUP4 PUSH2 0x212D JUMP JUMPDEST POP PUSH2 0x1889 PUSH2 0x15F DUP3 CALLER PUSH2 0x2143 JUMP JUMPDEST POP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x167 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP7 MLOAD DUP2 SSTORE SWAP1 DUP7 ADD MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP4 DUP9 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP6 ADD MLOAD DUP6 SWAP2 SWAP1 PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x18F7 SWAP1 DUP3 PUSH2 0x335F JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SWAP1 PUSH2 0x190C SWAP1 DUP3 PUSH2 0x335F JUMP JUMPDEST POP PUSH1 0xA0 SWAP2 DUP3 ADD MLOAD PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE SWAP1 DUP6 ADD MLOAD DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x166 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH4 0xCF5BA53F SWAP2 PUSH2 0x1966 SWAP2 CALLER SWAP2 DUP10 SWAP2 ADD PUSH2 0x341F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1991 SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19D4 SWAP2 SWAP1 PUSH2 0x32B2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ PUSH2 0x19F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x32CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x618 JUMPI POP PUSH2 0x618 DUP3 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A81 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x3443 JUMP JUMPDEST PUSH2 0x12D5 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x12D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x3443 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1AD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x3443 JUMP JUMPDEST PUSH2 0xC16 DUP3 DUP3 PUSH2 0x21D9 JUMP JUMPDEST PUSH2 0x1AEB DUP3 DUP3 PUSH2 0x1300 JUMP JUMPDEST PUSH2 0xC16 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1B23 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x749 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x749 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x1C5B DUP3 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x618 DUP3 PUSH2 0x2219 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CAC DUP5 DUP5 DUP5 PUSH2 0x2224 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x925 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1345 JUMP JUMPDEST PUSH2 0xCF6 DUP2 CALLER PUSH2 0x2270 JUMP JUMPDEST PUSH2 0x1CE3 DUP3 DUP3 PUSH2 0x1300 JUMP JUMPDEST ISZERO PUSH2 0xC16 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0xCF6 PUSH2 0x1EFE JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1D7B JUMPI PUSH2 0x925 DUP4 PUSH2 0x22C9 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1DD5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1DD2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x348E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1E38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x749 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36E2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x1EA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x749 JUMP JUMPDEST POP PUSH2 0x925 DUP4 DUP4 DUP4 PUSH2 0x2365 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A9 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x238A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A9 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2396 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A9 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2406 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A9 DUP4 DUP4 PUSH2 0x2406 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x749 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x1F70 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x2423 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CAC DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 PUSH2 0x2224 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x2048 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x749 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x20BF CALLER DUP4 PUSH2 0x245D JUMP JUMPDEST PUSH2 0x2121 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x749 JUMP JUMPDEST PUSH2 0x7E8 DUP5 DUP5 DUP5 DUP5 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CAC DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 PUSH2 0x250E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CAC DUP5 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x250E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x218A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x618 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x618 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x21D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x3443 JUMP JUMPDEST PUSH2 0x12D5 CALLER PUSH2 0x1F7F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2200 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x3443 JUMP JUMPDEST PUSH1 0x65 PUSH2 0x220C DUP4 DUP3 PUSH2 0x335F JUMP JUMPDEST POP PUSH1 0x66 PUSH2 0x925 DUP3 DUP3 PUSH2 0x335F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x618 DUP3 PUSH2 0x252B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x2248 JUMPI POP PUSH2 0x2248 DUP6 DUP6 PUSH2 0x238A JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x2267 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x227A DUP3 DUP3 PUSH2 0x1300 JUMP JUMPDEST PUSH2 0xC16 JUMPI PUSH2 0x2287 DUP2 PUSH2 0x2535 JUMP JUMPDEST PUSH2 0x2292 DUP4 PUSH1 0x20 PUSH2 0x2547 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x22A3 SWAP3 SWAP2 SWAP1 PUSH2 0x34A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x749 SWAP2 PUSH1 0x4 ADD PUSH2 0x2D06 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x2336 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x749 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36E2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x236E DUP4 PUSH2 0x26E3 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x237B JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x925 JUMPI PUSH2 0x7E8 DUP4 DUP4 PUSH2 0x2723 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A9 DUP4 DUP4 PUSH2 0x2748 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x23BA JUMPI POP PUSH2 0x23BA DUP5 DUP5 PUSH2 0x238A JUMP JUMPDEST PUSH2 0x14A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E756D657261626C654D61703A206E6F6E6578697374656E74206B65790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x749 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x14A9 DUP4 DUP4 PUSH2 0x2760 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP1 PUSH2 0x2452 JUMPI PUSH2 0x2445 DUP6 DUP6 PUSH2 0x238A JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0x1F78 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SWAP3 POP SWAP1 POP PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2469 DUP4 PUSH2 0x1BC6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x24B0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x1CAC JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24C9 DUP5 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x24E6 DUP5 DUP5 DUP5 PUSH2 0x276C JUMP JUMPDEST PUSH2 0x24F2 DUP5 DUP5 DUP5 DUP5 PUSH2 0x28D0 JUMP JUMPDEST PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x351C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH2 0x1CAC DUP5 DUP5 PUSH2 0x29D1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x618 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x618 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2556 DUP4 PUSH1 0x2 PUSH2 0x3584 JUMP JUMPDEST PUSH2 0x2561 SWAP1 PUSH1 0x2 PUSH2 0x359B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2579 JUMPI PUSH2 0x2579 PUSH2 0x2D19 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x25A3 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x25BE JUMPI PUSH2 0x25BE PUSH2 0x35AE JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x25ED JUMPI PUSH2 0x25ED PUSH2 0x35AE JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x2611 DUP5 PUSH1 0x2 PUSH2 0x3584 JUMP JUMPDEST PUSH2 0x261C SWAP1 PUSH1 0x1 PUSH2 0x359B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2694 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x2650 JUMPI PUSH2 0x2650 PUSH2 0x35AE JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2666 JUMPI PUSH2 0x2666 PUSH2 0x35AE JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x268D DUP2 PUSH2 0x35C4 JUMP JUMPDEST SWAP1 POP PUSH2 0x261F JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x14A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x749 JUMP JUMPDEST PUSH2 0x26EC DUP2 PUSH2 0x22C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x14A9 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3702 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x29DD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A9 DUP4 DUP4 PUSH2 0x2A55 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x277F DUP3 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x27A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x35DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2807 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x749 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x281A DUP3 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2840 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x35DB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x68 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x67 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x29C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x2914 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x294F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x294C SWAP2 DUP2 ADD SWAP1 PUSH2 0x3653 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x29AC JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x297D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2982 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x29A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x351C JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x1CAC JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A9 DUP4 DUP4 PUSH2 0x2B48 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x29FA SWAP2 SWAP1 PUSH2 0x3670 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2A35 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2A3A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2A4B DUP7 DUP4 DUP4 DUP8 PUSH2 0x2B97 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x2B3E JUMPI PUSH1 0x0 PUSH2 0x2A79 PUSH1 0x1 DUP4 PUSH2 0x368C JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2A8D SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x368C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x2AF2 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2AAD JUMPI PUSH2 0x2AAD PUSH2 0x35AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2AD0 JUMPI PUSH2 0x2AD0 PUSH2 0x35AE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x2B03 JUMPI PUSH2 0x2B03 PUSH2 0x369F JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x618 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x618 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x2B8F JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x618 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x618 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2C06 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x2BFF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x2BFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x749 JUMP JUMPDEST POP DUP2 PUSH2 0x1CAC JUMP JUMPDEST PUSH2 0x1CAC DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x2C1B JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x2C41 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2C51 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xCF6 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2C7F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2C6B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xCF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14A9 DUP2 PUSH2 0x2C83 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2CD1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2CB9 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2CF2 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2CB6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x14A9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2CDA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2D52 JUMPI PUSH2 0x2D52 PUSH2 0x2D19 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2D84 JUMPI PUSH2 0x2D84 PUSH2 0x2D19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2DAC JUMPI PUSH2 0x2DAC PUSH2 0x2D19 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x2DC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2DFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2E16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2E2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E3A DUP8 DUP4 DUP9 ADD PUSH2 0x2D58 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2E50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E5D DUP7 DUP3 DUP8 ADD PUSH2 0x2D58 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x2E6C PUSH1 0x40 DUP6 ADD PUSH2 0x2DE5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2EAA DUP4 PUSH2 0x2DE5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF PUSH1 0x40 DUP7 ADD MLOAD AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x60 DUP6 ADD MLOAD SWAP2 POP PUSH1 0xC0 PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x2F04 PUSH1 0xE0 DUP6 ADD DUP4 PUSH2 0x2CDA JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x1F NOT DUP6 DUP5 SUB ADD PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x2F21 DUP4 DUP3 PUSH2 0x2CDA JUMP JUMPDEST SWAP3 POP POP DUP1 PUSH1 0xA0 DUP7 ADD MLOAD AND PUSH1 0xC0 DUP6 ADD MSTORE POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2F50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F59 DUP5 PUSH2 0x2DE5 JUMP JUMPDEST SWAP3 POP PUSH2 0x2F67 PUSH1 0x20 DUP6 ADD PUSH2 0x2DE5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14A9 DUP3 PUSH2 0x2DE5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2FB5 PUSH1 0x20 DUP5 ADD PUSH2 0x2DE5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FDA DUP4 PUSH2 0x2DE5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3002 DUP6 DUP3 DUP7 ADD PUSH2 0x2D58 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x302D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3036 DUP4 PUSH2 0x2DE5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3046 DUP2 PUSH2 0x300C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3067 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3070 DUP6 PUSH2 0x2DE5 JUMP JUMPDEST SWAP4 POP PUSH2 0x307E PUSH1 0x20 DUP7 ADD PUSH2 0x2DE5 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30AD DUP8 DUP3 DUP9 ADD PUSH2 0x2D58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x30CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30D5 DUP4 PUSH2 0x2DE5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FB5 PUSH1 0x20 DUP5 ADD PUSH2 0x2DE5 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2DFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x310A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP5 ADD SWAP1 PUSH1 0xC0 DUP3 DUP8 SUB SLT ISZERO PUSH2 0x3136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x313E PUSH2 0x2D2F JUMP JUMPDEST DUP3 CALLDATALOAD DUP2 MSTORE PUSH2 0x314E PUSH1 0x20 DUP5 ADD PUSH2 0x2DE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x315F PUSH1 0x40 DUP5 ADD PUSH2 0x30E3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x3176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3182 DUP9 DUP3 DUP7 ADD PUSH2 0x2D58 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x319A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31A6 DUP9 DUP3 DUP7 ADD PUSH2 0x2D58 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH2 0x31B8 PUSH1 0xA0 DUP5 ADD PUSH2 0x2DE5 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x31D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3002 DUP6 DUP3 DUP7 ADD PUSH2 0x2D58 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x31F4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3214 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x14A9 DUP2 PUSH2 0x300C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420726573706F6E73652066726F6D20646174612073746F7261 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6765 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x925 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x3338 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3357 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3344 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3379 JUMPI PUSH2 0x3379 PUSH2 0x2D19 JUMP JUMPDEST PUSH2 0x338D DUP2 PUSH2 0x3387 DUP5 SLOAD PUSH2 0x31E0 JUMP JUMPDEST DUP5 PUSH2 0x3311 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x33C2 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x33AA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x3357 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x33F1 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x33D2 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x340F JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1CAC SWAP1 DUP4 ADD DUP5 PUSH2 0x2CDA JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x34DF DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2CB6 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x3510 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2CB6 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x618 JUMPI PUSH2 0x618 PUSH2 0x356E JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x618 JUMPI PUSH2 0x618 PUSH2 0x356E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x35D3 JUMPI PUSH2 0x35D3 PUSH2 0x356E JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2A4B SWAP1 DUP4 ADD DUP5 PUSH2 0x2CDA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x14A9 DUP2 PUSH2 0x2C83 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3682 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2CB6 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x618 JUMPI PUSH2 0x618 PUSH2 0x356E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID SLOAD PUSH9 0x652077616C6C657420 PUSH5 0x6F6573206E PUSH16 0x742068617665206120636F6D706C6574 PUSH6 0x642070726F66 PUSH10 0x6C65360894A13BA1A321 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A264697066735822122002 0xED DUP6 0xB0 0xB5 DELEGATECALL 0xD6 DUP14 0x5F SHR ORIGIN DUP8 LOG1 PUSH7 0xBB2D66CFE83152 DUP7 0xE1 0xED SIGNEXTEND 0xEC 0xB0 CALLVALUE PUSH21 0xB8E97964736F6C6343000813003300000000000000 ","sourceMap":"763:5947:26:-:0;;;1332:4:8;1289:48;;2035:53:26;;;;;;;;;-1:-1:-1;2059:22:26;:20;:22::i;:::-;763:5947;;5939:280:7;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:7;;216:2:28;5998:66:7;;;198:21:28;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:28;;;338:37;392:19;;5998:66:7;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:7;6140:15;6125:30;;;;;;6174:28;;564:36:28;;;6174:28:7;;552:2:28;537:18;6174:28:7;;;;;;;6074:139;5939:280::o;422:184:28:-;763:5947:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_42":{"entryPoint":null,"id":42,"parameterSlots":0,"returnSlots":0},"@__AccessControl_init_21":{"entryPoint":6793,"id":21,"parameterSlots":0,"returnSlots":0},"@__ERC721_init_1275":{"entryPoint":6832,"id":1275,"parameterSlots":2,"returnSlots":0},"@__ERC721_init_unchained_1293":{"entryPoint":8665,"id":1293,"parameterSlots":2,"returnSlots":0},"@__Ownable_init_435":{"entryPoint":6746,"id":435,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_unchained_446":{"entryPoint":8617,"id":446,"parameterSlots":0,"returnSlots":0},"@__UUPSUpgradeable_init_1092":{"entryPoint":null,"id":1092,"parameterSlots":0,"returnSlots":0},"@_add_5851":{"entryPoint":11080,"id":5851,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_2141":{"entryPoint":null,"id":2141,"parameterSlots":4,"returnSlots":0},"@_approve_2007":{"entryPoint":7206,"id":2007,"parameterSlots":2,"returnSlots":0},"@_authorizeUpgrade_7037":{"entryPoint":7488,"id":7037,"parameterSlots":1,"returnSlots":0},"@_beforeTokenTransfer_2128":{"entryPoint":null,"id":2128,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_2115":{"entryPoint":10448,"id":2115,"parameterSlots":4,"returnSlots":1},"@_checkOwner_477":{"entryPoint":7934,"id":477,"parameterSlots":0,"returnSlots":0},"@_checkRole_107":{"entryPoint":7375,"id":107,"parameterSlots":1,"returnSlots":0},"@_checkRole_146":{"entryPoint":8816,"id":146,"parameterSlots":2,"returnSlots":0},"@_contains_5954":{"entryPoint":null,"id":5954,"parameterSlots":2,"returnSlots":1},"@_exists_1676":{"entryPoint":null,"id":1676,"parameterSlots":1,"returnSlots":1},"@_getImplementation_616":{"entryPoint":null,"id":616,"parameterSlots":0,"returnSlots":1},"@_grantRole_298":{"entryPoint":6881,"id":298,"parameterSlots":2,"returnSlots":0},"@_isApprovedOrOwner_1710":{"entryPoint":9309,"id":1710,"parameterSlots":2,"returnSlots":1},"@_length_5968":{"entryPoint":null,"id":5968,"parameterSlots":1,"returnSlots":1},"@_msgSender_3085":{"entryPoint":null,"id":3085,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1658":{"entryPoint":null,"id":1658,"parameterSlots":1,"returnSlots":1},"@_remove_5935":{"entryPoint":10837,"id":5935,"parameterSlots":2,"returnSlots":1},"@_requireMinted_2053":{"entryPoint":7015,"id":2053,"parameterSlots":1,"returnSlots":0},"@_revert_3057":{"entryPoint":null,"id":3057,"parameterSlots":2,"returnSlots":0},"@_revokeRole_329":{"entryPoint":7385,"id":329,"parameterSlots":2,"returnSlots":0},"@_safeTransfer_1645":{"entryPoint":9435,"id":1645,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_2039":{"entryPoint":8167,"id":2039,"parameterSlots":3,"returnSlots":0},"@_setImplementation_640":{"entryPoint":8905,"id":640,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_534":{"entryPoint":8063,"id":534,"parameterSlots":1,"returnSlots":0},"@_transfer_1983":{"entryPoint":10092,"id":1983,"parameterSlots":3,"returnSlots":0},"@_upgradeToAndCallUUPS_738":{"entryPoint":7496,"id":738,"parameterSlots":3,"returnSlots":0},"@_upgradeToAndCall_685":{"entryPoint":9061,"id":685,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_655":{"entryPoint":9955,"id":655,"parameterSlots":1,"returnSlots":0},"@add_6021":{"entryPoint":10705,"id":6021,"parameterSlots":2,"returnSlots":1},"@approve_1487":{"entryPoint":2069,"id":1487,"parameterSlots":2,"returnSlots":0},"@balanceOf_6840":{"entryPoint":4760,"id":6840,"parameterSlots":1,"returnSlots":1},"@burn_6792":{"entryPoint":3321,"id":6792,"parameterSlots":0,"returnSlots":0},"@contains_4626":{"entryPoint":9098,"id":4626,"parameterSlots":2,"returnSlots":1},"@contains_5393":{"entryPoint":7859,"id":5393,"parameterSlots":2,"returnSlots":1},"@contains_6057":{"entryPoint":10056,"id":6057,"parameterSlots":2,"returnSlots":1},"@current_3118":{"entryPoint":null,"id":3118,"parameterSlots":1,"returnSlots":1},"@functionDelegateCall_2945":{"entryPoint":10019,"id":2945,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_2974":{"entryPoint":10717,"id":2974,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_3206":{"entryPoint":null,"id":3206,"parameterSlots":1,"returnSlots":1},"@getApproved_1505":{"entryPoint":2030,"id":1505,"parameterSlots":1,"returnSlots":1},"@getBooleanSlot_3217":{"entryPoint":null,"id":3217,"parameterSlots":1,"returnSlots":1},"@getRoleAdmin_161":{"entryPoint":null,"id":161,"parameterSlots":1,"returnSlots":1},"@getUserProfile_6818":{"entryPoint":2364,"id":6818,"parameterSlots":1,"returnSlots":1},"@get_4747":{"entryPoint":9110,"id":4747,"parameterSlots":2,"returnSlots":1},"@get_4782":{"entryPoint":8740,"id":4782,"parameterSlots":3,"returnSlots":1},"@get_5272":{"entryPoint":7327,"id":5272,"parameterSlots":3,"returnSlots":1},"@get_5518":{"entryPoint":7880,"id":5518,"parameterSlots":2,"returnSlots":1},"@get_5551":{"entryPoint":8145,"id":5551,"parameterSlots":3,"returnSlots":1},"@grantRole_181":{"entryPoint":2935,"id":181,"parameterSlots":2,"returnSlots":0},"@hasRole_94":{"entryPoint":4864,"id":94,"parameterSlots":2,"returnSlots":1},"@increment_3132":{"entryPoint":null,"id":3132,"parameterSlots":1,"returnSlots":0},"@initialize_6533":{"entryPoint":1712,"id":6533,"parameterSlots":3,"returnSlots":0},"@isAdmin_6893":{"entryPoint":2923,"id":6893,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_1540":{"entryPoint":null,"id":1540,"parameterSlots":2,"returnSlots":1},"@isContract_2746":{"entryPoint":null,"id":2746,"parameterSlots":1,"returnSlots":1},"@length_4641":{"entryPoint":8729,"id":4641,"parameterSlots":1,"returnSlots":1},"@length_5408":{"entryPoint":7316,"id":5408,"parameterSlots":1,"returnSlots":1},"@length_6072":{"entryPoint":9515,"id":6072,"parameterSlots":1,"returnSlots":1},"@mint_6717":{"entryPoint":5451,"id":6717,"parameterSlots":2,"returnSlots":1},"@name_1386":{"entryPoint":1566,"id":1386,"parameterSlots":0,"returnSlots":1},"@ownerOf_1376":{"entryPoint":7110,"id":1376,"parameterSlots":1,"returnSlots":1},"@ownerOf_6870":{"entryPoint":4696,"id":6870,"parameterSlots":1,"returnSlots":1},"@owner_463":{"entryPoint":null,"id":463,"parameterSlots":0,"returnSlots":1},"@proxiableUUID_1155":{"entryPoint":4389,"id":1155,"parameterSlots":0,"returnSlots":1},"@remove_4608":{"entryPoint":9222,"id":4608,"parameterSlots":2,"returnSlots":1},"@remove_5093":{"entryPoint":7922,"id":5093,"parameterSlots":2,"returnSlots":1},"@remove_5366":{"entryPoint":7901,"id":5366,"parameterSlots":2,"returnSlots":1},"@remove_6039":{"entryPoint":10080,"id":6039,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_491":{"entryPoint":4803,"id":491,"parameterSlots":0,"returnSlots":0},"@renounceRole_224":{"entryPoint":2972,"id":224,"parameterSlots":2,"returnSlots":0},"@revokeRole_201":{"entryPoint":5296,"id":201,"parameterSlots":2,"returnSlots":0},"@safeTransferFrom_1586":{"entryPoint":7348,"id":1586,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1616":{"entryPoint":8373,"id":1616,"parameterSlots":4,"returnSlots":0},"@safeTransferFrom_6969":{"entryPoint":null,"id":6969,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_7002":{"entryPoint":4933,"id":7002,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1522":{"entryPoint":4922,"id":1522,"parameterSlots":2,"returnSlots":0},"@setDataStorageProvider_7028":{"entryPoint":4568,"id":7028,"parameterSlots":1,"returnSlots":0},"@set_4584":{"entryPoint":9486,"id":4584,"parameterSlots":3,"returnSlots":1},"@set_5072":{"entryPoint":8515,"id":5072,"parameterSlots":3,"returnSlots":1},"@set_5339":{"entryPoint":8493,"id":5339,"parameterSlots":3,"returnSlots":1},"@supportsInterface_1324":{"entryPoint":8537,"id":1324,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3551":{"entryPoint":null,"id":3551,"parameterSlots":1,"returnSlots":1},"@supportsInterface_6909":{"entryPoint":1549,"id":6909,"parameterSlots":1,"returnSlots":1},"@supportsInterface_75":{"entryPoint":6709,"id":75,"parameterSlots":1,"returnSlots":1},"@symbol_1396":{"entryPoint":4907,"id":1396,"parameterSlots":0,"returnSlots":1},"@toHexString_3467":{"entryPoint":9543,"id":3467,"parameterSlots":2,"returnSlots":1},"@toHexString_3487":{"entryPoint":9525,"id":3487,"parameterSlots":1,"returnSlots":1},"@tokenIdOf_6854":{"entryPoint":4823,"id":6854,"parameterSlots":1,"returnSlots":1},"@tokenURI_6568":{"entryPoint":4985,"id":6568,"parameterSlots":1,"returnSlots":1},"@totalSupply_6880":{"entryPoint":2346,"id":6880,"parameterSlots":0,"returnSlots":1},"@transferFrom_6939":{"entryPoint":2872,"id":6939,"parameterSlots":3,"returnSlots":0},"@transferOwnership_514":{"entryPoint":5333,"id":514,"parameterSlots":1,"returnSlots":0},"@tryGet_4714":{"entryPoint":9251,"id":4714,"parameterSlots":2,"returnSlots":2},"@tryGet_5488":{"entryPoint":8024,"id":5488,"parameterSlots":2,"returnSlots":2},"@upgradeToAndCall_1198":{"entryPoint":4185,"id":1198,"parameterSlots":2,"returnSlots":0},"@upgradeTo_1177":{"entryPoint":3098,"id":1177,"parameterSlots":1,"returnSlots":0},"@verifyCallResultFromTarget_3013":{"entryPoint":11159,"id":3013,"parameterSlots":4,"returnSlots":1},"abi_decode_address":{"entryPoint":11749,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string":{"entryPoint":11608,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":12151,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":12473,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":12091,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":12369,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":12314,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":12222,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":11918,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":12978,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":13454,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":12178,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":11417,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":13907,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address":{"entryPoint":11777,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_struct$_UserProfile_$6477_memory_ptrt_string_memory_ptr":{"entryPoint":12535,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":11893,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint32":{"entryPoint":12515,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string":{"entryPoint":11482,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":13936,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":13479,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":13856,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13343,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11526,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13596,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13787,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12826,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_412c23c044f12933032e9eb6ca8a55a186f713b6708f4a9e879761e14440c687__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13007,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12902,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_886b867501ea49c352a9c24cd3e606ffa17dba28c8e4cc81c5f25cf37ba68cbb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_91a54eeda269cc8a80a3dcdf518e5f3a12f24479e680e6f470b183a6b5d3ecff__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ab1237ff2a5428b64010bd9fbc5393e377fb2464f5079afa40305359d5d0ea2d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13379,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_UserProfile_$6477_memory_ptr__to_t_struct$_UserProfile_$6477_memory_ptr__fromStack_reversed":{"entryPoint":11960,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":11567,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_bytes_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":13723,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":13700,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":13964,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":13073,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":13151,"id":null,"parameterSlots":2,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":11446,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":13764,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":12768,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":13678,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":13983,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":13742,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":11545,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bool":{"entryPoint":12300,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":11395,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:27447:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"58:87:28","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:28"},"nodeType":"YulFunctionCall","src":"125:12:28"},"nodeType":"YulExpressionStatement","src":"125:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"81:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"92:5:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"108:10:28","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"99:3:28"},"nodeType":"YulFunctionCall","src":"99:20:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"88:3:28"},"nodeType":"YulFunctionCall","src":"88:32:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"78:2:28"},"nodeType":"YulFunctionCall","src":"78:43:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"71:6:28"},"nodeType":"YulFunctionCall","src":"71:51:28"},"nodeType":"YulIf","src":"68:71:28"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47:5:28","type":""}],"src":"14:131:28"},{"body":{"nodeType":"YulBlock","src":"219:176:28","statements":[{"body":{"nodeType":"YulBlock","src":"265:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"274:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"277:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"267:6:28"},"nodeType":"YulFunctionCall","src":"267:12:28"},"nodeType":"YulExpressionStatement","src":"267:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"240:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"249:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"236:3:28"},"nodeType":"YulFunctionCall","src":"236:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"261:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"232:3:28"},"nodeType":"YulFunctionCall","src":"232:32:28"},"nodeType":"YulIf","src":"229:52:28"},{"nodeType":"YulVariableDeclaration","src":"290:36:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"316:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"303:12:28"},"nodeType":"YulFunctionCall","src":"303:23:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"294:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"359:5:28"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"335:23:28"},"nodeType":"YulFunctionCall","src":"335:30:28"},"nodeType":"YulExpressionStatement","src":"335:30:28"},{"nodeType":"YulAssignment","src":"374:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"384:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"374:6:28"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"185:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"196:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"208:6:28","type":""}],"src":"150:245:28"},{"body":{"nodeType":"YulBlock","src":"495:92:28","statements":[{"nodeType":"YulAssignment","src":"505:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"517:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"528:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"513:3:28"},"nodeType":"YulFunctionCall","src":"513:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"505:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"547:9:28"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"572:6:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"565:6:28"},"nodeType":"YulFunctionCall","src":"565:14:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"558:6:28"},"nodeType":"YulFunctionCall","src":"558:22:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"540:6:28"},"nodeType":"YulFunctionCall","src":"540:41:28"},"nodeType":"YulExpressionStatement","src":"540:41:28"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"464:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"475:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"486:4:28","type":""}],"src":"400:187:28"},{"body":{"nodeType":"YulBlock","src":"658:184:28","statements":[{"nodeType":"YulVariableDeclaration","src":"668:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"677:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"672:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"737:63:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"762:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"767:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"758:3:28"},"nodeType":"YulFunctionCall","src":"758:11:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"781:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"786:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:28"},"nodeType":"YulFunctionCall","src":"777:11:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"771:5:28"},"nodeType":"YulFunctionCall","src":"771:18:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"751:6:28"},"nodeType":"YulFunctionCall","src":"751:39:28"},"nodeType":"YulExpressionStatement","src":"751:39:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"698:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"701:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"695:2:28"},"nodeType":"YulFunctionCall","src":"695:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"709:19:28","statements":[{"nodeType":"YulAssignment","src":"711:15:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"720:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"723:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"716:3:28"},"nodeType":"YulFunctionCall","src":"716:10:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"711:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"691:3:28","statements":[]},"src":"687:113:28"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"820:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"825:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"816:3:28"},"nodeType":"YulFunctionCall","src":"816:16:28"},{"kind":"number","nodeType":"YulLiteral","src":"834:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:28"},"nodeType":"YulFunctionCall","src":"809:27:28"},"nodeType":"YulExpressionStatement","src":"809:27:28"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"636:3:28","type":""},{"name":"dst","nodeType":"YulTypedName","src":"641:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"646:6:28","type":""}],"src":"592:250:28"},{"body":{"nodeType":"YulBlock","src":"897:221:28","statements":[{"nodeType":"YulVariableDeclaration","src":"907:26:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"927:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"921:5:28"},"nodeType":"YulFunctionCall","src":"921:12:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"911:6:28","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"949:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"954:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"942:6:28"},"nodeType":"YulFunctionCall","src":"942:19:28"},"nodeType":"YulExpressionStatement","src":"942:19:28"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1009:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"1016:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1005:3:28"},"nodeType":"YulFunctionCall","src":"1005:16:28"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1027:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"1032:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:28"},"nodeType":"YulFunctionCall","src":"1023:14:28"},{"name":"length","nodeType":"YulIdentifier","src":"1039:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"970:34:28"},"nodeType":"YulFunctionCall","src":"970:76:28"},"nodeType":"YulExpressionStatement","src":"970:76:28"},{"nodeType":"YulAssignment","src":"1055:57:28","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1070:3:28"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1083:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"1091:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1079:3:28"},"nodeType":"YulFunctionCall","src":"1079:15:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1100:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1096:3:28"},"nodeType":"YulFunctionCall","src":"1096:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1075:3:28"},"nodeType":"YulFunctionCall","src":"1075:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1066:3:28"},"nodeType":"YulFunctionCall","src":"1066:39:28"},{"kind":"number","nodeType":"YulLiteral","src":"1107:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1062:3:28"},"nodeType":"YulFunctionCall","src":"1062:50:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1055:3:28"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"874:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"881:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"889:3:28","type":""}],"src":"847:271:28"},{"body":{"nodeType":"YulBlock","src":"1244:99:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1261:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1272:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1254:6:28"},"nodeType":"YulFunctionCall","src":"1254:21:28"},"nodeType":"YulExpressionStatement","src":"1254:21:28"},{"nodeType":"YulAssignment","src":"1284:53:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1310:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1322:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1333:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1318:3:28"},"nodeType":"YulFunctionCall","src":"1318:18:28"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1292:17:28"},"nodeType":"YulFunctionCall","src":"1292:45:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1284:4:28"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1213:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1224:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1235:4:28","type":""}],"src":"1123:220:28"},{"body":{"nodeType":"YulBlock","src":"1380:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1397:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1404:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1409:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1400:3:28"},"nodeType":"YulFunctionCall","src":"1400:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1390:6:28"},"nodeType":"YulFunctionCall","src":"1390:31:28"},"nodeType":"YulExpressionStatement","src":"1390:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1437:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1440:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1430:6:28"},"nodeType":"YulFunctionCall","src":"1430:15:28"},"nodeType":"YulExpressionStatement","src":"1430:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1461:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1464:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1454:6:28"},"nodeType":"YulFunctionCall","src":"1454:15:28"},"nodeType":"YulExpressionStatement","src":"1454:15:28"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1348:127:28"},{"body":{"nodeType":"YulBlock","src":"1521:207:28","statements":[{"nodeType":"YulAssignment","src":"1531:19:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1547:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1541:5:28"},"nodeType":"YulFunctionCall","src":"1541:9:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1531:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"1559:35:28","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1581:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"1589:4:28","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1577:3:28"},"nodeType":"YulFunctionCall","src":"1577:17:28"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1563:10:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1669:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1671:16:28"},"nodeType":"YulFunctionCall","src":"1671:18:28"},"nodeType":"YulExpressionStatement","src":"1671:18:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1612:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"1624:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1609:2:28"},"nodeType":"YulFunctionCall","src":"1609:34:28"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1648:10:28"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1660:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1645:2:28"},"nodeType":"YulFunctionCall","src":"1645:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1606:2:28"},"nodeType":"YulFunctionCall","src":"1606:62:28"},"nodeType":"YulIf","src":"1603:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1707:2:28","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1711:10:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1700:6:28"},"nodeType":"YulFunctionCall","src":"1700:22:28"},"nodeType":"YulExpressionStatement","src":"1700:22:28"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1510:6:28","type":""}],"src":"1480:248:28"},{"body":{"nodeType":"YulBlock","src":"1786:666:28","statements":[{"body":{"nodeType":"YulBlock","src":"1835:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1844:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1847:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1837:6:28"},"nodeType":"YulFunctionCall","src":"1837:12:28"},"nodeType":"YulExpressionStatement","src":"1837:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1814:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"1822:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1810:3:28"},"nodeType":"YulFunctionCall","src":"1810:17:28"},{"name":"end","nodeType":"YulIdentifier","src":"1829:3:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1806:3:28"},"nodeType":"YulFunctionCall","src":"1806:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1799:6:28"},"nodeType":"YulFunctionCall","src":"1799:35:28"},"nodeType":"YulIf","src":"1796:55:28"},{"nodeType":"YulVariableDeclaration","src":"1860:30:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1883:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1870:12:28"},"nodeType":"YulFunctionCall","src":"1870:20:28"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1864:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1899:28:28","value":{"kind":"number","nodeType":"YulLiteral","src":"1909:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1903:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1950:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1952:16:28"},"nodeType":"YulFunctionCall","src":"1952:18:28"},"nodeType":"YulExpressionStatement","src":"1952:18:28"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1942:2:28"},{"name":"_2","nodeType":"YulIdentifier","src":"1946:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1939:2:28"},"nodeType":"YulFunctionCall","src":"1939:10:28"},"nodeType":"YulIf","src":"1936:36:28"},{"nodeType":"YulVariableDeclaration","src":"1981:17:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1995:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1991:3:28"},"nodeType":"YulFunctionCall","src":"1991:7:28"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"1985:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2007:23:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2027:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2021:5:28"},"nodeType":"YulFunctionCall","src":"2021:9:28"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2011:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2039:71:28","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2061:6:28"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2085:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"2089:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2081:3:28"},"nodeType":"YulFunctionCall","src":"2081:13:28"},{"name":"_3","nodeType":"YulIdentifier","src":"2096:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2077:3:28"},"nodeType":"YulFunctionCall","src":"2077:22:28"},{"kind":"number","nodeType":"YulLiteral","src":"2101:2:28","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2073:3:28"},"nodeType":"YulFunctionCall","src":"2073:31:28"},{"name":"_3","nodeType":"YulIdentifier","src":"2106:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2069:3:28"},"nodeType":"YulFunctionCall","src":"2069:40:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2057:3:28"},"nodeType":"YulFunctionCall","src":"2057:53:28"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2043:10:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2169:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2171:16:28"},"nodeType":"YulFunctionCall","src":"2171:18:28"},"nodeType":"YulExpressionStatement","src":"2171:18:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2128:10:28"},{"name":"_2","nodeType":"YulIdentifier","src":"2140:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2125:2:28"},"nodeType":"YulFunctionCall","src":"2125:18:28"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2148:10:28"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2160:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2145:2:28"},"nodeType":"YulFunctionCall","src":"2145:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2122:2:28"},"nodeType":"YulFunctionCall","src":"2122:46:28"},"nodeType":"YulIf","src":"2119:72:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2207:2:28","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2211:10:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2200:6:28"},"nodeType":"YulFunctionCall","src":"2200:22:28"},"nodeType":"YulExpressionStatement","src":"2200:22:28"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2238:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"2246:2:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2231:6:28"},"nodeType":"YulFunctionCall","src":"2231:18:28"},"nodeType":"YulExpressionStatement","src":"2231:18:28"},{"body":{"nodeType":"YulBlock","src":"2297:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2306:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2309:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2299:6:28"},"nodeType":"YulFunctionCall","src":"2299:12:28"},"nodeType":"YulExpressionStatement","src":"2299:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2272:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"2280:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2268:3:28"},"nodeType":"YulFunctionCall","src":"2268:15:28"},{"kind":"number","nodeType":"YulLiteral","src":"2285:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2264:3:28"},"nodeType":"YulFunctionCall","src":"2264:26:28"},{"name":"end","nodeType":"YulIdentifier","src":"2292:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2261:2:28"},"nodeType":"YulFunctionCall","src":"2261:35:28"},"nodeType":"YulIf","src":"2258:55:28"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2339:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2347:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2335:3:28"},"nodeType":"YulFunctionCall","src":"2335:17:28"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2358:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2366:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2354:3:28"},"nodeType":"YulFunctionCall","src":"2354:17:28"},{"name":"_1","nodeType":"YulIdentifier","src":"2373:2:28"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2322:12:28"},"nodeType":"YulFunctionCall","src":"2322:54:28"},"nodeType":"YulExpressionStatement","src":"2322:54:28"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2400:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"2408:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2396:3:28"},"nodeType":"YulFunctionCall","src":"2396:15:28"},{"kind":"number","nodeType":"YulLiteral","src":"2413:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2392:3:28"},"nodeType":"YulFunctionCall","src":"2392:26:28"},{"kind":"number","nodeType":"YulLiteral","src":"2420:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2385:6:28"},"nodeType":"YulFunctionCall","src":"2385:37:28"},"nodeType":"YulExpressionStatement","src":"2385:37:28"},{"nodeType":"YulAssignment","src":"2431:15:28","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"2440:6:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2431:5:28"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1760:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"1768:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1776:5:28","type":""}],"src":"1733:719:28"},{"body":{"nodeType":"YulBlock","src":"2506:124:28","statements":[{"nodeType":"YulAssignment","src":"2516:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2538:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2525:12:28"},"nodeType":"YulFunctionCall","src":"2525:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2516:5:28"}]},{"body":{"nodeType":"YulBlock","src":"2608:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2617:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2620:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2610:6:28"},"nodeType":"YulFunctionCall","src":"2610:12:28"},"nodeType":"YulExpressionStatement","src":"2610:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2567:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2578:5:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2593:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2598:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2589:3:28"},"nodeType":"YulFunctionCall","src":"2589:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"2602:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2585:3:28"},"nodeType":"YulFunctionCall","src":"2585:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2574:3:28"},"nodeType":"YulFunctionCall","src":"2574:31:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2564:2:28"},"nodeType":"YulFunctionCall","src":"2564:42:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2557:6:28"},"nodeType":"YulFunctionCall","src":"2557:50:28"},"nodeType":"YulIf","src":"2554:70:28"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2485:6:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2496:5:28","type":""}],"src":"2457:173:28"},{"body":{"nodeType":"YulBlock","src":"2759:493:28","statements":[{"body":{"nodeType":"YulBlock","src":"2805:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2814:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2817:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2807:6:28"},"nodeType":"YulFunctionCall","src":"2807:12:28"},"nodeType":"YulExpressionStatement","src":"2807:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2780:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2776:3:28"},"nodeType":"YulFunctionCall","src":"2776:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2801:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2772:3:28"},"nodeType":"YulFunctionCall","src":"2772:32:28"},"nodeType":"YulIf","src":"2769:52:28"},{"nodeType":"YulVariableDeclaration","src":"2830:37:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2857:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2844:12:28"},"nodeType":"YulFunctionCall","src":"2844:23:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2834:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2876:28:28","value":{"kind":"number","nodeType":"YulLiteral","src":"2886:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2880:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2931:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2940:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2943:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2933:6:28"},"nodeType":"YulFunctionCall","src":"2933:12:28"},"nodeType":"YulExpressionStatement","src":"2933:12:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2919:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"2927:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2916:2:28"},"nodeType":"YulFunctionCall","src":"2916:14:28"},"nodeType":"YulIf","src":"2913:34:28"},{"nodeType":"YulAssignment","src":"2956:60:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2988:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"2999:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2984:3:28"},"nodeType":"YulFunctionCall","src":"2984:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3008:7:28"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"2966:17:28"},"nodeType":"YulFunctionCall","src":"2966:50:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2956:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"3025:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3058:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3069:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3054:3:28"},"nodeType":"YulFunctionCall","src":"3054:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3041:12:28"},"nodeType":"YulFunctionCall","src":"3041:32:28"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"3029:8:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3102:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3111:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3114:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3104:6:28"},"nodeType":"YulFunctionCall","src":"3104:12:28"},"nodeType":"YulExpressionStatement","src":"3104:12:28"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"3088:8:28"},{"name":"_1","nodeType":"YulIdentifier","src":"3098:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3085:2:28"},"nodeType":"YulFunctionCall","src":"3085:16:28"},"nodeType":"YulIf","src":"3082:36:28"},{"nodeType":"YulAssignment","src":"3127:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3159:9:28"},{"name":"offset_1","nodeType":"YulIdentifier","src":"3170:8:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3155:3:28"},"nodeType":"YulFunctionCall","src":"3155:24:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3181:7:28"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"3137:17:28"},"nodeType":"YulFunctionCall","src":"3137:52:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3127:6:28"}]},{"nodeType":"YulAssignment","src":"3198:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3231:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3242:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3227:3:28"},"nodeType":"YulFunctionCall","src":"3227:18:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3208:18:28"},"nodeType":"YulFunctionCall","src":"3208:38:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3198:6:28"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2709:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2720:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2732:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2740:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2748:6:28","type":""}],"src":"2635:617:28"},{"body":{"nodeType":"YulBlock","src":"3327:110:28","statements":[{"body":{"nodeType":"YulBlock","src":"3373:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3382:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3385:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3375:6:28"},"nodeType":"YulFunctionCall","src":"3375:12:28"},"nodeType":"YulExpressionStatement","src":"3375:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3348:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"3357:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3344:3:28"},"nodeType":"YulFunctionCall","src":"3344:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"3369:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3340:3:28"},"nodeType":"YulFunctionCall","src":"3340:32:28"},"nodeType":"YulIf","src":"3337:52:28"},{"nodeType":"YulAssignment","src":"3398:33:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3421:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3408:12:28"},"nodeType":"YulFunctionCall","src":"3408:23:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3398:6:28"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3293:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3304:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3316:6:28","type":""}],"src":"3257:180:28"},{"body":{"nodeType":"YulBlock","src":"3543:102:28","statements":[{"nodeType":"YulAssignment","src":"3553:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3565:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3576:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3561:3:28"},"nodeType":"YulFunctionCall","src":"3561:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3553:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3595:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3610:6:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3626:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3631:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3622:3:28"},"nodeType":"YulFunctionCall","src":"3622:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"3635:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3618:3:28"},"nodeType":"YulFunctionCall","src":"3618:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3606:3:28"},"nodeType":"YulFunctionCall","src":"3606:32:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3588:6:28"},"nodeType":"YulFunctionCall","src":"3588:51:28"},"nodeType":"YulExpressionStatement","src":"3588:51:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3512:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3523:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3534:4:28","type":""}],"src":"3442:203:28"},{"body":{"nodeType":"YulBlock","src":"3737:167:28","statements":[{"body":{"nodeType":"YulBlock","src":"3783:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3792:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3795:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3785:6:28"},"nodeType":"YulFunctionCall","src":"3785:12:28"},"nodeType":"YulExpressionStatement","src":"3785:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3758:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"3767:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3754:3:28"},"nodeType":"YulFunctionCall","src":"3754:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"3779:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3750:3:28"},"nodeType":"YulFunctionCall","src":"3750:32:28"},"nodeType":"YulIf","src":"3747:52:28"},{"nodeType":"YulAssignment","src":"3808:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3837:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3818:18:28"},"nodeType":"YulFunctionCall","src":"3818:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3808:6:28"}]},{"nodeType":"YulAssignment","src":"3856:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3883:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3894:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3879:3:28"},"nodeType":"YulFunctionCall","src":"3879:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3866:12:28"},"nodeType":"YulFunctionCall","src":"3866:32:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3856:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3695:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3706:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3718:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3726:6:28","type":""}],"src":"3650:254:28"},{"body":{"nodeType":"YulBlock","src":"4010:76:28","statements":[{"nodeType":"YulAssignment","src":"4020:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4032:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4043:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4028:3:28"},"nodeType":"YulFunctionCall","src":"4028:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4020:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4062:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"4073:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4055:6:28"},"nodeType":"YulFunctionCall","src":"4055:25:28"},"nodeType":"YulExpressionStatement","src":"4055:25:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3979:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3990:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4001:4:28","type":""}],"src":"3909:177:28"},{"body":{"nodeType":"YulBlock","src":"4250:768:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4267:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4278:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4260:6:28"},"nodeType":"YulFunctionCall","src":"4260:21:28"},"nodeType":"YulExpressionStatement","src":"4260:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4301:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4312:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4297:3:28"},"nodeType":"YulFunctionCall","src":"4297:18:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4323:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4317:5:28"},"nodeType":"YulFunctionCall","src":"4317:13:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4290:6:28"},"nodeType":"YulFunctionCall","src":"4290:41:28"},"nodeType":"YulExpressionStatement","src":"4290:41:28"},{"nodeType":"YulVariableDeclaration","src":"4340:42:28","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4370:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4378:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4366:3:28"},"nodeType":"YulFunctionCall","src":"4366:15:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4360:5:28"},"nodeType":"YulFunctionCall","src":"4360:22:28"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4344:12:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4391:29:28","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4409:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4414:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4405:3:28"},"nodeType":"YulFunctionCall","src":"4405:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"4418:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4401:3:28"},"nodeType":"YulFunctionCall","src":"4401:19:28"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4395:2:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4440:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4451:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4436:3:28"},"nodeType":"YulFunctionCall","src":"4436:18:28"},{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4460:12:28"},{"name":"_1","nodeType":"YulIdentifier","src":"4474:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4456:3:28"},"nodeType":"YulFunctionCall","src":"4456:21:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4429:6:28"},"nodeType":"YulFunctionCall","src":"4429:49:28"},"nodeType":"YulExpressionStatement","src":"4429:49:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4498:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4509:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4494:3:28"},"nodeType":"YulFunctionCall","src":"4494:18:28"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4528:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4536:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4524:3:28"},"nodeType":"YulFunctionCall","src":"4524:15:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4518:5:28"},"nodeType":"YulFunctionCall","src":"4518:22:28"},{"kind":"number","nodeType":"YulLiteral","src":"4542:10:28","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4514:3:28"},"nodeType":"YulFunctionCall","src":"4514:39:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4487:6:28"},"nodeType":"YulFunctionCall","src":"4487:67:28"},"nodeType":"YulExpressionStatement","src":"4487:67:28"},{"nodeType":"YulVariableDeclaration","src":"4563:44:28","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4595:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4603:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4591:3:28"},"nodeType":"YulFunctionCall","src":"4591:15:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4585:5:28"},"nodeType":"YulFunctionCall","src":"4585:22:28"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"4567:14:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4627:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4638:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4623:3:28"},"nodeType":"YulFunctionCall","src":"4623:19:28"},{"kind":"number","nodeType":"YulLiteral","src":"4644:4:28","type":"","value":"0xc0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4616:6:28"},"nodeType":"YulFunctionCall","src":"4616:33:28"},"nodeType":"YulExpressionStatement","src":"4616:33:28"},{"nodeType":"YulVariableDeclaration","src":"4658:68:28","value":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"4690:14:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4710:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4721:3:28","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4706:3:28"},"nodeType":"YulFunctionCall","src":"4706:19:28"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"4672:17:28"},"nodeType":"YulFunctionCall","src":"4672:54:28"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"4662:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4735:45:28","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4767:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4775:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4763:3:28"},"nodeType":"YulFunctionCall","src":"4763:16:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4757:5:28"},"nodeType":"YulFunctionCall","src":"4757:23:28"},"variables":[{"name":"memberValue0_2","nodeType":"YulTypedName","src":"4739:14:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4800:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4811:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4796:3:28"},"nodeType":"YulFunctionCall","src":"4796:19:28"},{"arguments":[{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"4825:6:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"4833:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4821:3:28"},"nodeType":"YulFunctionCall","src":"4821:22:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4849:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4845:3:28"},"nodeType":"YulFunctionCall","src":"4845:7:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4817:3:28"},"nodeType":"YulFunctionCall","src":"4817:36:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4789:6:28"},"nodeType":"YulFunctionCall","src":"4789:65:28"},"nodeType":"YulExpressionStatement","src":"4789:65:28"},{"nodeType":"YulVariableDeclaration","src":"4863:55:28","value":{"arguments":[{"name":"memberValue0_2","nodeType":"YulIdentifier","src":"4895:14:28"},{"name":"tail_1","nodeType":"YulIdentifier","src":"4911:6:28"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"4877:17:28"},"nodeType":"YulFunctionCall","src":"4877:41:28"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"4867:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4938:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4949:4:28","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4934:3:28"},"nodeType":"YulFunctionCall","src":"4934:20:28"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4970:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4978:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4966:3:28"},"nodeType":"YulFunctionCall","src":"4966:16:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4960:5:28"},"nodeType":"YulFunctionCall","src":"4960:23:28"},{"name":"_1","nodeType":"YulIdentifier","src":"4985:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4956:3:28"},"nodeType":"YulFunctionCall","src":"4956:32:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4927:6:28"},"nodeType":"YulFunctionCall","src":"4927:62:28"},"nodeType":"YulExpressionStatement","src":"4927:62:28"},{"nodeType":"YulAssignment","src":"4998:14:28","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"5006:6:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4998:4:28"}]}]},"name":"abi_encode_tuple_t_struct$_UserProfile_$6477_memory_ptr__to_t_struct$_UserProfile_$6477_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4219:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4230:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4241:4:28","type":""}],"src":"4091:927:28"},{"body":{"nodeType":"YulBlock","src":"5127:224:28","statements":[{"body":{"nodeType":"YulBlock","src":"5173:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5182:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5185:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5175:6:28"},"nodeType":"YulFunctionCall","src":"5175:12:28"},"nodeType":"YulExpressionStatement","src":"5175:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5148:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"5157:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5144:3:28"},"nodeType":"YulFunctionCall","src":"5144:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"5169:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5140:3:28"},"nodeType":"YulFunctionCall","src":"5140:32:28"},"nodeType":"YulIf","src":"5137:52:28"},{"nodeType":"YulAssignment","src":"5198:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5227:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5208:18:28"},"nodeType":"YulFunctionCall","src":"5208:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5198:6:28"}]},{"nodeType":"YulAssignment","src":"5246:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5279:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5290:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5275:3:28"},"nodeType":"YulFunctionCall","src":"5275:18:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5256:18:28"},"nodeType":"YulFunctionCall","src":"5256:38:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5246:6:28"}]},{"nodeType":"YulAssignment","src":"5303:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5330:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5341:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5326:3:28"},"nodeType":"YulFunctionCall","src":"5326:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5313:12:28"},"nodeType":"YulFunctionCall","src":"5313:32:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5303:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5077:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5088:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5100:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5108:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5116:6:28","type":""}],"src":"5023:328:28"},{"body":{"nodeType":"YulBlock","src":"5426:110:28","statements":[{"body":{"nodeType":"YulBlock","src":"5472:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5481:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5484:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5474:6:28"},"nodeType":"YulFunctionCall","src":"5474:12:28"},"nodeType":"YulExpressionStatement","src":"5474:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5447:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"5456:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5443:3:28"},"nodeType":"YulFunctionCall","src":"5443:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"5468:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5439:3:28"},"nodeType":"YulFunctionCall","src":"5439:32:28"},"nodeType":"YulIf","src":"5436:52:28"},{"nodeType":"YulAssignment","src":"5497:33:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5520:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5507:12:28"},"nodeType":"YulFunctionCall","src":"5507:23:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5497:6:28"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5392:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5403:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5415:6:28","type":""}],"src":"5356:180:28"},{"body":{"nodeType":"YulBlock","src":"5642:76:28","statements":[{"nodeType":"YulAssignment","src":"5652:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5664:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5675:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5660:3:28"},"nodeType":"YulFunctionCall","src":"5660:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5652:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5694:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"5705:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5687:6:28"},"nodeType":"YulFunctionCall","src":"5687:25:28"},"nodeType":"YulExpressionStatement","src":"5687:25:28"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5611:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5622:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5633:4:28","type":""}],"src":"5541:177:28"},{"body":{"nodeType":"YulBlock","src":"5793:116:28","statements":[{"body":{"nodeType":"YulBlock","src":"5839:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5848:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5851:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5841:6:28"},"nodeType":"YulFunctionCall","src":"5841:12:28"},"nodeType":"YulExpressionStatement","src":"5841:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5814:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"5823:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5810:3:28"},"nodeType":"YulFunctionCall","src":"5810:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"5835:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5806:3:28"},"nodeType":"YulFunctionCall","src":"5806:32:28"},"nodeType":"YulIf","src":"5803:52:28"},{"nodeType":"YulAssignment","src":"5864:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5893:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5874:18:28"},"nodeType":"YulFunctionCall","src":"5874:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5864:6:28"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5759:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5770:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5782:6:28","type":""}],"src":"5723:186:28"},{"body":{"nodeType":"YulBlock","src":"6001:167:28","statements":[{"body":{"nodeType":"YulBlock","src":"6047:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6056:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6059:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6049:6:28"},"nodeType":"YulFunctionCall","src":"6049:12:28"},"nodeType":"YulExpressionStatement","src":"6049:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6022:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"6031:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6018:3:28"},"nodeType":"YulFunctionCall","src":"6018:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"6043:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6014:3:28"},"nodeType":"YulFunctionCall","src":"6014:32:28"},"nodeType":"YulIf","src":"6011:52:28"},{"nodeType":"YulAssignment","src":"6072:33:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6095:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6082:12:28"},"nodeType":"YulFunctionCall","src":"6082:23:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6072:6:28"}]},{"nodeType":"YulAssignment","src":"6114:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6147:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6158:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6143:3:28"},"nodeType":"YulFunctionCall","src":"6143:18:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6124:18:28"},"nodeType":"YulFunctionCall","src":"6124:38:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6114:6:28"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5959:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5970:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5982:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5990:6:28","type":""}],"src":"5914:254:28"},{"body":{"nodeType":"YulBlock","src":"6269:299:28","statements":[{"body":{"nodeType":"YulBlock","src":"6315:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6324:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6327:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6317:6:28"},"nodeType":"YulFunctionCall","src":"6317:12:28"},"nodeType":"YulExpressionStatement","src":"6317:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6290:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"6299:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6286:3:28"},"nodeType":"YulFunctionCall","src":"6286:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"6311:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6282:3:28"},"nodeType":"YulFunctionCall","src":"6282:32:28"},"nodeType":"YulIf","src":"6279:52:28"},{"nodeType":"YulAssignment","src":"6340:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6369:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6350:18:28"},"nodeType":"YulFunctionCall","src":"6350:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6340:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"6388:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6419:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6430:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6415:3:28"},"nodeType":"YulFunctionCall","src":"6415:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6402:12:28"},"nodeType":"YulFunctionCall","src":"6402:32:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6392:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"6477:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6486:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6489:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6479:6:28"},"nodeType":"YulFunctionCall","src":"6479:12:28"},"nodeType":"YulExpressionStatement","src":"6479:12:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6449:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"6457:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6446:2:28"},"nodeType":"YulFunctionCall","src":"6446:30:28"},"nodeType":"YulIf","src":"6443:50:28"},{"nodeType":"YulAssignment","src":"6502:60:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6534:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"6545:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6530:3:28"},"nodeType":"YulFunctionCall","src":"6530:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6554:7:28"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"6512:17:28"},"nodeType":"YulFunctionCall","src":"6512:50:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6502:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6227:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6238:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6250:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6258:6:28","type":""}],"src":"6173:395:28"},{"body":{"nodeType":"YulBlock","src":"6615:76:28","statements":[{"body":{"nodeType":"YulBlock","src":"6669:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6678:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6681:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6671:6:28"},"nodeType":"YulFunctionCall","src":"6671:12:28"},"nodeType":"YulExpressionStatement","src":"6671:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6638:5:28"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6659:5:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6652:6:28"},"nodeType":"YulFunctionCall","src":"6652:13:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6645:6:28"},"nodeType":"YulFunctionCall","src":"6645:21:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6635:2:28"},"nodeType":"YulFunctionCall","src":"6635:32:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6628:6:28"},"nodeType":"YulFunctionCall","src":"6628:40:28"},"nodeType":"YulIf","src":"6625:60:28"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6604:5:28","type":""}],"src":"6573:118:28"},{"body":{"nodeType":"YulBlock","src":"6780:231:28","statements":[{"body":{"nodeType":"YulBlock","src":"6826:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6835:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6838:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6828:6:28"},"nodeType":"YulFunctionCall","src":"6828:12:28"},"nodeType":"YulExpressionStatement","src":"6828:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6801:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"6810:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6797:3:28"},"nodeType":"YulFunctionCall","src":"6797:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"6822:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6793:3:28"},"nodeType":"YulFunctionCall","src":"6793:32:28"},"nodeType":"YulIf","src":"6790:52:28"},{"nodeType":"YulAssignment","src":"6851:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6880:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6861:18:28"},"nodeType":"YulFunctionCall","src":"6861:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6851:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"6899:45:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6929:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6940:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6925:3:28"},"nodeType":"YulFunctionCall","src":"6925:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6912:12:28"},"nodeType":"YulFunctionCall","src":"6912:32:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6903:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6975:5:28"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"6953:21:28"},"nodeType":"YulFunctionCall","src":"6953:28:28"},"nodeType":"YulExpressionStatement","src":"6953:28:28"},{"nodeType":"YulAssignment","src":"6990:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"7000:5:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6990:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6738:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6749:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6761:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6769:6:28","type":""}],"src":"6696:315:28"},{"body":{"nodeType":"YulBlock","src":"7146:408:28","statements":[{"body":{"nodeType":"YulBlock","src":"7193:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7202:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7205:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7195:6:28"},"nodeType":"YulFunctionCall","src":"7195:12:28"},"nodeType":"YulExpressionStatement","src":"7195:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7167:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"7176:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7163:3:28"},"nodeType":"YulFunctionCall","src":"7163:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"7188:3:28","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7159:3:28"},"nodeType":"YulFunctionCall","src":"7159:33:28"},"nodeType":"YulIf","src":"7156:53:28"},{"nodeType":"YulAssignment","src":"7218:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7247:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7228:18:28"},"nodeType":"YulFunctionCall","src":"7228:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7218:6:28"}]},{"nodeType":"YulAssignment","src":"7266:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7299:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7310:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7295:3:28"},"nodeType":"YulFunctionCall","src":"7295:18:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7276:18:28"},"nodeType":"YulFunctionCall","src":"7276:38:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7266:6:28"}]},{"nodeType":"YulAssignment","src":"7323:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7350:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7361:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7346:3:28"},"nodeType":"YulFunctionCall","src":"7346:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7333:12:28"},"nodeType":"YulFunctionCall","src":"7333:32:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7323:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"7374:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7405:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7416:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7401:3:28"},"nodeType":"YulFunctionCall","src":"7401:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7388:12:28"},"nodeType":"YulFunctionCall","src":"7388:32:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7378:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"7463:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7472:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7475:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7465:6:28"},"nodeType":"YulFunctionCall","src":"7465:12:28"},"nodeType":"YulExpressionStatement","src":"7465:12:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7435:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"7443:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7432:2:28"},"nodeType":"YulFunctionCall","src":"7432:30:28"},"nodeType":"YulIf","src":"7429:50:28"},{"nodeType":"YulAssignment","src":"7488:60:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7520:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"7531:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7516:3:28"},"nodeType":"YulFunctionCall","src":"7516:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7540:7:28"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"7498:17:28"},"nodeType":"YulFunctionCall","src":"7498:50:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7488:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7088:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7099:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7111:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7119:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7127:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7135:6:28","type":""}],"src":"7016:538:28"},{"body":{"nodeType":"YulBlock","src":"7646:173:28","statements":[{"body":{"nodeType":"YulBlock","src":"7692:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7701:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7704:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7694:6:28"},"nodeType":"YulFunctionCall","src":"7694:12:28"},"nodeType":"YulExpressionStatement","src":"7694:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7667:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"7676:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7663:3:28"},"nodeType":"YulFunctionCall","src":"7663:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"7688:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7659:3:28"},"nodeType":"YulFunctionCall","src":"7659:32:28"},"nodeType":"YulIf","src":"7656:52:28"},{"nodeType":"YulAssignment","src":"7717:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7746:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7727:18:28"},"nodeType":"YulFunctionCall","src":"7727:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7717:6:28"}]},{"nodeType":"YulAssignment","src":"7765:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7798:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7809:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7794:3:28"},"nodeType":"YulFunctionCall","src":"7794:18:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7775:18:28"},"nodeType":"YulFunctionCall","src":"7775:38:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7765:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7604:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7615:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7627:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7635:6:28","type":""}],"src":"7559:260:28"},{"body":{"nodeType":"YulBlock","src":"7872:115:28","statements":[{"nodeType":"YulAssignment","src":"7882:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7904:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7891:12:28"},"nodeType":"YulFunctionCall","src":"7891:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7882:5:28"}]},{"body":{"nodeType":"YulBlock","src":"7965:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7974:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7977:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7967:6:28"},"nodeType":"YulFunctionCall","src":"7967:12:28"},"nodeType":"YulExpressionStatement","src":"7967:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7933:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7944:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"7951:10:28","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7940:3:28"},"nodeType":"YulFunctionCall","src":"7940:22:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7930:2:28"},"nodeType":"YulFunctionCall","src":"7930:33:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7923:6:28"},"nodeType":"YulFunctionCall","src":"7923:41:28"},"nodeType":"YulIf","src":"7920:61:28"}]},"name":"abi_decode_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7851:6:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7862:5:28","type":""}],"src":"7824:163:28"},{"body":{"nodeType":"YulBlock","src":"8118:1108:28","statements":[{"body":{"nodeType":"YulBlock","src":"8164:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8173:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8176:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8166:6:28"},"nodeType":"YulFunctionCall","src":"8166:12:28"},"nodeType":"YulExpressionStatement","src":"8166:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8139:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"8148:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8135:3:28"},"nodeType":"YulFunctionCall","src":"8135:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"8160:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8131:3:28"},"nodeType":"YulFunctionCall","src":"8131:32:28"},"nodeType":"YulIf","src":"8128:52:28"},{"nodeType":"YulVariableDeclaration","src":"8189:37:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8216:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8203:12:28"},"nodeType":"YulFunctionCall","src":"8203:23:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8193:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8235:28:28","value":{"kind":"number","nodeType":"YulLiteral","src":"8245:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8239:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"8290:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8299:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8302:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8292:6:28"},"nodeType":"YulFunctionCall","src":"8292:12:28"},"nodeType":"YulExpressionStatement","src":"8292:12:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8278:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"8286:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8275:2:28"},"nodeType":"YulFunctionCall","src":"8275:14:28"},"nodeType":"YulIf","src":"8272:34:28"},{"nodeType":"YulVariableDeclaration","src":"8315:32:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8329:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"8340:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8325:3:28"},"nodeType":"YulFunctionCall","src":"8325:22:28"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"8319:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"8387:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8396:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8399:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8389:6:28"},"nodeType":"YulFunctionCall","src":"8389:12:28"},"nodeType":"YulExpressionStatement","src":"8389:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8367:7:28"},{"name":"_2","nodeType":"YulIdentifier","src":"8376:2:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8363:3:28"},"nodeType":"YulFunctionCall","src":"8363:16:28"},{"kind":"number","nodeType":"YulLiteral","src":"8381:4:28","type":"","value":"0xc0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8359:3:28"},"nodeType":"YulFunctionCall","src":"8359:27:28"},"nodeType":"YulIf","src":"8356:47:28"},{"nodeType":"YulVariableDeclaration","src":"8412:30:28","value":{"arguments":[],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8425:15:28"},"nodeType":"YulFunctionCall","src":"8425:17:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8416:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8458:5:28"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"8478:2:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8465:12:28"},"nodeType":"YulFunctionCall","src":"8465:16:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8451:6:28"},"nodeType":"YulFunctionCall","src":"8451:31:28"},"nodeType":"YulExpressionStatement","src":"8451:31:28"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8502:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"8509:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8498:3:28"},"nodeType":"YulFunctionCall","src":"8498:14:28"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"8537:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"8541:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8533:3:28"},"nodeType":"YulFunctionCall","src":"8533:11:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"8514:18:28"},"nodeType":"YulFunctionCall","src":"8514:31:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8491:6:28"},"nodeType":"YulFunctionCall","src":"8491:55:28"},"nodeType":"YulExpressionStatement","src":"8491:55:28"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8566:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"8573:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8562:3:28"},"nodeType":"YulFunctionCall","src":"8562:14:28"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"8600:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"8604:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8596:3:28"},"nodeType":"YulFunctionCall","src":"8596:11:28"}],"functionName":{"name":"abi_decode_uint32","nodeType":"YulIdentifier","src":"8578:17:28"},"nodeType":"YulFunctionCall","src":"8578:30:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8555:6:28"},"nodeType":"YulFunctionCall","src":"8555:54:28"},"nodeType":"YulExpressionStatement","src":"8555:54:28"},{"nodeType":"YulVariableDeclaration","src":"8618:41:28","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"8651:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"8655:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8647:3:28"},"nodeType":"YulFunctionCall","src":"8647:11:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8634:12:28"},"nodeType":"YulFunctionCall","src":"8634:25:28"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"8622:8:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"8688:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8697:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8700:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8690:6:28"},"nodeType":"YulFunctionCall","src":"8690:12:28"},"nodeType":"YulExpressionStatement","src":"8690:12:28"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"8674:8:28"},{"name":"_1","nodeType":"YulIdentifier","src":"8684:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8671:2:28"},"nodeType":"YulFunctionCall","src":"8671:16:28"},"nodeType":"YulIf","src":"8668:36:28"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8724:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"8731:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8720:3:28"},"nodeType":"YulFunctionCall","src":"8720:14:28"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"8758:2:28"},{"name":"offset_1","nodeType":"YulIdentifier","src":"8762:8:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8754:3:28"},"nodeType":"YulFunctionCall","src":"8754:17:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8773:7:28"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"8736:17:28"},"nodeType":"YulFunctionCall","src":"8736:45:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8713:6:28"},"nodeType":"YulFunctionCall","src":"8713:69:28"},"nodeType":"YulExpressionStatement","src":"8713:69:28"},{"nodeType":"YulVariableDeclaration","src":"8791:42:28","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"8824:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"8828:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8820:3:28"},"nodeType":"YulFunctionCall","src":"8820:12:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8807:12:28"},"nodeType":"YulFunctionCall","src":"8807:26:28"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"8795:8:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"8862:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8871:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8874:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8864:6:28"},"nodeType":"YulFunctionCall","src":"8864:12:28"},"nodeType":"YulExpressionStatement","src":"8864:12:28"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"8848:8:28"},{"name":"_1","nodeType":"YulIdentifier","src":"8858:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8845:2:28"},"nodeType":"YulFunctionCall","src":"8845:16:28"},"nodeType":"YulIf","src":"8842:36:28"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8898:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"8905:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8894:3:28"},"nodeType":"YulFunctionCall","src":"8894:15:28"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"8933:2:28"},{"name":"offset_2","nodeType":"YulIdentifier","src":"8937:8:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8929:3:28"},"nodeType":"YulFunctionCall","src":"8929:17:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8948:7:28"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"8911:17:28"},"nodeType":"YulFunctionCall","src":"8911:45:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8887:6:28"},"nodeType":"YulFunctionCall","src":"8887:70:28"},"nodeType":"YulExpressionStatement","src":"8887:70:28"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8977:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"8984:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8973:3:28"},"nodeType":"YulFunctionCall","src":"8973:15:28"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"9013:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"9017:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9009:3:28"},"nodeType":"YulFunctionCall","src":"9009:12:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"8990:18:28"},"nodeType":"YulFunctionCall","src":"8990:32:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8966:6:28"},"nodeType":"YulFunctionCall","src":"8966:57:28"},"nodeType":"YulExpressionStatement","src":"8966:57:28"},{"nodeType":"YulAssignment","src":"9032:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"9042:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9032:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"9056:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9089:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9100:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9085:3:28"},"nodeType":"YulFunctionCall","src":"9085:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9072:12:28"},"nodeType":"YulFunctionCall","src":"9072:32:28"},"variables":[{"name":"offset_3","nodeType":"YulTypedName","src":"9060:8:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"9133:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9142:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9145:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9135:6:28"},"nodeType":"YulFunctionCall","src":"9135:12:28"},"nodeType":"YulExpressionStatement","src":"9135:12:28"}]},"condition":{"arguments":[{"name":"offset_3","nodeType":"YulIdentifier","src":"9119:8:28"},{"name":"_1","nodeType":"YulIdentifier","src":"9129:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9116:2:28"},"nodeType":"YulFunctionCall","src":"9116:16:28"},"nodeType":"YulIf","src":"9113:36:28"},{"nodeType":"YulAssignment","src":"9158:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9190:9:28"},{"name":"offset_3","nodeType":"YulIdentifier","src":"9201:8:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9186:3:28"},"nodeType":"YulFunctionCall","src":"9186:24:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9212:7:28"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"9168:17:28"},"nodeType":"YulFunctionCall","src":"9168:52:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9158:6:28"}]}]},"name":"abi_decode_tuple_t_struct$_UserProfile_$6477_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8076:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8087:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8099:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8107:6:28","type":""}],"src":"7992:1234:28"},{"body":{"nodeType":"YulBlock","src":"9286:325:28","statements":[{"nodeType":"YulAssignment","src":"9296:22:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9310:1:28","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"9313:4:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9306:3:28"},"nodeType":"YulFunctionCall","src":"9306:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9296:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"9327:38:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9357:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"9363:1:28","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9353:3:28"},"nodeType":"YulFunctionCall","src":"9353:12:28"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"9331:18:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"9404:31:28","statements":[{"nodeType":"YulAssignment","src":"9406:27:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9420:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"9428:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9416:3:28"},"nodeType":"YulFunctionCall","src":"9416:17:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9406:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"9384:18:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9377:6:28"},"nodeType":"YulFunctionCall","src":"9377:26:28"},"nodeType":"YulIf","src":"9374:61:28"},{"body":{"nodeType":"YulBlock","src":"9494:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9515:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9522:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9527:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9518:3:28"},"nodeType":"YulFunctionCall","src":"9518:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9508:6:28"},"nodeType":"YulFunctionCall","src":"9508:31:28"},"nodeType":"YulExpressionStatement","src":"9508:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9559:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9562:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9552:6:28"},"nodeType":"YulFunctionCall","src":"9552:15:28"},"nodeType":"YulExpressionStatement","src":"9552:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9587:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9590:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9580:6:28"},"nodeType":"YulFunctionCall","src":"9580:15:28"},"nodeType":"YulExpressionStatement","src":"9580:15:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"9450:18:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9473:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"9481:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9470:2:28"},"nodeType":"YulFunctionCall","src":"9470:14:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9447:2:28"},"nodeType":"YulFunctionCall","src":"9447:38:28"},"nodeType":"YulIf","src":"9444:161:28"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"9266:4:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9275:6:28","type":""}],"src":"9231:380:28"},{"body":{"nodeType":"YulBlock","src":"9790:236:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9807:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9818:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9800:6:28"},"nodeType":"YulFunctionCall","src":"9800:21:28"},"nodeType":"YulExpressionStatement","src":"9800:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9841:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9852:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9837:3:28"},"nodeType":"YulFunctionCall","src":"9837:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"9857:2:28","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9830:6:28"},"nodeType":"YulFunctionCall","src":"9830:30:28"},"nodeType":"YulExpressionStatement","src":"9830:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9880:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9891:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9876:3:28"},"nodeType":"YulFunctionCall","src":"9876:18:28"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"9896:34:28","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9869:6:28"},"nodeType":"YulFunctionCall","src":"9869:62:28"},"nodeType":"YulExpressionStatement","src":"9869:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9951:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9962:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9947:3:28"},"nodeType":"YulFunctionCall","src":"9947:18:28"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"9967:16:28","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9940:6:28"},"nodeType":"YulFunctionCall","src":"9940:44:28"},"nodeType":"YulExpressionStatement","src":"9940:44:28"},{"nodeType":"YulAssignment","src":"9993:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10005:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10016:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10001:3:28"},"nodeType":"YulFunctionCall","src":"10001:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9993:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9767:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9781:4:28","type":""}],"src":"9616:410:28"},{"body":{"nodeType":"YulBlock","src":"10138:87:28","statements":[{"nodeType":"YulAssignment","src":"10148:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10160:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10171:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10156:3:28"},"nodeType":"YulFunctionCall","src":"10156:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10148:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10190:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10205:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"10213:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10201:3:28"},"nodeType":"YulFunctionCall","src":"10201:17:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10183:6:28"},"nodeType":"YulFunctionCall","src":"10183:36:28"},"nodeType":"YulExpressionStatement","src":"10183:36:28"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10107:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10118:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10129:4:28","type":""}],"src":"10031:194:28"},{"body":{"nodeType":"YulBlock","src":"10404:223:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10421:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10432:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10414:6:28"},"nodeType":"YulFunctionCall","src":"10414:21:28"},"nodeType":"YulExpressionStatement","src":"10414:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10455:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10466:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10451:3:28"},"nodeType":"YulFunctionCall","src":"10451:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"10471:2:28","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10444:6:28"},"nodeType":"YulFunctionCall","src":"10444:30:28"},"nodeType":"YulExpressionStatement","src":"10444:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10494:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10505:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10490:3:28"},"nodeType":"YulFunctionCall","src":"10490:18:28"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"10510:34:28","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10483:6:28"},"nodeType":"YulFunctionCall","src":"10483:62:28"},"nodeType":"YulExpressionStatement","src":"10483:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10565:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10576:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10561:3:28"},"nodeType":"YulFunctionCall","src":"10561:18:28"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"10581:3:28","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10554:6:28"},"nodeType":"YulFunctionCall","src":"10554:31:28"},"nodeType":"YulExpressionStatement","src":"10554:31:28"},{"nodeType":"YulAssignment","src":"10594:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10606:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10617:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10602:3:28"},"nodeType":"YulFunctionCall","src":"10602:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10594:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10381:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10395:4:28","type":""}],"src":"10230:397:28"},{"body":{"nodeType":"YulBlock","src":"10806:251:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10823:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10834:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10816:6:28"},"nodeType":"YulFunctionCall","src":"10816:21:28"},"nodeType":"YulExpressionStatement","src":"10816:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10857:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10868:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10853:3:28"},"nodeType":"YulFunctionCall","src":"10853:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"10873:2:28","type":"","value":"61"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10846:6:28"},"nodeType":"YulFunctionCall","src":"10846:30:28"},"nodeType":"YulExpressionStatement","src":"10846:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10896:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10907:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10892:3:28"},"nodeType":"YulFunctionCall","src":"10892:18:28"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"10912:34:28","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10885:6:28"},"nodeType":"YulFunctionCall","src":"10885:62:28"},"nodeType":"YulExpressionStatement","src":"10885:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10967:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10978:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10963:3:28"},"nodeType":"YulFunctionCall","src":"10963:18:28"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"10983:31:28","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10956:6:28"},"nodeType":"YulFunctionCall","src":"10956:59:28"},"nodeType":"YulExpressionStatement","src":"10956:59:28"},{"nodeType":"YulAssignment","src":"11024:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11036:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11047:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11032:3:28"},"nodeType":"YulFunctionCall","src":"11032:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11024:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10783:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10797:4:28","type":""}],"src":"10632:425:28"},{"body":{"nodeType":"YulBlock","src":"11236:237:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11253:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11264:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11246:6:28"},"nodeType":"YulFunctionCall","src":"11246:21:28"},"nodeType":"YulExpressionStatement","src":"11246:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11287:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11298:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11283:3:28"},"nodeType":"YulFunctionCall","src":"11283:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"11303:2:28","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11276:6:28"},"nodeType":"YulFunctionCall","src":"11276:30:28"},"nodeType":"YulExpressionStatement","src":"11276:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11326:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11337:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11322:3:28"},"nodeType":"YulFunctionCall","src":"11322:18:28"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"11342:34:28","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11315:6:28"},"nodeType":"YulFunctionCall","src":"11315:62:28"},"nodeType":"YulExpressionStatement","src":"11315:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11397:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11408:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11393:3:28"},"nodeType":"YulFunctionCall","src":"11393:18:28"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"11413:17:28","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11386:6:28"},"nodeType":"YulFunctionCall","src":"11386:45:28"},"nodeType":"YulExpressionStatement","src":"11386:45:28"},{"nodeType":"YulAssignment","src":"11440:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11452:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11463:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11448:3:28"},"nodeType":"YulFunctionCall","src":"11448:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11440:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11213:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11227:4:28","type":""}],"src":"11062:411:28"},{"body":{"nodeType":"YulBlock","src":"11652:234:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11669:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11680:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11662:6:28"},"nodeType":"YulFunctionCall","src":"11662:21:28"},"nodeType":"YulExpressionStatement","src":"11662:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11703:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11714:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11699:3:28"},"nodeType":"YulFunctionCall","src":"11699:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"11719:2:28","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11692:6:28"},"nodeType":"YulFunctionCall","src":"11692:30:28"},"nodeType":"YulExpressionStatement","src":"11692:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11742:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11753:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11738:3:28"},"nodeType":"YulFunctionCall","src":"11738:18:28"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nodeType":"YulLiteral","src":"11758:34:28","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11731:6:28"},"nodeType":"YulFunctionCall","src":"11731:62:28"},"nodeType":"YulExpressionStatement","src":"11731:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11813:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11824:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11809:3:28"},"nodeType":"YulFunctionCall","src":"11809:18:28"},{"hexValue":"64656c656761746563616c6c","kind":"string","nodeType":"YulLiteral","src":"11829:14:28","type":"","value":"delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11802:6:28"},"nodeType":"YulFunctionCall","src":"11802:42:28"},"nodeType":"YulExpressionStatement","src":"11802:42:28"},{"nodeType":"YulAssignment","src":"11853:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11865:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11876:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11861:3:28"},"nodeType":"YulFunctionCall","src":"11861:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11853:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11629:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11643:4:28","type":""}],"src":"11478:408:28"},{"body":{"nodeType":"YulBlock","src":"12065:234:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12082:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12093:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12075:6:28"},"nodeType":"YulFunctionCall","src":"12075:21:28"},"nodeType":"YulExpressionStatement","src":"12075:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12116:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12127:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12112:3:28"},"nodeType":"YulFunctionCall","src":"12112:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"12132:2:28","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12105:6:28"},"nodeType":"YulFunctionCall","src":"12105:30:28"},"nodeType":"YulExpressionStatement","src":"12105:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12155:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12166:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12151:3:28"},"nodeType":"YulFunctionCall","src":"12151:18:28"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nodeType":"YulLiteral","src":"12171:34:28","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12144:6:28"},"nodeType":"YulFunctionCall","src":"12144:62:28"},"nodeType":"YulExpressionStatement","src":"12144:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12226:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12237:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12222:3:28"},"nodeType":"YulFunctionCall","src":"12222:18:28"},{"hexValue":"6163746976652070726f7879","kind":"string","nodeType":"YulLiteral","src":"12242:14:28","type":"","value":"active proxy"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12215:6:28"},"nodeType":"YulFunctionCall","src":"12215:42:28"},"nodeType":"YulExpressionStatement","src":"12215:42:28"},{"nodeType":"YulAssignment","src":"12266:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12278:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12289:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12274:3:28"},"nodeType":"YulFunctionCall","src":"12274:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12266:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12042:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12056:4:28","type":""}],"src":"11891:408:28"},{"body":{"nodeType":"YulBlock","src":"12478:223:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12495:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12506:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12488:6:28"},"nodeType":"YulFunctionCall","src":"12488:21:28"},"nodeType":"YulExpressionStatement","src":"12488:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12529:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12540:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12525:3:28"},"nodeType":"YulFunctionCall","src":"12525:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"12545:2:28","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12518:6:28"},"nodeType":"YulFunctionCall","src":"12518:30:28"},"nodeType":"YulExpressionStatement","src":"12518:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12568:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12579:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12564:3:28"},"nodeType":"YulFunctionCall","src":"12564:18:28"},{"hexValue":"546865206163636f756e7420646f6573206e6f7420686176652070726f66696c","kind":"string","nodeType":"YulLiteral","src":"12584:34:28","type":"","value":"The account does not have profil"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12557:6:28"},"nodeType":"YulFunctionCall","src":"12557:62:28"},"nodeType":"YulExpressionStatement","src":"12557:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12639:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12650:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12635:3:28"},"nodeType":"YulFunctionCall","src":"12635:18:28"},{"hexValue":"65","kind":"string","nodeType":"YulLiteral","src":"12655:3:28","type":"","value":"e"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12628:6:28"},"nodeType":"YulFunctionCall","src":"12628:31:28"},"nodeType":"YulExpressionStatement","src":"12628:31:28"},{"nodeType":"YulAssignment","src":"12668:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12680:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12691:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12676:3:28"},"nodeType":"YulFunctionCall","src":"12676:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12668:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_886b867501ea49c352a9c24cd3e606ffa17dba28c8e4cc81c5f25cf37ba68cbb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12455:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12469:4:28","type":""}],"src":"12304:397:28"},{"body":{"nodeType":"YulBlock","src":"12825:99:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12842:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12853:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12835:6:28"},"nodeType":"YulFunctionCall","src":"12835:21:28"},"nodeType":"YulExpressionStatement","src":"12835:21:28"},{"nodeType":"YulAssignment","src":"12865:53:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12891:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12903:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12914:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12899:3:28"},"nodeType":"YulFunctionCall","src":"12899:18:28"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"12873:17:28"},"nodeType":"YulFunctionCall","src":"12873:45:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12865:4:28"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12794:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12805:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12816:4:28","type":""}],"src":"12706:218:28"},{"body":{"nodeType":"YulBlock","src":"13007:167:28","statements":[{"body":{"nodeType":"YulBlock","src":"13053:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13062:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13065:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13055:6:28"},"nodeType":"YulFunctionCall","src":"13055:12:28"},"nodeType":"YulExpressionStatement","src":"13055:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13028:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"13037:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13024:3:28"},"nodeType":"YulFunctionCall","src":"13024:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"13049:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13020:3:28"},"nodeType":"YulFunctionCall","src":"13020:32:28"},"nodeType":"YulIf","src":"13017:52:28"},{"nodeType":"YulVariableDeclaration","src":"13078:29:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13097:9:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13091:5:28"},"nodeType":"YulFunctionCall","src":"13091:16:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13082:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13138:5:28"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"13116:21:28"},"nodeType":"YulFunctionCall","src":"13116:28:28"},"nodeType":"YulExpressionStatement","src":"13116:28:28"},{"nodeType":"YulAssignment","src":"13153:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"13163:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13153:6:28"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12973:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12984:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12996:6:28","type":""}],"src":"12929:245:28"},{"body":{"nodeType":"YulBlock","src":"13353:224:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13370:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13381:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13363:6:28"},"nodeType":"YulFunctionCall","src":"13363:21:28"},"nodeType":"YulExpressionStatement","src":"13363:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13404:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13415:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13400:3:28"},"nodeType":"YulFunctionCall","src":"13400:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"13420:2:28","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13393:6:28"},"nodeType":"YulFunctionCall","src":"13393:30:28"},"nodeType":"YulExpressionStatement","src":"13393:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13443:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13454:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13439:3:28"},"nodeType":"YulFunctionCall","src":"13439:18:28"},{"hexValue":"696e76616c696420726573706f6e73652066726f6d20646174612073746f7261","kind":"string","nodeType":"YulLiteral","src":"13459:34:28","type":"","value":"invalid response from data stora"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13432:6:28"},"nodeType":"YulFunctionCall","src":"13432:62:28"},"nodeType":"YulExpressionStatement","src":"13432:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13514:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13525:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13510:3:28"},"nodeType":"YulFunctionCall","src":"13510:18:28"},{"hexValue":"6765","kind":"string","nodeType":"YulLiteral","src":"13530:4:28","type":"","value":"ge"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13503:6:28"},"nodeType":"YulFunctionCall","src":"13503:32:28"},"nodeType":"YulExpressionStatement","src":"13503:32:28"},{"nodeType":"YulAssignment","src":"13544:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13556:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13567:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13552:3:28"},"nodeType":"YulFunctionCall","src":"13552:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13544:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_412c23c044f12933032e9eb6ca8a55a186f713b6708f4a9e879761e14440c687__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13330:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13344:4:28","type":""}],"src":"13179:398:28"},{"body":{"nodeType":"YulBlock","src":"13756:246:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13773:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13784:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13766:6:28"},"nodeType":"YulFunctionCall","src":"13766:21:28"},"nodeType":"YulExpressionStatement","src":"13766:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13807:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13818:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13803:3:28"},"nodeType":"YulFunctionCall","src":"13803:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"13823:2:28","type":"","value":"56"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13796:6:28"},"nodeType":"YulFunctionCall","src":"13796:30:28"},"nodeType":"YulExpressionStatement","src":"13796:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13846:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13857:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13842:3:28"},"nodeType":"YulFunctionCall","src":"13842:18:28"},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c","kind":"string","nodeType":"YulLiteral","src":"13862:34:28","type":"","value":"UUPSUpgradeable: must not be cal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13835:6:28"},"nodeType":"YulFunctionCall","src":"13835:62:28"},"nodeType":"YulExpressionStatement","src":"13835:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13917:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13928:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13913:3:28"},"nodeType":"YulFunctionCall","src":"13913:18:28"},{"hexValue":"6c6564207468726f7567682064656c656761746563616c6c","kind":"string","nodeType":"YulLiteral","src":"13933:26:28","type":"","value":"led through delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13906:6:28"},"nodeType":"YulFunctionCall","src":"13906:54:28"},"nodeType":"YulExpressionStatement","src":"13906:54:28"},{"nodeType":"YulAssignment","src":"13969:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13981:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13992:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13977:3:28"},"nodeType":"YulFunctionCall","src":"13977:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13969:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13733:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13747:4:28","type":""}],"src":"13582:420:28"},{"body":{"nodeType":"YulBlock","src":"14181:170:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14198:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14209:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14191:6:28"},"nodeType":"YulFunctionCall","src":"14191:21:28"},"nodeType":"YulExpressionStatement","src":"14191:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14232:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14243:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14228:3:28"},"nodeType":"YulFunctionCall","src":"14228:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"14248:2:28","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14221:6:28"},"nodeType":"YulFunctionCall","src":"14221:30:28"},"nodeType":"YulExpressionStatement","src":"14221:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14271:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14282:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14267:3:28"},"nodeType":"YulFunctionCall","src":"14267:18:28"},{"hexValue":"73746f72616765207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"14287:22:28","type":"","value":"storage zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14260:6:28"},"nodeType":"YulFunctionCall","src":"14260:50:28"},"nodeType":"YulExpressionStatement","src":"14260:50:28"},{"nodeType":"YulAssignment","src":"14319:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14331:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14342:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14327:3:28"},"nodeType":"YulFunctionCall","src":"14327:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14319:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_ab1237ff2a5428b64010bd9fbc5393e377fb2464f5079afa40305359d5d0ea2d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14158:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14172:4:28","type":""}],"src":"14007:344:28"},{"body":{"nodeType":"YulBlock","src":"14530:228:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14547:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14558:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14540:6:28"},"nodeType":"YulFunctionCall","src":"14540:21:28"},"nodeType":"YulExpressionStatement","src":"14540:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14581:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14592:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14577:3:28"},"nodeType":"YulFunctionCall","src":"14577:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"14597:2:28","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14570:6:28"},"nodeType":"YulFunctionCall","src":"14570:30:28"},"nodeType":"YulExpressionStatement","src":"14570:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14620:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14631:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14616:3:28"},"nodeType":"YulFunctionCall","src":"14616:18:28"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"14636:34:28","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14609:6:28"},"nodeType":"YulFunctionCall","src":"14609:62:28"},"nodeType":"YulExpressionStatement","src":"14609:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14691:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14702:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14687:3:28"},"nodeType":"YulFunctionCall","src":"14687:18:28"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"14707:8:28","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14680:6:28"},"nodeType":"YulFunctionCall","src":"14680:36:28"},"nodeType":"YulExpressionStatement","src":"14680:36:28"},{"nodeType":"YulAssignment","src":"14725:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14737:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14748:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14733:3:28"},"nodeType":"YulFunctionCall","src":"14733:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14725:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14507:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14521:4:28","type":""}],"src":"14356:402:28"},{"body":{"nodeType":"YulBlock","src":"14937:173:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14954:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14965:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14947:6:28"},"nodeType":"YulFunctionCall","src":"14947:21:28"},"nodeType":"YulExpressionStatement","src":"14947:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14988:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14999:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14984:3:28"},"nodeType":"YulFunctionCall","src":"14984:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"15004:2:28","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14977:6:28"},"nodeType":"YulFunctionCall","src":"14977:30:28"},"nodeType":"YulExpressionStatement","src":"14977:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15027:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15038:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15023:3:28"},"nodeType":"YulFunctionCall","src":"15023:18:28"},{"hexValue":"73746f72616765206e6f7420696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"15043:25:28","type":"","value":"storage not initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15016:6:28"},"nodeType":"YulFunctionCall","src":"15016:53:28"},"nodeType":"YulExpressionStatement","src":"15016:53:28"},{"nodeType":"YulAssignment","src":"15078:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15090:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15101:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15086:3:28"},"nodeType":"YulFunctionCall","src":"15086:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15078:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_91a54eeda269cc8a80a3dcdf518e5f3a12f24479e680e6f470b183a6b5d3ecff__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14914:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14928:4:28","type":""}],"src":"14763:347:28"},{"body":{"nodeType":"YulBlock","src":"15170:65:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15187:1:28","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"15190:3:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15180:6:28"},"nodeType":"YulFunctionCall","src":"15180:14:28"},"nodeType":"YulExpressionStatement","src":"15180:14:28"},{"nodeType":"YulAssignment","src":"15203:26:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15221:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15224:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"15211:9:28"},"nodeType":"YulFunctionCall","src":"15211:18:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15203:4:28"}]}]},"name":"array_dataslot_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"15153:3:28","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"15161:4:28","type":""}],"src":"15115:120:28"},{"body":{"nodeType":"YulBlock","src":"15320:464:28","statements":[{"body":{"nodeType":"YulBlock","src":"15353:425:28","statements":[{"nodeType":"YulVariableDeclaration","src":"15367:11:28","value":{"kind":"number","nodeType":"YulLiteral","src":"15377:1:28","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15371:2:28","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"15398:2:28"},{"name":"array","nodeType":"YulIdentifier","src":"15402:5:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15391:6:28"},"nodeType":"YulFunctionCall","src":"15391:17:28"},"nodeType":"YulExpressionStatement","src":"15391:17:28"},{"nodeType":"YulVariableDeclaration","src":"15421:31:28","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"15443:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"15447:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"15433:9:28"},"nodeType":"YulFunctionCall","src":"15433:19:28"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"15425:4:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15465:57:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15488:4:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15498:1:28","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"15505:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"15517:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15501:3:28"},"nodeType":"YulFunctionCall","src":"15501:19:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"15494:3:28"},"nodeType":"YulFunctionCall","src":"15494:27:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15484:3:28"},"nodeType":"YulFunctionCall","src":"15484:38:28"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"15469:11:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"15559:23:28","statements":[{"nodeType":"YulAssignment","src":"15561:19:28","value":{"name":"data","nodeType":"YulIdentifier","src":"15576:4:28"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"15561:11:28"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"15541:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"15553:4:28","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15538:2:28"},"nodeType":"YulFunctionCall","src":"15538:20:28"},"nodeType":"YulIf","src":"15535:47:28"},{"nodeType":"YulVariableDeclaration","src":"15595:41:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15609:4:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15619:1:28","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"15626:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"15631:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15622:3:28"},"nodeType":"YulFunctionCall","src":"15622:12:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"15615:3:28"},"nodeType":"YulFunctionCall","src":"15615:20:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15605:3:28"},"nodeType":"YulFunctionCall","src":"15605:31:28"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"15599:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15649:24:28","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"15662:11:28"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"15653:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"15747:21:28","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"15756:5:28"},{"name":"_1","nodeType":"YulIdentifier","src":"15763:2:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15749:6:28"},"nodeType":"YulFunctionCall","src":"15749:17:28"},"nodeType":"YulExpressionStatement","src":"15749:17:28"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"15697:5:28"},{"name":"_2","nodeType":"YulIdentifier","src":"15704:2:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15694:2:28"},"nodeType":"YulFunctionCall","src":"15694:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15708:26:28","statements":[{"nodeType":"YulAssignment","src":"15710:22:28","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"15723:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"15730:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15719:3:28"},"nodeType":"YulFunctionCall","src":"15719:13:28"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"15710:5:28"}]}]},"pre":{"nodeType":"YulBlock","src":"15690:3:28","statements":[]},"src":"15686:82:28"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"15336:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"15341:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15333:2:28"},"nodeType":"YulFunctionCall","src":"15333:11:28"},"nodeType":"YulIf","src":"15330:448:28"}]},"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"15292:5:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"15299:3:28","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"15304:10:28","type":""}],"src":"15240:544:28"},{"body":{"nodeType":"YulBlock","src":"15874:81:28","statements":[{"nodeType":"YulAssignment","src":"15884:65:28","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15899:4:28"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15917:1:28","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"15920:3:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15913:3:28"},"nodeType":"YulFunctionCall","src":"15913:11:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15930:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15926:3:28"},"nodeType":"YulFunctionCall","src":"15926:6:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"15909:3:28"},"nodeType":"YulFunctionCall","src":"15909:24:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15905:3:28"},"nodeType":"YulFunctionCall","src":"15905:29:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15895:3:28"},"nodeType":"YulFunctionCall","src":"15895:40:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15941:1:28","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"15944:3:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15937:3:28"},"nodeType":"YulFunctionCall","src":"15937:11:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"15892:2:28"},"nodeType":"YulFunctionCall","src":"15892:57:28"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"15884:4:28"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"15851:4:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"15857:3:28","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"15865:4:28","type":""}],"src":"15789:166:28"},{"body":{"nodeType":"YulBlock","src":"16054:1254:28","statements":[{"nodeType":"YulVariableDeclaration","src":"16064:24:28","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16084:3:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16078:5:28"},"nodeType":"YulFunctionCall","src":"16078:10:28"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"16068:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"16131:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16133:16:28"},"nodeType":"YulFunctionCall","src":"16133:18:28"},"nodeType":"YulExpressionStatement","src":"16133:18:28"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"16103:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"16111:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16100:2:28"},"nodeType":"YulFunctionCall","src":"16100:30:28"},"nodeType":"YulIf","src":"16097:56:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16205:4:28"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16243:4:28"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"16237:5:28"},"nodeType":"YulFunctionCall","src":"16237:11:28"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"16211:25:28"},"nodeType":"YulFunctionCall","src":"16211:38:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"16251:6:28"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"16162:42:28"},"nodeType":"YulFunctionCall","src":"16162:96:28"},"nodeType":"YulExpressionStatement","src":"16162:96:28"},{"nodeType":"YulVariableDeclaration","src":"16267:18:28","value":{"kind":"number","nodeType":"YulLiteral","src":"16284:1:28","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"16271:9:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16294:23:28","value":{"kind":"number","nodeType":"YulLiteral","src":"16313:4:28","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"16298:11:28","type":""}]},{"nodeType":"YulAssignment","src":"16326:24:28","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"16339:11:28"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"16326:9:28"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"16396:655:28","statements":[{"nodeType":"YulVariableDeclaration","src":"16410:35:28","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"16429:6:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16441:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16437:3:28"},"nodeType":"YulFunctionCall","src":"16437:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16425:3:28"},"nodeType":"YulFunctionCall","src":"16425:20:28"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"16414:7:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16458:48:28","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16501:4:28"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"16472:28:28"},"nodeType":"YulFunctionCall","src":"16472:34:28"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"16462:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16519:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"16528:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"16523:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"16606:172:28","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"16631:6:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16649:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"16654:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16645:3:28"},"nodeType":"YulFunctionCall","src":"16645:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16639:5:28"},"nodeType":"YulFunctionCall","src":"16639:26:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"16624:6:28"},"nodeType":"YulFunctionCall","src":"16624:42:28"},"nodeType":"YulExpressionStatement","src":"16624:42:28"},{"nodeType":"YulAssignment","src":"16683:24:28","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"16697:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"16705:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16693:3:28"},"nodeType":"YulFunctionCall","src":"16693:14:28"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"16683:6:28"}]},{"nodeType":"YulAssignment","src":"16724:40:28","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"16741:9:28"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"16752:11:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16737:3:28"},"nodeType":"YulFunctionCall","src":"16737:27:28"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"16724:9:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16553:1:28"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"16556:7:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16550:2:28"},"nodeType":"YulFunctionCall","src":"16550:14:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16565:28:28","statements":[{"nodeType":"YulAssignment","src":"16567:24:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16576:1:28"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"16579:11:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16572:3:28"},"nodeType":"YulFunctionCall","src":"16572:19:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"16567:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"16546:3:28","statements":[]},"src":"16542:236:28"},{"body":{"nodeType":"YulBlock","src":"16826:166:28","statements":[{"nodeType":"YulVariableDeclaration","src":"16844:43:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16871:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"16876:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16867:3:28"},"nodeType":"YulFunctionCall","src":"16867:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16861:5:28"},"nodeType":"YulFunctionCall","src":"16861:26:28"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"16848:9:28","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"16911:6:28"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"16923:9:28"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16950:1:28","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"16953:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16946:3:28"},"nodeType":"YulFunctionCall","src":"16946:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"16962:3:28","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16942:3:28"},"nodeType":"YulFunctionCall","src":"16942:24:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16972:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16968:3:28"},"nodeType":"YulFunctionCall","src":"16968:6:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"16938:3:28"},"nodeType":"YulFunctionCall","src":"16938:37:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16934:3:28"},"nodeType":"YulFunctionCall","src":"16934:42:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16919:3:28"},"nodeType":"YulFunctionCall","src":"16919:58:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"16904:6:28"},"nodeType":"YulFunctionCall","src":"16904:74:28"},"nodeType":"YulExpressionStatement","src":"16904:74:28"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"16797:7:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"16806:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16794:2:28"},"nodeType":"YulFunctionCall","src":"16794:19:28"},"nodeType":"YulIf","src":"16791:201:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17012:4:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17026:1:28","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"17029:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17022:3:28"},"nodeType":"YulFunctionCall","src":"17022:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"17038:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17018:3:28"},"nodeType":"YulFunctionCall","src":"17018:22:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17005:6:28"},"nodeType":"YulFunctionCall","src":"17005:36:28"},"nodeType":"YulExpressionStatement","src":"17005:36:28"}]},"nodeType":"YulCase","src":"16389:662:28","value":{"kind":"number","nodeType":"YulLiteral","src":"16394:1:28","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"17068:234:28","statements":[{"nodeType":"YulVariableDeclaration","src":"17082:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"17095:1:28","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"17086:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"17131:67:28","statements":[{"nodeType":"YulAssignment","src":"17149:35:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17168:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"17173:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17164:3:28"},"nodeType":"YulFunctionCall","src":"17164:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17158:5:28"},"nodeType":"YulFunctionCall","src":"17158:26:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17149:5:28"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"17112:6:28"},"nodeType":"YulIf","src":"17109:89:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17218:4:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17277:5:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"17284:6:28"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"17224:52:28"},"nodeType":"YulFunctionCall","src":"17224:67:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17211:6:28"},"nodeType":"YulFunctionCall","src":"17211:81:28"},"nodeType":"YulExpressionStatement","src":"17211:81:28"}]},"nodeType":"YulCase","src":"17060:242:28","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"16369:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"16377:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16366:2:28"},"nodeType":"YulFunctionCall","src":"16366:14:28"},"nodeType":"YulSwitch","src":"16359:943:28"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"16039:4:28","type":""},{"name":"src","nodeType":"YulTypedName","src":"16045:3:28","type":""}],"src":"15960:1348:28"},{"body":{"nodeType":"YulBlock","src":"17409:1254:28","statements":[{"nodeType":"YulVariableDeclaration","src":"17419:24:28","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17439:3:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17433:5:28"},"nodeType":"YulFunctionCall","src":"17433:10:28"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"17423:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"17486:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"17488:16:28"},"nodeType":"YulFunctionCall","src":"17488:18:28"},"nodeType":"YulExpressionStatement","src":"17488:18:28"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"17458:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"17466:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17455:2:28"},"nodeType":"YulFunctionCall","src":"17455:30:28"},"nodeType":"YulIf","src":"17452:56:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17560:4:28"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17598:4:28"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"17592:5:28"},"nodeType":"YulFunctionCall","src":"17592:11:28"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"17566:25:28"},"nodeType":"YulFunctionCall","src":"17566:38:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"17606:6:28"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"17517:42:28"},"nodeType":"YulFunctionCall","src":"17517:96:28"},"nodeType":"YulExpressionStatement","src":"17517:96:28"},{"nodeType":"YulVariableDeclaration","src":"17622:18:28","value":{"kind":"number","nodeType":"YulLiteral","src":"17639:1:28","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"17626:9:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17649:23:28","value":{"kind":"number","nodeType":"YulLiteral","src":"17668:4:28","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"17653:11:28","type":""}]},{"nodeType":"YulAssignment","src":"17681:24:28","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"17694:11:28"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"17681:9:28"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"17751:655:28","statements":[{"nodeType":"YulVariableDeclaration","src":"17765:35:28","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"17784:6:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17796:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17792:3:28"},"nodeType":"YulFunctionCall","src":"17792:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17780:3:28"},"nodeType":"YulFunctionCall","src":"17780:20:28"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"17769:7:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17813:48:28","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17856:4:28"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"17827:28:28"},"nodeType":"YulFunctionCall","src":"17827:34:28"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"17817:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17874:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"17883:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"17878:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"17961:172:28","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"17986:6:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18004:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"18009:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18000:3:28"},"nodeType":"YulFunctionCall","src":"18000:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17994:5:28"},"nodeType":"YulFunctionCall","src":"17994:26:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17979:6:28"},"nodeType":"YulFunctionCall","src":"17979:42:28"},"nodeType":"YulExpressionStatement","src":"17979:42:28"},{"nodeType":"YulAssignment","src":"18038:24:28","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"18052:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"18060:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18048:3:28"},"nodeType":"YulFunctionCall","src":"18048:14:28"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"18038:6:28"}]},{"nodeType":"YulAssignment","src":"18079:40:28","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"18096:9:28"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"18107:11:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18092:3:28"},"nodeType":"YulFunctionCall","src":"18092:27:28"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"18079:9:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17908:1:28"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"17911:7:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17905:2:28"},"nodeType":"YulFunctionCall","src":"17905:14:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17920:28:28","statements":[{"nodeType":"YulAssignment","src":"17922:24:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17931:1:28"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"17934:11:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17927:3:28"},"nodeType":"YulFunctionCall","src":"17927:19:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"17922:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"17901:3:28","statements":[]},"src":"17897:236:28"},{"body":{"nodeType":"YulBlock","src":"18181:166:28","statements":[{"nodeType":"YulVariableDeclaration","src":"18199:43:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18226:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"18231:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18222:3:28"},"nodeType":"YulFunctionCall","src":"18222:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18216:5:28"},"nodeType":"YulFunctionCall","src":"18216:26:28"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"18203:9:28","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"18266:6:28"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"18278:9:28"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18305:1:28","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"18308:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18301:3:28"},"nodeType":"YulFunctionCall","src":"18301:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"18317:3:28","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18297:3:28"},"nodeType":"YulFunctionCall","src":"18297:24:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18327:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18323:3:28"},"nodeType":"YulFunctionCall","src":"18323:6:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18293:3:28"},"nodeType":"YulFunctionCall","src":"18293:37:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18289:3:28"},"nodeType":"YulFunctionCall","src":"18289:42:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18274:3:28"},"nodeType":"YulFunctionCall","src":"18274:58:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18259:6:28"},"nodeType":"YulFunctionCall","src":"18259:74:28"},"nodeType":"YulExpressionStatement","src":"18259:74:28"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"18152:7:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"18161:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18149:2:28"},"nodeType":"YulFunctionCall","src":"18149:19:28"},"nodeType":"YulIf","src":"18146:201:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18367:4:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18381:1:28","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"18384:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18377:3:28"},"nodeType":"YulFunctionCall","src":"18377:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"18393:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18373:3:28"},"nodeType":"YulFunctionCall","src":"18373:22:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18360:6:28"},"nodeType":"YulFunctionCall","src":"18360:36:28"},"nodeType":"YulExpressionStatement","src":"18360:36:28"}]},"nodeType":"YulCase","src":"17744:662:28","value":{"kind":"number","nodeType":"YulLiteral","src":"17749:1:28","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"18423:234:28","statements":[{"nodeType":"YulVariableDeclaration","src":"18437:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"18450:1:28","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"18441:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"18486:67:28","statements":[{"nodeType":"YulAssignment","src":"18504:35:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18523:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"18528:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18519:3:28"},"nodeType":"YulFunctionCall","src":"18519:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18513:5:28"},"nodeType":"YulFunctionCall","src":"18513:26:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18504:5:28"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"18467:6:28"},"nodeType":"YulIf","src":"18464:89:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18573:4:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18632:5:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"18639:6:28"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"18579:52:28"},"nodeType":"YulFunctionCall","src":"18579:67:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18566:6:28"},"nodeType":"YulFunctionCall","src":"18566:81:28"},"nodeType":"YulExpressionStatement","src":"18566:81:28"}]},"nodeType":"YulCase","src":"18415:242:28","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"17724:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"17732:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17721:2:28"},"nodeType":"YulFunctionCall","src":"17721:14:28"},"nodeType":"YulSwitch","src":"17714:943:28"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"17394:4:28","type":""},{"name":"src","nodeType":"YulTypedName","src":"17400:3:28","type":""}],"src":"17313:1350:28"},{"body":{"nodeType":"YulBlock","src":"18817:168:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18834:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18849:6:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18865:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"18870:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18861:3:28"},"nodeType":"YulFunctionCall","src":"18861:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"18874:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18857:3:28"},"nodeType":"YulFunctionCall","src":"18857:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18845:3:28"},"nodeType":"YulFunctionCall","src":"18845:32:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18827:6:28"},"nodeType":"YulFunctionCall","src":"18827:51:28"},"nodeType":"YulExpressionStatement","src":"18827:51:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18898:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18909:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18894:3:28"},"nodeType":"YulFunctionCall","src":"18894:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"18914:2:28","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18887:6:28"},"nodeType":"YulFunctionCall","src":"18887:30:28"},"nodeType":"YulExpressionStatement","src":"18887:30:28"},{"nodeType":"YulAssignment","src":"18926:53:28","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18952:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18964:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18975:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18960:3:28"},"nodeType":"YulFunctionCall","src":"18960:18:28"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"18934:17:28"},"nodeType":"YulFunctionCall","src":"18934:45:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18926:4:28"}]}]},"name":"abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18778:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18789:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18797:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18808:4:28","type":""}],"src":"18668:317:28"},{"body":{"nodeType":"YulBlock","src":"19164:233:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19181:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19192:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19174:6:28"},"nodeType":"YulFunctionCall","src":"19174:21:28"},"nodeType":"YulExpressionStatement","src":"19174:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19215:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19226:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19211:3:28"},"nodeType":"YulFunctionCall","src":"19211:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"19231:2:28","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19204:6:28"},"nodeType":"YulFunctionCall","src":"19204:30:28"},"nodeType":"YulExpressionStatement","src":"19204:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19254:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19265:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19250:3:28"},"nodeType":"YulFunctionCall","src":"19250:18:28"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"19270:34:28","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19243:6:28"},"nodeType":"YulFunctionCall","src":"19243:62:28"},"nodeType":"YulExpressionStatement","src":"19243:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19325:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19336:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19321:3:28"},"nodeType":"YulFunctionCall","src":"19321:18:28"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"19341:13:28","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19314:6:28"},"nodeType":"YulFunctionCall","src":"19314:41:28"},"nodeType":"YulExpressionStatement","src":"19314:41:28"},{"nodeType":"YulAssignment","src":"19364:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19376:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19387:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19372:3:28"},"nodeType":"YulFunctionCall","src":"19372:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19364:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19141:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19155:4:28","type":""}],"src":"18990:407:28"},{"body":{"nodeType":"YulBlock","src":"19576:174:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19593:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19604:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19586:6:28"},"nodeType":"YulFunctionCall","src":"19586:21:28"},"nodeType":"YulExpressionStatement","src":"19586:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19627:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19638:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19623:3:28"},"nodeType":"YulFunctionCall","src":"19623:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"19643:2:28","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19616:6:28"},"nodeType":"YulFunctionCall","src":"19616:30:28"},"nodeType":"YulExpressionStatement","src":"19616:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19666:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19677:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19662:3:28"},"nodeType":"YulFunctionCall","src":"19662:18:28"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"19682:26:28","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19655:6:28"},"nodeType":"YulFunctionCall","src":"19655:54:28"},"nodeType":"YulExpressionStatement","src":"19655:54:28"},{"nodeType":"YulAssignment","src":"19718:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19730:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19741:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19726:3:28"},"nodeType":"YulFunctionCall","src":"19726:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19718:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19553:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19567:4:28","type":""}],"src":"19402:348:28"},{"body":{"nodeType":"YulBlock","src":"19836:103:28","statements":[{"body":{"nodeType":"YulBlock","src":"19882:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19891:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19894:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19884:6:28"},"nodeType":"YulFunctionCall","src":"19884:12:28"},"nodeType":"YulExpressionStatement","src":"19884:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19857:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"19866:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19853:3:28"},"nodeType":"YulFunctionCall","src":"19853:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"19878:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19849:3:28"},"nodeType":"YulFunctionCall","src":"19849:32:28"},"nodeType":"YulIf","src":"19846:52:28"},{"nodeType":"YulAssignment","src":"19907:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19923:9:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19917:5:28"},"nodeType":"YulFunctionCall","src":"19917:16:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19907:6:28"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19802:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19813:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19825:6:28","type":""}],"src":"19755:184:28"},{"body":{"nodeType":"YulBlock","src":"20118:236:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20135:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20146:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20128:6:28"},"nodeType":"YulFunctionCall","src":"20128:21:28"},"nodeType":"YulExpressionStatement","src":"20128:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20169:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20180:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20165:3:28"},"nodeType":"YulFunctionCall","src":"20165:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"20185:2:28","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20158:6:28"},"nodeType":"YulFunctionCall","src":"20158:30:28"},"nodeType":"YulExpressionStatement","src":"20158:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20208:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20219:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20204:3:28"},"nodeType":"YulFunctionCall","src":"20204:18:28"},{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e74617469","kind":"string","nodeType":"YulLiteral","src":"20224:34:28","type":"","value":"ERC1967Upgrade: new implementati"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20197:6:28"},"nodeType":"YulFunctionCall","src":"20197:62:28"},"nodeType":"YulExpressionStatement","src":"20197:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20279:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20290:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20275:3:28"},"nodeType":"YulFunctionCall","src":"20275:18:28"},{"hexValue":"6f6e206973206e6f742055555053","kind":"string","nodeType":"YulLiteral","src":"20295:16:28","type":"","value":"on is not UUPS"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20268:6:28"},"nodeType":"YulFunctionCall","src":"20268:44:28"},"nodeType":"YulExpressionStatement","src":"20268:44:28"},{"nodeType":"YulAssignment","src":"20321:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20333:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20344:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20329:3:28"},"nodeType":"YulFunctionCall","src":"20329:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20321:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20095:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20109:4:28","type":""}],"src":"19944:410:28"},{"body":{"nodeType":"YulBlock","src":"20533:231:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20550:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20561:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20543:6:28"},"nodeType":"YulFunctionCall","src":"20543:21:28"},"nodeType":"YulExpressionStatement","src":"20543:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20584:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20595:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20580:3:28"},"nodeType":"YulFunctionCall","src":"20580:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"20600:2:28","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20573:6:28"},"nodeType":"YulFunctionCall","src":"20573:30:28"},"nodeType":"YulExpressionStatement","src":"20573:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20623:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20634:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20619:3:28"},"nodeType":"YulFunctionCall","src":"20619:18:28"},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f78","kind":"string","nodeType":"YulLiteral","src":"20639:34:28","type":"","value":"ERC1967Upgrade: unsupported prox"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20612:6:28"},"nodeType":"YulFunctionCall","src":"20612:62:28"},"nodeType":"YulExpressionStatement","src":"20612:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20694:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20705:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20690:3:28"},"nodeType":"YulFunctionCall","src":"20690:18:28"},{"hexValue":"6961626c6555554944","kind":"string","nodeType":"YulLiteral","src":"20710:11:28","type":"","value":"iableUUID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20683:6:28"},"nodeType":"YulFunctionCall","src":"20683:39:28"},"nodeType":"YulExpressionStatement","src":"20683:39:28"},{"nodeType":"YulAssignment","src":"20731:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20743:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20754:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20739:3:28"},"nodeType":"YulFunctionCall","src":"20739:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20731:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20510:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20524:4:28","type":""}],"src":"20359:405:28"},{"body":{"nodeType":"YulBlock","src":"20943:182:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20960:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20971:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20953:6:28"},"nodeType":"YulFunctionCall","src":"20953:21:28"},"nodeType":"YulExpressionStatement","src":"20953:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20994:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"21005:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20990:3:28"},"nodeType":"YulFunctionCall","src":"20990:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"21010:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20983:6:28"},"nodeType":"YulFunctionCall","src":"20983:30:28"},"nodeType":"YulExpressionStatement","src":"20983:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21033:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"21044:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21029:3:28"},"nodeType":"YulFunctionCall","src":"21029:18:28"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"21049:34:28","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21022:6:28"},"nodeType":"YulFunctionCall","src":"21022:62:28"},"nodeType":"YulExpressionStatement","src":"21022:62:28"},{"nodeType":"YulAssignment","src":"21093:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21105:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"21116:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21101:3:28"},"nodeType":"YulFunctionCall","src":"21101:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21093:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20920:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20934:4:28","type":""}],"src":"20769:356:28"},{"body":{"nodeType":"YulBlock","src":"21304:175:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21321:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"21332:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21314:6:28"},"nodeType":"YulFunctionCall","src":"21314:21:28"},"nodeType":"YulExpressionStatement","src":"21314:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21355:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"21366:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21351:3:28"},"nodeType":"YulFunctionCall","src":"21351:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"21371:2:28","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21344:6:28"},"nodeType":"YulFunctionCall","src":"21344:30:28"},"nodeType":"YulExpressionStatement","src":"21344:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21394:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"21405:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21390:3:28"},"nodeType":"YulFunctionCall","src":"21390:18:28"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"21410:27:28","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21383:6:28"},"nodeType":"YulFunctionCall","src":"21383:55:28"},"nodeType":"YulExpressionStatement","src":"21383:55:28"},{"nodeType":"YulAssignment","src":"21447:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21459:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"21470:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21455:3:28"},"nodeType":"YulFunctionCall","src":"21455:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21447:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21281:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21295:4:28","type":""}],"src":"21130:349:28"},{"body":{"nodeType":"YulBlock","src":"21658:235:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21675:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"21686:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21668:6:28"},"nodeType":"YulFunctionCall","src":"21668:21:28"},"nodeType":"YulExpressionStatement","src":"21668:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21709:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"21720:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21705:3:28"},"nodeType":"YulFunctionCall","src":"21705:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"21725:2:28","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21698:6:28"},"nodeType":"YulFunctionCall","src":"21698:30:28"},"nodeType":"YulExpressionStatement","src":"21698:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21748:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"21759:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21744:3:28"},"nodeType":"YulFunctionCall","src":"21744:18:28"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"21764:34:28","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21737:6:28"},"nodeType":"YulFunctionCall","src":"21737:62:28"},"nodeType":"YulExpressionStatement","src":"21737:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21819:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"21830:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21815:3:28"},"nodeType":"YulFunctionCall","src":"21815:18:28"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"21835:15:28","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21808:6:28"},"nodeType":"YulFunctionCall","src":"21808:43:28"},"nodeType":"YulExpressionStatement","src":"21808:43:28"},{"nodeType":"YulAssignment","src":"21860:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21872:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"21883:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21868:3:28"},"nodeType":"YulFunctionCall","src":"21868:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21860:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21635:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21649:4:28","type":""}],"src":"21484:409:28"},{"body":{"nodeType":"YulBlock","src":"22287:423:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22304:3:28"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"22309:25:28","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22297:6:28"},"nodeType":"YulFunctionCall","src":"22297:38:28"},"nodeType":"YulExpressionStatement","src":"22297:38:28"},{"nodeType":"YulVariableDeclaration","src":"22344:27:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22364:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22358:5:28"},"nodeType":"YulFunctionCall","src":"22358:13:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22348:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22419:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"22427:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22415:3:28"},"nodeType":"YulFunctionCall","src":"22415:17:28"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22438:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"22443:2:28","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22434:3:28"},"nodeType":"YulFunctionCall","src":"22434:12:28"},{"name":"length","nodeType":"YulIdentifier","src":"22448:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"22380:34:28"},"nodeType":"YulFunctionCall","src":"22380:75:28"},"nodeType":"YulExpressionStatement","src":"22380:75:28"},{"nodeType":"YulVariableDeclaration","src":"22464:26:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22478:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"22483:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22474:3:28"},"nodeType":"YulFunctionCall","src":"22474:16:28"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"22468:2:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"22510:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"22514:2:28","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22506:3:28"},"nodeType":"YulFunctionCall","src":"22506:11:28"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"22519:19:28","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22499:6:28"},"nodeType":"YulFunctionCall","src":"22499:40:28"},"nodeType":"YulExpressionStatement","src":"22499:40:28"},{"nodeType":"YulVariableDeclaration","src":"22548:29:28","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22570:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22564:5:28"},"nodeType":"YulFunctionCall","src":"22564:13:28"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"22552:8:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22625:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"22633:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22621:3:28"},"nodeType":"YulFunctionCall","src":"22621:17:28"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"22644:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"22648:2:28","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22640:3:28"},"nodeType":"YulFunctionCall","src":"22640:11:28"},{"name":"length_1","nodeType":"YulIdentifier","src":"22653:8:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"22586:34:28"},"nodeType":"YulFunctionCall","src":"22586:76:28"},"nodeType":"YulExpressionStatement","src":"22586:76:28"},{"nodeType":"YulAssignment","src":"22671:33:28","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"22686:2:28"},{"name":"length_1","nodeType":"YulIdentifier","src":"22690:8:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22682:3:28"},"nodeType":"YulFunctionCall","src":"22682:17:28"},{"kind":"number","nodeType":"YulLiteral","src":"22701:2:28","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22678:3:28"},"nodeType":"YulFunctionCall","src":"22678:26:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22671:3:28"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22255:3:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22260:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22268:6:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22279:3:28","type":""}],"src":"21898:812:28"},{"body":{"nodeType":"YulBlock","src":"22889:235:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22906:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"22917:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22899:6:28"},"nodeType":"YulFunctionCall","src":"22899:21:28"},"nodeType":"YulExpressionStatement","src":"22899:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22940:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"22951:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22936:3:28"},"nodeType":"YulFunctionCall","src":"22936:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"22956:2:28","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22929:6:28"},"nodeType":"YulFunctionCall","src":"22929:30:28"},"nodeType":"YulExpressionStatement","src":"22929:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22979:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"22990:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22975:3:28"},"nodeType":"YulFunctionCall","src":"22975:18:28"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nodeType":"YulLiteral","src":"22995:34:28","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22968:6:28"},"nodeType":"YulFunctionCall","src":"22968:62:28"},"nodeType":"YulExpressionStatement","src":"22968:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23050:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"23061:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23046:3:28"},"nodeType":"YulFunctionCall","src":"23046:18:28"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"23066:15:28","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23039:6:28"},"nodeType":"YulFunctionCall","src":"23039:43:28"},"nodeType":"YulExpressionStatement","src":"23039:43:28"},{"nodeType":"YulAssignment","src":"23091:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23103:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"23114:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23099:3:28"},"nodeType":"YulFunctionCall","src":"23099:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23091:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22866:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22880:4:28","type":""}],"src":"22715:409:28"},{"body":{"nodeType":"YulBlock","src":"23303:180:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23320:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"23331:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23313:6:28"},"nodeType":"YulFunctionCall","src":"23313:21:28"},"nodeType":"YulExpressionStatement","src":"23313:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23354:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"23365:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23350:3:28"},"nodeType":"YulFunctionCall","src":"23350:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"23370:2:28","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23343:6:28"},"nodeType":"YulFunctionCall","src":"23343:30:28"},"nodeType":"YulExpressionStatement","src":"23343:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23393:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"23404:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23389:3:28"},"nodeType":"YulFunctionCall","src":"23389:18:28"},{"hexValue":"456e756d657261626c654d61703a206e6f6e6578697374656e74206b6579","kind":"string","nodeType":"YulLiteral","src":"23409:32:28","type":"","value":"EnumerableMap: nonexistent key"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23382:6:28"},"nodeType":"YulFunctionCall","src":"23382:60:28"},"nodeType":"YulExpressionStatement","src":"23382:60:28"},{"nodeType":"YulAssignment","src":"23451:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23463:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"23474:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23459:3:28"},"nodeType":"YulFunctionCall","src":"23459:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23451:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23280:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23294:4:28","type":""}],"src":"23129:354:28"},{"body":{"nodeType":"YulBlock","src":"23662:240:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23679:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"23690:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23672:6:28"},"nodeType":"YulFunctionCall","src":"23672:21:28"},"nodeType":"YulExpressionStatement","src":"23672:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23713:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"23724:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23709:3:28"},"nodeType":"YulFunctionCall","src":"23709:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"23729:2:28","type":"","value":"50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23702:6:28"},"nodeType":"YulFunctionCall","src":"23702:30:28"},"nodeType":"YulExpressionStatement","src":"23702:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23752:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"23763:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23748:3:28"},"nodeType":"YulFunctionCall","src":"23748:18:28"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"23768:34:28","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23741:6:28"},"nodeType":"YulFunctionCall","src":"23741:62:28"},"nodeType":"YulExpressionStatement","src":"23741:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23823:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"23834:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23819:3:28"},"nodeType":"YulFunctionCall","src":"23819:18:28"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"23839:20:28","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23812:6:28"},"nodeType":"YulFunctionCall","src":"23812:48:28"},"nodeType":"YulExpressionStatement","src":"23812:48:28"},{"nodeType":"YulAssignment","src":"23869:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23881:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"23892:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23877:3:28"},"nodeType":"YulFunctionCall","src":"23877:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23869:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23639:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23653:4:28","type":""}],"src":"23488:414:28"},{"body":{"nodeType":"YulBlock","src":"23939:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23956:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23963:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"23968:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23959:3:28"},"nodeType":"YulFunctionCall","src":"23959:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23949:6:28"},"nodeType":"YulFunctionCall","src":"23949:31:28"},"nodeType":"YulExpressionStatement","src":"23949:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23996:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23999:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23989:6:28"},"nodeType":"YulFunctionCall","src":"23989:15:28"},"nodeType":"YulExpressionStatement","src":"23989:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24020:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24023:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24013:6:28"},"nodeType":"YulFunctionCall","src":"24013:15:28"},"nodeType":"YulExpressionStatement","src":"24013:15:28"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"23907:127:28"},{"body":{"nodeType":"YulBlock","src":"24091:116:28","statements":[{"nodeType":"YulAssignment","src":"24101:20:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24116:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"24119:1:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"24112:3:28"},"nodeType":"YulFunctionCall","src":"24112:9:28"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"24101:7:28"}]},{"body":{"nodeType":"YulBlock","src":"24179:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24181:16:28"},"nodeType":"YulFunctionCall","src":"24181:18:28"},"nodeType":"YulExpressionStatement","src":"24181:18:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24150:1:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24143:6:28"},"nodeType":"YulFunctionCall","src":"24143:9:28"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24157:1:28"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"24164:7:28"},{"name":"x","nodeType":"YulIdentifier","src":"24173:1:28"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"24160:3:28"},"nodeType":"YulFunctionCall","src":"24160:15:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24154:2:28"},"nodeType":"YulFunctionCall","src":"24154:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"24140:2:28"},"nodeType":"YulFunctionCall","src":"24140:37:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24133:6:28"},"nodeType":"YulFunctionCall","src":"24133:45:28"},"nodeType":"YulIf","src":"24130:71:28"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24070:1:28","type":""},{"name":"y","nodeType":"YulTypedName","src":"24073:1:28","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"24079:7:28","type":""}],"src":"24039:168:28"},{"body":{"nodeType":"YulBlock","src":"24260:77:28","statements":[{"nodeType":"YulAssignment","src":"24270:16:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24281:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"24284:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24277:3:28"},"nodeType":"YulFunctionCall","src":"24277:9:28"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"24270:3:28"}]},{"body":{"nodeType":"YulBlock","src":"24309:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24311:16:28"},"nodeType":"YulFunctionCall","src":"24311:18:28"},"nodeType":"YulExpressionStatement","src":"24311:18:28"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24301:1:28"},{"name":"sum","nodeType":"YulIdentifier","src":"24304:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24298:2:28"},"nodeType":"YulFunctionCall","src":"24298:10:28"},"nodeType":"YulIf","src":"24295:36:28"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24243:1:28","type":""},{"name":"y","nodeType":"YulTypedName","src":"24246:1:28","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"24252:3:28","type":""}],"src":"24212:125:28"},{"body":{"nodeType":"YulBlock","src":"24374:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24391:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24398:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"24403:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"24394:3:28"},"nodeType":"YulFunctionCall","src":"24394:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24384:6:28"},"nodeType":"YulFunctionCall","src":"24384:31:28"},"nodeType":"YulExpressionStatement","src":"24384:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24431:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24434:4:28","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24424:6:28"},"nodeType":"YulFunctionCall","src":"24424:15:28"},"nodeType":"YulExpressionStatement","src":"24424:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24455:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24458:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24448:6:28"},"nodeType":"YulFunctionCall","src":"24448:15:28"},"nodeType":"YulExpressionStatement","src":"24448:15:28"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"24342:127:28"},{"body":{"nodeType":"YulBlock","src":"24521:89:28","statements":[{"body":{"nodeType":"YulBlock","src":"24548:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24550:16:28"},"nodeType":"YulFunctionCall","src":"24550:18:28"},"nodeType":"YulExpressionStatement","src":"24550:18:28"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24541:5:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24534:6:28"},"nodeType":"YulFunctionCall","src":"24534:13:28"},"nodeType":"YulIf","src":"24531:39:28"},{"nodeType":"YulAssignment","src":"24579:25:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24590:5:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24601:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"24597:3:28"},"nodeType":"YulFunctionCall","src":"24597:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24586:3:28"},"nodeType":"YulFunctionCall","src":"24586:18:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"24579:3:28"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24503:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"24513:3:28","type":""}],"src":"24474:136:28"},{"body":{"nodeType":"YulBlock","src":"24789:182:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24806:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"24817:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24799:6:28"},"nodeType":"YulFunctionCall","src":"24799:21:28"},"nodeType":"YulExpressionStatement","src":"24799:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24840:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"24851:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24836:3:28"},"nodeType":"YulFunctionCall","src":"24836:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"24856:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24829:6:28"},"nodeType":"YulFunctionCall","src":"24829:30:28"},"nodeType":"YulExpressionStatement","src":"24829:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24879:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"24890:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24875:3:28"},"nodeType":"YulFunctionCall","src":"24875:18:28"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"24895:34:28","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24868:6:28"},"nodeType":"YulFunctionCall","src":"24868:62:28"},"nodeType":"YulExpressionStatement","src":"24868:62:28"},{"nodeType":"YulAssignment","src":"24939:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24951:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"24962:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24947:3:28"},"nodeType":"YulFunctionCall","src":"24947:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24939:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24766:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24780:4:28","type":""}],"src":"24615:356:28"},{"body":{"nodeType":"YulBlock","src":"25150:227:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25167:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"25178:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25160:6:28"},"nodeType":"YulFunctionCall","src":"25160:21:28"},"nodeType":"YulExpressionStatement","src":"25160:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25201:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"25212:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25197:3:28"},"nodeType":"YulFunctionCall","src":"25197:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"25217:2:28","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25190:6:28"},"nodeType":"YulFunctionCall","src":"25190:30:28"},"nodeType":"YulExpressionStatement","src":"25190:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25240:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"25251:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25236:3:28"},"nodeType":"YulFunctionCall","src":"25236:18:28"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"25256:34:28","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25229:6:28"},"nodeType":"YulFunctionCall","src":"25229:62:28"},"nodeType":"YulExpressionStatement","src":"25229:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25311:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"25322:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25307:3:28"},"nodeType":"YulFunctionCall","src":"25307:18:28"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"25327:7:28","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25300:6:28"},"nodeType":"YulFunctionCall","src":"25300:35:28"},"nodeType":"YulExpressionStatement","src":"25300:35:28"},{"nodeType":"YulAssignment","src":"25344:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25356:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"25367:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25352:3:28"},"nodeType":"YulFunctionCall","src":"25352:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25344:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25127:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25141:4:28","type":""}],"src":"24976:401:28"},{"body":{"nodeType":"YulBlock","src":"25556:226:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25573:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"25584:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25566:6:28"},"nodeType":"YulFunctionCall","src":"25566:21:28"},"nodeType":"YulExpressionStatement","src":"25566:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25607:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"25618:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25603:3:28"},"nodeType":"YulFunctionCall","src":"25603:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"25623:2:28","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25596:6:28"},"nodeType":"YulFunctionCall","src":"25596:30:28"},"nodeType":"YulExpressionStatement","src":"25596:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25646:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"25657:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25642:3:28"},"nodeType":"YulFunctionCall","src":"25642:18:28"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"25662:34:28","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25635:6:28"},"nodeType":"YulFunctionCall","src":"25635:62:28"},"nodeType":"YulExpressionStatement","src":"25635:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25717:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"25728:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25713:3:28"},"nodeType":"YulFunctionCall","src":"25713:18:28"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"25733:6:28","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25706:6:28"},"nodeType":"YulFunctionCall","src":"25706:34:28"},"nodeType":"YulExpressionStatement","src":"25706:34:28"},{"nodeType":"YulAssignment","src":"25749:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25761:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"25772:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25757:3:28"},"nodeType":"YulFunctionCall","src":"25757:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25749:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25533:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25547:4:28","type":""}],"src":"25382:400:28"},{"body":{"nodeType":"YulBlock","src":"25990:286:28","statements":[{"nodeType":"YulVariableDeclaration","src":"26000:29:28","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26018:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"26023:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"26014:3:28"},"nodeType":"YulFunctionCall","src":"26014:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"26027:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26010:3:28"},"nodeType":"YulFunctionCall","src":"26010:19:28"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"26004:2:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26045:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26060:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"26068:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26056:3:28"},"nodeType":"YulFunctionCall","src":"26056:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26038:6:28"},"nodeType":"YulFunctionCall","src":"26038:34:28"},"nodeType":"YulExpressionStatement","src":"26038:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26092:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"26103:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26088:3:28"},"nodeType":"YulFunctionCall","src":"26088:18:28"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26112:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"26120:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26108:3:28"},"nodeType":"YulFunctionCall","src":"26108:15:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26081:6:28"},"nodeType":"YulFunctionCall","src":"26081:43:28"},"nodeType":"YulExpressionStatement","src":"26081:43:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26144:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"26155:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26140:3:28"},"nodeType":"YulFunctionCall","src":"26140:18:28"},{"name":"value2","nodeType":"YulIdentifier","src":"26160:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26133:6:28"},"nodeType":"YulFunctionCall","src":"26133:34:28"},"nodeType":"YulExpressionStatement","src":"26133:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26187:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"26198:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26183:3:28"},"nodeType":"YulFunctionCall","src":"26183:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"26203:3:28","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26176:6:28"},"nodeType":"YulFunctionCall","src":"26176:31:28"},"nodeType":"YulExpressionStatement","src":"26176:31:28"},{"nodeType":"YulAssignment","src":"26216:54:28","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"26242:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26254:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"26265:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26250:3:28"},"nodeType":"YulFunctionCall","src":"26250:19:28"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"26224:17:28"},"nodeType":"YulFunctionCall","src":"26224:46:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26216:4:28"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25935:9:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"25946:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25954:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25962:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25970:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25981:4:28","type":""}],"src":"25787:489:28"},{"body":{"nodeType":"YulBlock","src":"26361:169:28","statements":[{"body":{"nodeType":"YulBlock","src":"26407:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26416:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26419:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26409:6:28"},"nodeType":"YulFunctionCall","src":"26409:12:28"},"nodeType":"YulExpressionStatement","src":"26409:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"26382:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"26391:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26378:3:28"},"nodeType":"YulFunctionCall","src":"26378:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"26403:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"26374:3:28"},"nodeType":"YulFunctionCall","src":"26374:32:28"},"nodeType":"YulIf","src":"26371:52:28"},{"nodeType":"YulVariableDeclaration","src":"26432:29:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26451:9:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"26445:5:28"},"nodeType":"YulFunctionCall","src":"26445:16:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"26436:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26494:5:28"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"26470:23:28"},"nodeType":"YulFunctionCall","src":"26470:30:28"},"nodeType":"YulExpressionStatement","src":"26470:30:28"},{"nodeType":"YulAssignment","src":"26509:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"26519:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"26509:6:28"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26327:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"26338:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"26350:6:28","type":""}],"src":"26281:249:28"},{"body":{"nodeType":"YulBlock","src":"26672:150:28","statements":[{"nodeType":"YulVariableDeclaration","src":"26682:27:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26702:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"26696:5:28"},"nodeType":"YulFunctionCall","src":"26696:13:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"26686:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26757:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"26765:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26753:3:28"},"nodeType":"YulFunctionCall","src":"26753:17:28"},{"name":"pos","nodeType":"YulIdentifier","src":"26772:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"26777:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"26718:34:28"},"nodeType":"YulFunctionCall","src":"26718:66:28"},"nodeType":"YulExpressionStatement","src":"26718:66:28"},{"nodeType":"YulAssignment","src":"26793:23:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26804:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"26809:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26800:3:28"},"nodeType":"YulFunctionCall","src":"26800:16:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26793:3:28"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26648:3:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26653:6:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26664:3:28","type":""}],"src":"26535:287:28"},{"body":{"nodeType":"YulBlock","src":"26876:79:28","statements":[{"nodeType":"YulAssignment","src":"26886:17:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26898:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"26901:1:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26894:3:28"},"nodeType":"YulFunctionCall","src":"26894:9:28"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"26886:4:28"}]},{"body":{"nodeType":"YulBlock","src":"26927:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26929:16:28"},"nodeType":"YulFunctionCall","src":"26929:18:28"},"nodeType":"YulExpressionStatement","src":"26929:18:28"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"26918:4:28"},{"name":"x","nodeType":"YulIdentifier","src":"26924:1:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26915:2:28"},"nodeType":"YulFunctionCall","src":"26915:11:28"},"nodeType":"YulIf","src":"26912:37:28"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"26858:1:28","type":""},{"name":"y","nodeType":"YulTypedName","src":"26861:1:28","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"26867:4:28","type":""}],"src":"26827:128:28"},{"body":{"nodeType":"YulBlock","src":"26992:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27009:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27016:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"27021:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"27012:3:28"},"nodeType":"YulFunctionCall","src":"27012:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27002:6:28"},"nodeType":"YulFunctionCall","src":"27002:31:28"},"nodeType":"YulExpressionStatement","src":"27002:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27049:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27052:4:28","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27042:6:28"},"nodeType":"YulFunctionCall","src":"27042:15:28"},"nodeType":"YulExpressionStatement","src":"27042:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27073:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27076:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27066:6:28"},"nodeType":"YulFunctionCall","src":"27066:15:28"},"nodeType":"YulExpressionStatement","src":"27066:15:28"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"26960:127:28"},{"body":{"nodeType":"YulBlock","src":"27266:179:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27283:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"27294:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27276:6:28"},"nodeType":"YulFunctionCall","src":"27276:21:28"},"nodeType":"YulExpressionStatement","src":"27276:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27317:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"27328:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27313:3:28"},"nodeType":"YulFunctionCall","src":"27313:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"27333:2:28","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27306:6:28"},"nodeType":"YulFunctionCall","src":"27306:30:28"},"nodeType":"YulExpressionStatement","src":"27306:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27356:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"27367:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27352:3:28"},"nodeType":"YulFunctionCall","src":"27352:18:28"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"27372:31:28","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27345:6:28"},"nodeType":"YulFunctionCall","src":"27345:59:28"},"nodeType":"YulExpressionStatement","src":"27345:59:28"},{"nodeType":"YulAssignment","src":"27413:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27425:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"27436:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27421:3:28"},"nodeType":"YulFunctionCall","src":"27421:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27413:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27243:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27257:4:28","type":""}],"src":"27092:353:28"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0xc0)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_struct$_UserProfile_$6477_memory_ptr__to_t_struct$_UserProfile_$6477_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), mload(value0))\n        let memberValue0 := mload(add(value0, 32))\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 64), and(memberValue0, _1))\n        mstore(add(headStart, 96), and(mload(add(value0, 64)), 0xffffffff))\n        let memberValue0_1 := mload(add(value0, 96))\n        mstore(add(headStart, 128), 0xc0)\n        let tail_1 := abi_encode_string(memberValue0_1, add(headStart, 224))\n        let memberValue0_2 := mload(add(value0, 128))\n        mstore(add(headStart, 160), add(sub(tail_1, headStart), not(31)))\n        let tail_2 := abi_encode_string(memberValue0_2, tail_1)\n        mstore(add(headStart, 0xc0), and(mload(add(value0, 160)), _1))\n        tail := tail_2\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_uint32(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_UserProfile_$6477_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if slt(sub(dataEnd, _2), 0xc0) { revert(0, 0) }\n        let value := allocate_memory()\n        mstore(value, calldataload(_2))\n        mstore(add(value, 32), abi_decode_address(add(_2, 32)))\n        mstore(add(value, 64), abi_decode_uint32(add(_2, 64)))\n        let offset_1 := calldataload(add(_2, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        mstore(add(value, 96), abi_decode_string(add(_2, offset_1), dataEnd))\n        let offset_2 := calldataload(add(_2, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        mstore(add(value, 128), abi_decode_string(add(_2, offset_2), dataEnd))\n        mstore(add(value, 160), abi_decode_address(add(_2, 160)))\n        value0 := value\n        let offset_3 := calldataload(add(headStart, 32))\n        if gt(offset_3, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_3), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"active proxy\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_886b867501ea49c352a9c24cd3e606ffa17dba28c8e4cc81c5f25cf37ba68cbb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"The account does not have profil\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_412c23c044f12933032e9eb6ca8a55a186f713b6708f4a9e879761e14440c687__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"invalid response from data stora\")\n        mstore(add(headStart, 96), \"ge\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"UUPSUpgradeable: must not be cal\")\n        mstore(add(headStart, 96), \"led through delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ab1237ff2a5428b64010bd9fbc5393e377fb2464f5079afa40305359d5d0ea2d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"storage zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_91a54eeda269cc8a80a3dcdf518e5f3a12f24479e680e6f470b183a6b5d3ecff__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"storage not initialized\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_bytes_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_string(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: new implementati\")\n        mstore(add(headStart, 96), \"on is not UUPS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: unsupported prox\")\n        mstore(add(headStart, 96), \"iableUUID\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"EnumerableMap: nonexistent key\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1105":[{"length":32,"start":3108},{"length":32,"start":3172},{"length":32,"start":4195},{"length":32,"start":4259},{"length":32,"start":4402}]},"linkReferences":{},"object":"6080604052600436106101ee5760003560e01c806352d1902d1161010d57806395d89b41116100a0578063c87b56dd1161006f578063c87b56dd14610551578063d547741f14610571578063e985e9c514610591578063f2fde38b146105da578063faf4a931146105fa57600080fd5b806395d89b41146104e7578063a217fddf146104fc578063a22cb46514610511578063b88d4fde1461053157600080fd5b8063715018a6116100dc578063715018a614610474578063773c02d4146104895780638da5cb5b146104a957806391d14854146104c757600080fd5b806352d1902d146103ff5780635dc4fe7e146104145780636352211e1461043457806370a082311461045457600080fd5b8063248a9ca3116101855780633659cfe6116101545780633659cfe6146103c457806342842e0e1461031457806344df8e70146103e45780634f1ef286146103ec57600080fd5b8063248a9ca31461033457806324d7806c146103645780632f2ff15d1461038457806336568abe146103a457600080fd5b8063095ea7b3116101c1578063095ea7b3146102a457806318160ddd146102c45780631f52b76c146102e757806323b872dd1461031457600080fd5b806301ffc9a7146101f357806306fdde0314610228578063077f224a1461024a578063081812fc1461026c575b600080fd5b3480156101ff57600080fd5b5061021361020e366004612c99565b61060d565b60405190151581526020015b60405180910390f35b34801561023457600080fd5b5061023d61061e565b60405161021f9190612d06565b34801561025657600080fd5b5061026a610265366004612e01565b6106b0565b005b34801561027857600080fd5b5061028c610287366004612e75565b6107ee565b6040516001600160a01b03909116815260200161021f565b3480156102b057600080fd5b5061026a6102bf366004612e8e565b610815565b3480156102d057600080fd5b506102d961092a565b60405190815260200161021f565b3480156102f357600080fd5b50610307610302366004612e75565b61093c565b60405161021f9190612eb8565b34801561032057600080fd5b5061026a61032f366004612f3b565b610b38565b34801561034057600080fd5b506102d961034f366004612e75565b600090815260c9602052604090206001015490565b34801561037057600080fd5b5061021361037f366004612f77565b610b6b565b34801561039057600080fd5b5061026a61039f366004612f92565b610b77565b3480156103b057600080fd5b5061026a6103bf366004612f92565b610b9c565b3480156103d057600080fd5b5061026a6103df366004612f77565b610c1a565b61026a610cf9565b61026a6103fa366004612fbe565b611059565b34801561040b57600080fd5b506102d9611125565b34801561042057600080fd5b5061026a61042f366004612f77565b6111d8565b34801561044057600080fd5b5061028c61044f366004612e75565b611258565b34801561046057600080fd5b506102d961046f366004612f77565b611298565b34801561048057600080fd5b5061026a6112c3565b34801561049557600080fd5b506102d96104a4366004612f77565b6112d7565b3480156104b557600080fd5b506097546001600160a01b031661028c565b3480156104d357600080fd5b506102136104e2366004612f92565b611300565b3480156104f357600080fd5b5061023d61132b565b34801561050857600080fd5b506102d9600081565b34801561051d57600080fd5b5061026a61052c36600461301a565b61133a565b34801561053d57600080fd5b5061026a61054c366004613051565b611345565b34801561055d57600080fd5b5061023d61056c366004612e75565b611379565b34801561057d57600080fd5b5061026a61058c366004612f92565b6114b0565b34801561059d57600080fd5b506102136105ac3660046130b9565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b3480156105e657600080fd5b5061026a6105f5366004612f77565b6114d5565b6102d96106083660046130f7565b61154b565b600061061882611a35565b92915050565b60606065805461062d906131e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610659906131e0565b80156106a65780601f1061067b576101008083540402835291602001916106a6565b820191906000526020600020905b81548152906001019060200180831161068957829003601f168201915b5050505050905090565b600054610100900460ff16158080156106d05750600054600160ff909116105b806106ea5750303b1580156106ea575060005460ff166001145b6107525760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610775576000805461ff0019166101001790555b61077d611a5a565b610785611a89565b61078f8484611ab0565b610797611a89565b6107a2600083611ae1565b80156107e8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60006107f982611b67565b506000908152606960205260409020546001600160a01b031690565b600061082082611bc6565b9050806001600160a01b0316836001600160a01b03160361088d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610749565b336001600160a01b03821614806108a957506108a981336105ac565b61091b5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610749565b6109258383611c26565b505050565b6000610937610162611c94565b905090565b6040805160c081018252600080825260208083018290528284018290526060808401819052608084015260a083018290528351808501909452600f84526e125b9d985b1a59081d1bdad95b9259608a1b9084015290916109a19061015f908590611c9f565b6001600160a01b03818116600090815261016760209081526040808320815160c08101835281548152600182015495861693810193909352600160a01b90940463ffffffff169082015260028301805494955091939092916060840191610a07906131e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610a33906131e0565b8015610a805780601f10610a5557610100808354040283529160200191610a80565b820191906000526020600020905b815481529060010190602001808311610a6357829003601f168201915b50505050508152602001600382018054610a99906131e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac5906131e0565b8015610b125780601f10610ae757610100808354040283529160200191610b12565b820191906000526020600020905b815481529060010190602001808311610af557829003601f168201915b5050509183525050600491909101546001600160a01b0316602090910152949350505050565b6001600160a01b03831615610b6057604051633859b9e960e01b815260040160405180910390fd5b610925838383611cb4565b60006106188183611300565b600082815260c96020526040902060010154610b9281611ccf565b6109258383611ae1565b6001600160a01b0381163314610c0c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610749565b610c168282611cd9565b5050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610c625760405162461bcd60e51b81526004016107499061321a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610cab6000805160206136e2833981519152546001600160a01b031690565b6001600160a01b031614610cd15760405162461bcd60e51b815260040161074990613266565b610cda81611d40565b60408051600080825260208201909252610cf691839190611d48565b50565b610d0561016233611eb3565b610d5b5760405162461bcd60e51b815260206004820152602160248201527f546865206163636f756e7420646f6573206e6f7420686176652070726f66696c6044820152606560f81b6064820152608401610749565b6000610d6961016233611ec8565b9050610d7761016233611edd565b50610d8461015f82611ef2565b5033600090815261016760209081526040808320815160c0810183528154815260018201546001600160a01b03811694820194909452600160a01b90930463ffffffff1691830191909152600281018054606084019190610de4906131e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610e10906131e0565b8015610e5d5780601f10610e3257610100808354040283529160200191610e5d565b820191906000526020600020905b815481529060010190602001808311610e4057829003601f168201915b50505050508152602001600382018054610e76906131e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610ea2906131e0565b8015610eef5780601f10610ec457610100808354040283529160200191610eef565b820191906000526020600020905b815481529060010190602001808311610ed257829003601f168201915b5050509183525050600491909101546001600160a01b0390811660209283015260a083015181166000908152610166835260408082205481513381870152825180820390960186528083019283905263163b7bd360e21b9092529495509093909116916358edef4c91610f659190604401612d06565b6020604051808303816000875af1158015610f84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa891906132b2565b9050600181151514610fcc5760405162461bcd60e51b8152600401610749906132cf565b336000908152610167602052604081208181556001810180546001600160c01b031916905590610fff6002830182612c35565b61100d600383016000612c35565b5060040180546001600160a01b031916905560405183815233907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59060200160405180910390a2505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036110a15760405162461bcd60e51b81526004016107499061321a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166110ea6000805160206136e2833981519152546001600160a01b031690565b6001600160a01b0316146111105760405162461bcd60e51b815260040161074990613266565b61111982611d40565b610c1682826001611d48565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146111c55760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610749565b506000805160206136e283398151915290565b6111e0611efe565b6001600160a01b03811661122d5760405162461bcd60e51b815260206004820152601460248201527373746f72616765207a65726f206164647265737360601b6044820152606401610749565b6001600160a01b031660008181526101666020526040902080546001600160a01b0319169091179055565b6000610618826040518060400160405280600f81526020016e125b9d985b1a59081d1bdad95b9259608a1b81525061015f611c9f9092919063ffffffff16565b6000806112a761016284611f58565b509050806112b65760006112b9565b60015b60ff169392505050565b6112cb611efe565b6112d56000611f7f565b565b6000610618826040518060600160405280602c81526020016136b6602c91396101629190611fd1565b600091825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606066805461062d906131e0565b610c16338383611fe7565b6001600160a01b0384161561136d57604051633859b9e960e01b815260040160405180910390fd5b6107e8848484846120b5565b606060006113bb836040518060400160405280600f81526020016e151bdad95b881b9bdd08195e1a5cdd608a1b81525061015f611c9f9092919063ffffffff16565b6001600160a01b038116600090815261016760205260408120600301805492935090916113e7906131e0565b90501161140357604051806020016040528060008152506114a9565b6001600160a01b038116600090815261016760205260409020600301805461142a906131e0565b80601f0160208091040260200160405190810160405280929190818152602001828054611456906131e0565b80156114a35780601f10611478576101008083540402835291602001916114a3565b820191906000526020600020905b81548152906001019060200180831161148657829003601f168201915b50505050505b9392505050565b600082815260c960205260409020600101546114cb81611ccf565b6109258383611cd9565b6114dd611efe565b6001600160a01b0381166115425760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610749565b610cf681611f7f565b60a08201516000906001600160a01b03166115795760405163e57ffd0760e01b815260040160405180910390fd5b60a08301516001600160a01b0390811660009081526101666020526040902054166115e65760405162461bcd60e51b815260206004820152601760248201527f73746f72616765206e6f7420696e697469616c697a65640000000000000000006044820152606401610749565b60006115f461016233611eb3565b1561185a5761160561016233611ec8565b33600090815261016760209081526040808320815160c0810183528154815260018201546001600160a01b03811694820194909452600160a01b90930463ffffffff169183019190915260028101805494955092939192909160608401919061166d906131e0565b80601f0160208091040260200160405190810160405280929190818152602001828054611699906131e0565b80156116e65780601f106116bb576101008083540402835291602001916116e6565b820191906000526020600020905b8154815290600101906020018083116116c957829003601f168201915b505050505081526020016003820180546116ff906131e0565b80601f016020809104026020016040519081016040528092919081815260200182805461172b906131e0565b80156117785780601f1061174d57610100808354040283529160200191611778565b820191906000526020600020905b81548152906001019060200180831161175b57829003601f168201915b5050509183525050600491909101546001600160a01b0390811660209092019190915260a0878101519083015192935081169116146118545760a08101516001600160a01b03908116600090815261016660209081526040918290205482513381840152835180820390930183528084019384905263163b7bd360e21b909352909216916358edef4c9161180f9190604401612d06565b6020604051808303816000875af115801561182e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185291906132b2565b505b5061188b565b61186961016580546001019055565b506101655461187b610162338361212d565b5061188961015f8233612143565b505b336000908152610167602090815260409182902086518155908601516001820180549388015163ffffffff16600160a01b026001600160c01b03199094166001600160a01b03929092169190911792909217909155606085015185919060028201906118f7908261335f565b506080820151600382019061190c908261335f565b5060a09182015160049190910180546001600160a01b0319166001600160a01b039283161790559085015181166000908152610166602090815260408083205490519293169163cf5ba53f9161196691339189910161341f565b6040516020818303038152906040526040518263ffffffff1660e01b81526004016119919190612d06565b6020604051808303816000875af11580156119b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119d491906132b2565b90506001811515146119f85760405162461bcd60e51b8152600401610749906132cf565b60405182815233907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968859060200160405180910390a2509392505050565b60006001600160e01b03198216637965db0b60e01b1480610618575061061882612159565b600054610100900460ff16611a815760405162461bcd60e51b815260040161074990613443565b6112d56121a9565b600054610100900460ff166112d55760405162461bcd60e51b815260040161074990613443565b600054610100900460ff16611ad75760405162461bcd60e51b815260040161074990613443565b610c1682826121d9565b611aeb8282611300565b610c1657600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611b233390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000818152606760205260409020546001600160a01b0316610cf65760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610749565b6000818152606760205260408120546001600160a01b0316806106185760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610749565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611c5b82611bc6565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061061882612219565b6000611cac848484612224565b949350505050565b61092583838360405180602001604052806000815250611345565b610cf68133612270565b611ce38282611300565b15610c1657600082815260c9602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b610cf6611efe565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611d7b57610925836122c9565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611dd5575060408051601f3d908101601f19168201909252611dd29181019061348e565b60015b611e385760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610749565b6000805160206136e28339815191528114611ea75760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610749565b50610925838383612365565b60006114a9836001600160a01b03841661238a565b60006114a9836001600160a01b038416612396565b60006114a9836001600160a01b038416612406565b60006114a98383612406565b6097546001600160a01b031633146112d55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610749565b6000808080611f70866001600160a01b038716612423565b909450925050505b9250929050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611cac846001600160a01b03851684612224565b816001600160a01b0316836001600160a01b0316036120485760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610749565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6120bf338361245d565b6121215760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610749565b6107e8848484846124db565b6000611cac846001600160a01b0385168461250e565b6000611cac84846001600160a01b03851661250e565b60006001600160e01b031982166380ac58cd60e01b148061218a57506001600160e01b03198216635b5e139f60e01b145b8061061857506301ffc9a760e01b6001600160e01b0319831614610618565b600054610100900460ff166121d05760405162461bcd60e51b815260040161074990613443565b6112d533611f7f565b600054610100900460ff166122005760405162461bcd60e51b815260040161074990613443565b606561220c838261335f565b506066610925828261335f565b60006106188261252b565b6000828152600284016020526040812054801515806122485750612248858561238a565b83906122675760405162461bcd60e51b81526004016107499190612d06565b50949350505050565b61227a8282611300565b610c165761228781612535565b612292836020612547565b6040516020016122a39291906134a7565b60408051601f198184030181529082905262461bcd60e51b825261074991600401612d06565b6001600160a01b0381163b6123365760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610749565b6000805160206136e283398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61236e836126e3565b60008251118061237b5750805b15610925576107e88383612723565b60006114a98383612748565b6000818152600283016020526040812054801515806123ba57506123ba848461238a565b6114a95760405162461bcd60e51b815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b657900006044820152606401610749565b600081815260028301602052604081208190556114a98383612760565b600081815260028301602052604081205481908061245257612445858561238a565b925060009150611f789050565b600192509050611f78565b60008061246983611bc6565b9050806001600160a01b0316846001600160a01b031614806124b057506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b80611cac5750836001600160a01b03166124c9846107ee565b6001600160a01b031614949350505050565b6124e684848461276c565b6124f2848484846128d0565b6107e85760405162461bcd60e51b81526004016107499061351c565b60008281526002840160205260408120829055611cac84846129d1565b6000610618825490565b60606106186001600160a01b03831660145b60606000612556836002613584565b61256190600261359b565b67ffffffffffffffff81111561257957612579612d19565b6040519080825280601f01601f1916602001820160405280156125a3576020820181803683370190505b509050600360fc1b816000815181106125be576125be6135ae565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106125ed576125ed6135ae565b60200101906001600160f81b031916908160001a9053506000612611846002613584565b61261c90600161359b565b90505b6001811115612694576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110612650576126506135ae565b1a60f81b828281518110612666576126666135ae565b60200101906001600160f81b031916908160001a90535060049490941c9361268d816135c4565b905061261f565b5083156114a95760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610749565b6126ec816122c9565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606114a98383604051806060016040528060278152602001613702602791396129dd565b600081815260018301602052604081205415156114a9565b60006114a98383612a55565b826001600160a01b031661277f82611bc6565b6001600160a01b0316146127a55760405162461bcd60e51b8152600401610749906135db565b6001600160a01b0382166128075760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610749565b826001600160a01b031661281a82611bc6565b6001600160a01b0316146128405760405162461bcd60e51b8152600401610749906135db565b600081815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260688552838620805460001901905590871680865283862080546001019055868652606790945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006001600160a01b0384163b156129c657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612914903390899088908890600401613620565b6020604051808303816000875af192505050801561294f575060408051601f3d908101601f1916820190925261294c91810190613653565b60015b6129ac573d80801561297d576040519150601f19603f3d011682016040523d82523d6000602084013e612982565b606091505b5080516000036129a45760405162461bcd60e51b81526004016107499061351c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611cac565b506001949350505050565b60006114a98383612b48565b6060600080856001600160a01b0316856040516129fa9190613670565b600060405180830381855af49150503d8060008114612a35576040519150601f19603f3d011682016040523d82523d6000602084013e612a3a565b606091505b5091509150612a4b86838387612b97565b9695505050505050565b60008181526001830160205260408120548015612b3e576000612a7960018361368c565b8554909150600090612a8d9060019061368c565b9050818114612af2576000866000018281548110612aad57612aad6135ae565b9060005260206000200154905080876000018481548110612ad057612ad06135ae565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080612b0357612b0361369f565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610618565b6000915050610618565b6000818152600183016020526040812054612b8f57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610618565b506000610618565b60608315612c06578251600003612bff576001600160a01b0385163b612bff5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610749565b5081611cac565b611cac8383815115612c1b5781518083602001fd5b8060405162461bcd60e51b81526004016107499190612d06565b508054612c41906131e0565b6000825580601f10612c51575050565b601f016020900490600052602060002090810190610cf691905b80821115612c7f5760008155600101612c6b565b5090565b6001600160e01b031981168114610cf657600080fd5b600060208284031215612cab57600080fd5b81356114a981612c83565b60005b83811015612cd1578181015183820152602001612cb9565b50506000910152565b60008151808452612cf2816020860160208601612cb6565b601f01601f19169290920160200192915050565b6020815260006114a96020830184612cda565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715612d5257612d52612d19565b60405290565b600082601f830112612d6957600080fd5b813567ffffffffffffffff80821115612d8457612d84612d19565b604051601f8301601f19908116603f01168101908282118183101715612dac57612dac612d19565b81604052838152866020858801011115612dc557600080fd5b836020870160208301376000602085830101528094505050505092915050565b80356001600160a01b0381168114612dfc57600080fd5b919050565b600080600060608486031215612e1657600080fd5b833567ffffffffffffffff80821115612e2e57600080fd5b612e3a87838801612d58565b94506020860135915080821115612e5057600080fd5b50612e5d86828701612d58565b925050612e6c60408501612de5565b90509250925092565b600060208284031215612e8757600080fd5b5035919050565b60008060408385031215612ea157600080fd5b612eaa83612de5565b946020939093013593505050565b60208152815160208201526000602083015160018060a01b03808216604085015263ffffffff60408601511660608501526060850151915060c06080850152612f0460e0850183612cda565b91506080850151601f198584030160a0860152612f218382612cda565b9250508060a08601511660c0850152508091505092915050565b600080600060608486031215612f5057600080fd5b612f5984612de5565b9250612f6760208501612de5565b9150604084013590509250925092565b600060208284031215612f8957600080fd5b6114a982612de5565b60008060408385031215612fa557600080fd5b82359150612fb560208401612de5565b90509250929050565b60008060408385031215612fd157600080fd5b612fda83612de5565b9150602083013567ffffffffffffffff811115612ff657600080fd5b61300285828601612d58565b9150509250929050565b8015158114610cf657600080fd5b6000806040838503121561302d57600080fd5b61303683612de5565b915060208301356130468161300c565b809150509250929050565b6000806000806080858703121561306757600080fd5b61307085612de5565b935061307e60208601612de5565b925060408501359150606085013567ffffffffffffffff8111156130a157600080fd5b6130ad87828801612d58565b91505092959194509250565b600080604083850312156130cc57600080fd5b6130d583612de5565b9150612fb560208401612de5565b803563ffffffff81168114612dfc57600080fd5b6000806040838503121561310a57600080fd5b823567ffffffffffffffff8082111561312257600080fd5b9084019060c0828703121561313657600080fd5b61313e612d2f565b8235815261314e60208401612de5565b602082015261315f604084016130e3565b604082015260608301358281111561317657600080fd5b61318288828601612d58565b60608301525060808301358281111561319a57600080fd5b6131a688828601612d58565b6080830152506131b860a08401612de5565b60a0820152935060208501359150808211156131d357600080fd5b5061300285828601612d58565b600181811c908216806131f457607f821691505b60208210810361321457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6000602082840312156132c457600080fd5b81516114a98161300c565b60208082526022908201527f696e76616c696420726573706f6e73652066726f6d20646174612073746f7261604082015261676560f01b606082015260800190565b601f82111561092557600081815260208120601f850160051c810160208610156133385750805b601f850160051c820191505b8181101561335757828155600101613344565b505050505050565b815167ffffffffffffffff81111561337957613379612d19565b61338d8161338784546131e0565b84613311565b602080601f8311600181146133c257600084156133aa5750858301515b600019600386901b1c1916600185901b178555613357565b600085815260208120601f198616915b828110156133f1578886015182559484019460019091019084016133d2565b508582101561340f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0383168152604060208201819052600090611cac90830184612cda565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000602082840312156134a057600080fd5b5051919050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516134df816017850160208801612cb6565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351613510816028840160208801612cb6565b01602801949350505050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176106185761061861356e565b808201808211156106185761061861356e565b634e487b7160e01b600052603260045260246000fd5b6000816135d3576135d361356e565b506000190190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612a4b90830184612cda565b60006020828403121561366557600080fd5b81516114a981612c83565b60008251613682818460208701612cb6565b9190910192915050565b818103818111156106185761061861356e565b634e487b7160e01b600052603160045260246000fdfe5468652077616c6c657420646f6573206e6f742068617665206120636f6d706c657465642070726f66696c65360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122002ed85b0b5f4d68d5f1c3287a166bb2d66cfe8315286e1ed0becb03474b8e97964736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52D1902D GT PUSH2 0x10D JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x551 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x571 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5DA JUMPI DUP1 PUSH4 0xFAF4A931 EQ PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4E7 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4FC JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0x773C02D4 EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x5DC4FE7E EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x3659CFE6 GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x44DF8E70 EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x3EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x1F52B76C EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x77F224A EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x26C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x2C99 JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH2 0x61E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E01 JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E75 JUMP JUMPDEST PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x2E8E JUMP JUMPDEST PUSH2 0x815 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x92A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E75 JUMP JUMPDEST PUSH2 0x93C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x2EB8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x2F3B JUMP JUMPDEST PUSH2 0xB38 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x2E75 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x2F77 JUMP JUMPDEST PUSH2 0xB6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x39F CALLDATASIZE PUSH1 0x4 PUSH2 0x2F92 JUMP JUMPDEST PUSH2 0xB77 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x3BF CALLDATASIZE PUSH1 0x4 PUSH2 0x2F92 JUMP JUMPDEST PUSH2 0xB9C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x3DF CALLDATASIZE PUSH1 0x4 PUSH2 0x2F77 JUMP JUMPDEST PUSH2 0xC1A JUMP JUMPDEST PUSH2 0x26A PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x2FBE JUMP JUMPDEST PUSH2 0x1059 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x1125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x42F CALLDATASIZE PUSH1 0x4 PUSH2 0x2F77 JUMP JUMPDEST PUSH2 0x11D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x44F CALLDATASIZE PUSH1 0x4 PUSH2 0x2E75 JUMP JUMPDEST PUSH2 0x1258 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x46F CALLDATASIZE PUSH1 0x4 PUSH2 0x2F77 JUMP JUMPDEST PUSH2 0x1298 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x12C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x4A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F77 JUMP JUMPDEST PUSH2 0x12D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x28C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x4E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F92 JUMP JUMPDEST PUSH2 0x1300 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH2 0x132B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x52C CALLDATASIZE PUSH1 0x4 PUSH2 0x301A JUMP JUMPDEST PUSH2 0x133A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x54C CALLDATASIZE PUSH1 0x4 PUSH2 0x3051 JUMP JUMPDEST PUSH2 0x1345 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH2 0x56C CALLDATASIZE PUSH1 0x4 PUSH2 0x2E75 JUMP JUMPDEST PUSH2 0x1379 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x58C CALLDATASIZE PUSH1 0x4 PUSH2 0x2F92 JUMP JUMPDEST PUSH2 0x14B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x5AC CALLDATASIZE PUSH1 0x4 PUSH2 0x30B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0x5F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F77 JUMP JUMPDEST PUSH2 0x14D5 JUMP JUMPDEST PUSH2 0x2D9 PUSH2 0x608 CALLDATASIZE PUSH1 0x4 PUSH2 0x30F7 JUMP JUMPDEST PUSH2 0x154B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x618 DUP3 PUSH2 0x1A35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x65 DUP1 SLOAD PUSH2 0x62D SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x659 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x67B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x689 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x6D0 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x6EA JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6EA JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x775 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x77D PUSH2 0x1A5A JUMP JUMPDEST PUSH2 0x785 PUSH2 0x1A89 JUMP JUMPDEST PUSH2 0x78F DUP5 DUP5 PUSH2 0x1AB0 JUMP JUMPDEST PUSH2 0x797 PUSH2 0x1A89 JUMP JUMPDEST PUSH2 0x7A2 PUSH1 0x0 DUP4 PUSH2 0x1AE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F9 DUP3 PUSH2 0x1B67 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x820 DUP3 PUSH2 0x1BC6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x88D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x749 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x8A9 JUMPI POP PUSH2 0x8A9 DUP2 CALLER PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x91B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x749 JUMP JUMPDEST PUSH2 0x925 DUP4 DUP4 PUSH2 0x1C26 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x937 PUSH2 0x162 PUSH2 0x1C94 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP3 DUP5 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0xF DUP5 MSTORE PUSH15 0x125B9D985B1A59081D1BDAD95B9259 PUSH1 0x8A SHL SWAP1 DUP5 ADD MSTORE SWAP1 SWAP2 PUSH2 0x9A1 SWAP1 PUSH2 0x15F SWAP1 DUP6 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x167 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP6 DUP7 AND SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP5 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x2 DUP4 ADD DUP1 SLOAD SWAP5 SWAP6 POP SWAP2 SWAP4 SWAP1 SWAP3 SWAP2 PUSH1 0x60 DUP5 ADD SWAP2 PUSH2 0xA07 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA33 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA80 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA55 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA80 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA63 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0xA99 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAC5 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB12 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAE7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB12 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAF5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0xB60 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3859B9E9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x925 DUP4 DUP4 DUP4 PUSH2 0x1CB4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x618 DUP2 DUP4 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xB92 DUP2 PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0x925 DUP4 DUP4 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x749 JUMP JUMPDEST PUSH2 0xC16 DUP3 DUP3 PUSH2 0x1CD9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x321A JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCAB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36E2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x3266 JUMP JUMPDEST PUSH2 0xCDA DUP2 PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCF6 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xD05 PUSH2 0x162 CALLER PUSH2 0x1EB3 JUMP JUMPDEST PUSH2 0xD5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206163636F756E7420646F6573206E6F7420686176652070726F66696C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x749 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD69 PUSH2 0x162 CALLER PUSH2 0x1EC8 JUMP JUMPDEST SWAP1 POP PUSH2 0xD77 PUSH2 0x162 CALLER PUSH2 0x1EDD JUMP JUMPDEST POP PUSH2 0xD84 PUSH2 0x15F DUP3 PUSH2 0x1EF2 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x167 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP4 DIV PUSH4 0xFFFFFFFF AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 PUSH2 0xDE4 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE10 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE5D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE32 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE5D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE40 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0xE76 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEA2 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEEF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEC4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEEF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xED2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 SWAP3 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x166 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP2 MLOAD CALLER DUP2 DUP8 ADD MSTORE DUP3 MLOAD DUP1 DUP3 SUB SWAP1 SWAP7 ADD DUP7 MSTORE DUP1 DUP4 ADD SWAP3 DUP4 SWAP1 MSTORE PUSH4 0x163B7BD3 PUSH1 0xE2 SHL SWAP1 SWAP3 MSTORE SWAP5 SWAP6 POP SWAP1 SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH4 0x58EDEF4C SWAP2 PUSH2 0xF65 SWAP2 SWAP1 PUSH1 0x44 ADD PUSH2 0x2D06 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF84 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFA8 SWAP2 SWAP1 PUSH2 0x32B2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ PUSH2 0xFCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x32CF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x167 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 PUSH2 0xFFF PUSH1 0x2 DUP4 ADD DUP3 PUSH2 0x2C35 JUMP JUMPDEST PUSH2 0x100D PUSH1 0x3 DUP4 ADD PUSH1 0x0 PUSH2 0x2C35 JUMP JUMPDEST POP PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x10A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x321A JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10EA PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36E2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1110 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x3266 JUMP JUMPDEST PUSH2 0x1119 DUP3 PUSH2 0x1D40 JUMP JUMPDEST PUSH2 0xC16 DUP3 DUP3 PUSH1 0x1 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x11C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x749 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36E2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x11E0 PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x122D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x73746F72616765207A65726F2061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x749 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x166 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x618 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH15 0x125B9D985B1A59081D1BDAD95B9259 PUSH1 0x8A SHL DUP2 MSTORE POP PUSH2 0x15F PUSH2 0x1C9F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x12A7 PUSH2 0x162 DUP5 PUSH2 0x1F58 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x12B6 JUMPI PUSH1 0x0 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x12CB PUSH2 0x1EFE JUMP JUMPDEST PUSH2 0x12D5 PUSH1 0x0 PUSH2 0x1F7F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x618 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36B6 PUSH1 0x2C SWAP2 CODECOPY PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x1FD1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xC9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x66 DUP1 SLOAD PUSH2 0x62D SWAP1 PUSH2 0x31E0 JUMP JUMPDEST PUSH2 0xC16 CALLER DUP4 DUP4 PUSH2 0x1FE7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x136D JUMPI PUSH1 0x40 MLOAD PUSH4 0x3859B9E9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7E8 DUP5 DUP5 DUP5 DUP5 PUSH2 0x20B5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x13BB DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH15 0x151BDAD95B881B9BDD08195E1A5CDD PUSH1 0x8A SHL DUP2 MSTORE POP PUSH2 0x15F PUSH2 0x1C9F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x167 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH2 0x13E7 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x1403 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x167 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x142A SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1456 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1478 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1486 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x14CB DUP2 PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0x925 DUP4 DUP4 PUSH2 0x1CD9 JUMP JUMPDEST PUSH2 0x14DD PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1542 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x749 JUMP JUMPDEST PUSH2 0xCF6 DUP2 PUSH2 0x1F7F JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1579 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE57FFD07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x166 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x15E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73746F72616765206E6F7420696E697469616C697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x749 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F4 PUSH2 0x162 CALLER PUSH2 0x1EB3 JUMP JUMPDEST ISZERO PUSH2 0x185A JUMPI PUSH2 0x1605 PUSH2 0x162 CALLER PUSH2 0x1EC8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x167 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP4 DIV PUSH4 0xFFFFFFFF AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 ADD DUP1 SLOAD SWAP5 SWAP6 POP SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 PUSH2 0x166D SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1699 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16E6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16BB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16E6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16C9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0x16FF SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x172B SWAP1 PUSH2 0x31E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1778 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x174D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1778 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x175B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP8 DUP2 ADD MLOAD SWAP1 DUP4 ADD MLOAD SWAP3 SWAP4 POP DUP2 AND SWAP2 AND EQ PUSH2 0x1854 JUMPI PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x166 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD CALLER DUP2 DUP5 ADD MSTORE DUP4 MLOAD DUP1 DUP3 SUB SWAP1 SWAP4 ADD DUP4 MSTORE DUP1 DUP5 ADD SWAP4 DUP5 SWAP1 MSTORE PUSH4 0x163B7BD3 PUSH1 0xE2 SHL SWAP1 SWAP4 MSTORE SWAP1 SWAP3 AND SWAP2 PUSH4 0x58EDEF4C SWAP2 PUSH2 0x180F SWAP2 SWAP1 PUSH1 0x44 ADD PUSH2 0x2D06 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x182E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1852 SWAP2 SWAP1 PUSH2 0x32B2 JUMP JUMPDEST POP JUMPDEST POP PUSH2 0x188B JUMP JUMPDEST PUSH2 0x1869 PUSH2 0x165 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST POP PUSH2 0x165 SLOAD PUSH2 0x187B PUSH2 0x162 CALLER DUP4 PUSH2 0x212D JUMP JUMPDEST POP PUSH2 0x1889 PUSH2 0x15F DUP3 CALLER PUSH2 0x2143 JUMP JUMPDEST POP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x167 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP7 MLOAD DUP2 SSTORE SWAP1 DUP7 ADD MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP4 DUP9 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP6 ADD MLOAD DUP6 SWAP2 SWAP1 PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x18F7 SWAP1 DUP3 PUSH2 0x335F JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SWAP1 PUSH2 0x190C SWAP1 DUP3 PUSH2 0x335F JUMP JUMPDEST POP PUSH1 0xA0 SWAP2 DUP3 ADD MLOAD PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE SWAP1 DUP6 ADD MLOAD DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x166 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH4 0xCF5BA53F SWAP2 PUSH2 0x1966 SWAP2 CALLER SWAP2 DUP10 SWAP2 ADD PUSH2 0x341F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1991 SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19D4 SWAP2 SWAP1 PUSH2 0x32B2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ PUSH2 0x19F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x32CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x618 JUMPI POP PUSH2 0x618 DUP3 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A81 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x3443 JUMP JUMPDEST PUSH2 0x12D5 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x12D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x3443 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1AD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x3443 JUMP JUMPDEST PUSH2 0xC16 DUP3 DUP3 PUSH2 0x21D9 JUMP JUMPDEST PUSH2 0x1AEB DUP3 DUP3 PUSH2 0x1300 JUMP JUMPDEST PUSH2 0xC16 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1B23 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x749 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x749 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x1C5B DUP3 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x618 DUP3 PUSH2 0x2219 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CAC DUP5 DUP5 DUP5 PUSH2 0x2224 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x925 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1345 JUMP JUMPDEST PUSH2 0xCF6 DUP2 CALLER PUSH2 0x2270 JUMP JUMPDEST PUSH2 0x1CE3 DUP3 DUP3 PUSH2 0x1300 JUMP JUMPDEST ISZERO PUSH2 0xC16 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0xCF6 PUSH2 0x1EFE JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1D7B JUMPI PUSH2 0x925 DUP4 PUSH2 0x22C9 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1DD5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1DD2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x348E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1E38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x749 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36E2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x1EA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x749 JUMP JUMPDEST POP PUSH2 0x925 DUP4 DUP4 DUP4 PUSH2 0x2365 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A9 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x238A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A9 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2396 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A9 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2406 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A9 DUP4 DUP4 PUSH2 0x2406 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x749 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x1F70 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x2423 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CAC DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 PUSH2 0x2224 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x2048 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x749 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x20BF CALLER DUP4 PUSH2 0x245D JUMP JUMPDEST PUSH2 0x2121 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x749 JUMP JUMPDEST PUSH2 0x7E8 DUP5 DUP5 DUP5 DUP5 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CAC DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 PUSH2 0x250E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CAC DUP5 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x250E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x218A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x618 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x618 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x21D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x3443 JUMP JUMPDEST PUSH2 0x12D5 CALLER PUSH2 0x1F7F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2200 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x3443 JUMP JUMPDEST PUSH1 0x65 PUSH2 0x220C DUP4 DUP3 PUSH2 0x335F JUMP JUMPDEST POP PUSH1 0x66 PUSH2 0x925 DUP3 DUP3 PUSH2 0x335F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x618 DUP3 PUSH2 0x252B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x2248 JUMPI POP PUSH2 0x2248 DUP6 DUP6 PUSH2 0x238A JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x2267 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x227A DUP3 DUP3 PUSH2 0x1300 JUMP JUMPDEST PUSH2 0xC16 JUMPI PUSH2 0x2287 DUP2 PUSH2 0x2535 JUMP JUMPDEST PUSH2 0x2292 DUP4 PUSH1 0x20 PUSH2 0x2547 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x22A3 SWAP3 SWAP2 SWAP1 PUSH2 0x34A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x749 SWAP2 PUSH1 0x4 ADD PUSH2 0x2D06 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x2336 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x749 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36E2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x236E DUP4 PUSH2 0x26E3 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x237B JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x925 JUMPI PUSH2 0x7E8 DUP4 DUP4 PUSH2 0x2723 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A9 DUP4 DUP4 PUSH2 0x2748 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x23BA JUMPI POP PUSH2 0x23BA DUP5 DUP5 PUSH2 0x238A JUMP JUMPDEST PUSH2 0x14A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E756D657261626C654D61703A206E6F6E6578697374656E74206B65790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x749 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x14A9 DUP4 DUP4 PUSH2 0x2760 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP1 PUSH2 0x2452 JUMPI PUSH2 0x2445 DUP6 DUP6 PUSH2 0x238A JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0x1F78 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SWAP3 POP SWAP1 POP PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2469 DUP4 PUSH2 0x1BC6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x24B0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x1CAC JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24C9 DUP5 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x24E6 DUP5 DUP5 DUP5 PUSH2 0x276C JUMP JUMPDEST PUSH2 0x24F2 DUP5 DUP5 DUP5 DUP5 PUSH2 0x28D0 JUMP JUMPDEST PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x351C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH2 0x1CAC DUP5 DUP5 PUSH2 0x29D1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x618 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x618 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2556 DUP4 PUSH1 0x2 PUSH2 0x3584 JUMP JUMPDEST PUSH2 0x2561 SWAP1 PUSH1 0x2 PUSH2 0x359B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2579 JUMPI PUSH2 0x2579 PUSH2 0x2D19 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x25A3 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x25BE JUMPI PUSH2 0x25BE PUSH2 0x35AE JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x25ED JUMPI PUSH2 0x25ED PUSH2 0x35AE JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x2611 DUP5 PUSH1 0x2 PUSH2 0x3584 JUMP JUMPDEST PUSH2 0x261C SWAP1 PUSH1 0x1 PUSH2 0x359B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2694 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x2650 JUMPI PUSH2 0x2650 PUSH2 0x35AE JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2666 JUMPI PUSH2 0x2666 PUSH2 0x35AE JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x268D DUP2 PUSH2 0x35C4 JUMP JUMPDEST SWAP1 POP PUSH2 0x261F JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x14A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x749 JUMP JUMPDEST PUSH2 0x26EC DUP2 PUSH2 0x22C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x14A9 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3702 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x29DD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A9 DUP4 DUP4 PUSH2 0x2A55 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x277F DUP3 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x27A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x35DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2807 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x749 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x281A DUP3 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2840 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x35DB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x68 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x67 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x29C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x2914 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x294F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x294C SWAP2 DUP2 ADD SWAP1 PUSH2 0x3653 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x29AC JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x297D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2982 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x29A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x351C JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x1CAC JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A9 DUP4 DUP4 PUSH2 0x2B48 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x29FA SWAP2 SWAP1 PUSH2 0x3670 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2A35 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2A3A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2A4B DUP7 DUP4 DUP4 DUP8 PUSH2 0x2B97 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x2B3E JUMPI PUSH1 0x0 PUSH2 0x2A79 PUSH1 0x1 DUP4 PUSH2 0x368C JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2A8D SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x368C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x2AF2 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2AAD JUMPI PUSH2 0x2AAD PUSH2 0x35AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2AD0 JUMPI PUSH2 0x2AD0 PUSH2 0x35AE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x2B03 JUMPI PUSH2 0x2B03 PUSH2 0x369F JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x618 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x618 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x2B8F JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x618 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x618 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2C06 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x2BFF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x2BFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x749 JUMP JUMPDEST POP DUP2 PUSH2 0x1CAC JUMP JUMPDEST PUSH2 0x1CAC DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x2C1B JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP2 SWAP1 PUSH2 0x2D06 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x2C41 SWAP1 PUSH2 0x31E0 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2C51 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xCF6 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2C7F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2C6B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xCF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14A9 DUP2 PUSH2 0x2C83 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2CD1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2CB9 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2CF2 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2CB6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x14A9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2CDA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2D52 JUMPI PUSH2 0x2D52 PUSH2 0x2D19 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2D84 JUMPI PUSH2 0x2D84 PUSH2 0x2D19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2DAC JUMPI PUSH2 0x2DAC PUSH2 0x2D19 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x2DC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2DFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2E16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2E2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E3A DUP8 DUP4 DUP9 ADD PUSH2 0x2D58 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2E50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E5D DUP7 DUP3 DUP8 ADD PUSH2 0x2D58 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x2E6C PUSH1 0x40 DUP6 ADD PUSH2 0x2DE5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2EAA DUP4 PUSH2 0x2DE5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF PUSH1 0x40 DUP7 ADD MLOAD AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x60 DUP6 ADD MLOAD SWAP2 POP PUSH1 0xC0 PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x2F04 PUSH1 0xE0 DUP6 ADD DUP4 PUSH2 0x2CDA JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x1F NOT DUP6 DUP5 SUB ADD PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x2F21 DUP4 DUP3 PUSH2 0x2CDA JUMP JUMPDEST SWAP3 POP POP DUP1 PUSH1 0xA0 DUP7 ADD MLOAD AND PUSH1 0xC0 DUP6 ADD MSTORE POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2F50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F59 DUP5 PUSH2 0x2DE5 JUMP JUMPDEST SWAP3 POP PUSH2 0x2F67 PUSH1 0x20 DUP6 ADD PUSH2 0x2DE5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14A9 DUP3 PUSH2 0x2DE5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2FB5 PUSH1 0x20 DUP5 ADD PUSH2 0x2DE5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FDA DUP4 PUSH2 0x2DE5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3002 DUP6 DUP3 DUP7 ADD PUSH2 0x2D58 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x302D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3036 DUP4 PUSH2 0x2DE5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3046 DUP2 PUSH2 0x300C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3067 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3070 DUP6 PUSH2 0x2DE5 JUMP JUMPDEST SWAP4 POP PUSH2 0x307E PUSH1 0x20 DUP7 ADD PUSH2 0x2DE5 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30AD DUP8 DUP3 DUP9 ADD PUSH2 0x2D58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x30CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30D5 DUP4 PUSH2 0x2DE5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FB5 PUSH1 0x20 DUP5 ADD PUSH2 0x2DE5 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2DFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x310A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP5 ADD SWAP1 PUSH1 0xC0 DUP3 DUP8 SUB SLT ISZERO PUSH2 0x3136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x313E PUSH2 0x2D2F JUMP JUMPDEST DUP3 CALLDATALOAD DUP2 MSTORE PUSH2 0x314E PUSH1 0x20 DUP5 ADD PUSH2 0x2DE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x315F PUSH1 0x40 DUP5 ADD PUSH2 0x30E3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x3176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3182 DUP9 DUP3 DUP7 ADD PUSH2 0x2D58 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x319A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31A6 DUP9 DUP3 DUP7 ADD PUSH2 0x2D58 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH2 0x31B8 PUSH1 0xA0 DUP5 ADD PUSH2 0x2DE5 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x31D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3002 DUP6 DUP3 DUP7 ADD PUSH2 0x2D58 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x31F4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3214 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x14A9 DUP2 PUSH2 0x300C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420726573706F6E73652066726F6D20646174612073746F7261 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6765 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x925 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x3338 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3357 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3344 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3379 JUMPI PUSH2 0x3379 PUSH2 0x2D19 JUMP JUMPDEST PUSH2 0x338D DUP2 PUSH2 0x3387 DUP5 SLOAD PUSH2 0x31E0 JUMP JUMPDEST DUP5 PUSH2 0x3311 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x33C2 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x33AA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x3357 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x33F1 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x33D2 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x340F JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1CAC SWAP1 DUP4 ADD DUP5 PUSH2 0x2CDA JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x34DF DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2CB6 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x3510 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2CB6 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x618 JUMPI PUSH2 0x618 PUSH2 0x356E JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x618 JUMPI PUSH2 0x618 PUSH2 0x356E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x35D3 JUMPI PUSH2 0x35D3 PUSH2 0x356E JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2A4B SWAP1 DUP4 ADD DUP5 PUSH2 0x2CDA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x14A9 DUP2 PUSH2 0x2C83 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3682 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2CB6 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x618 JUMPI PUSH2 0x618 PUSH2 0x356E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID SLOAD PUSH9 0x652077616C6C657420 PUSH5 0x6F6573206E PUSH16 0x742068617665206120636F6D706C6574 PUSH6 0x642070726F66 PUSH10 0x6C65360894A13BA1A321 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A264697066735822122002 0xED DUP6 0xB0 0xB5 DELEGATECALL 0xD6 DUP14 0x5F SHR ORIGIN DUP8 LOG1 PUSH7 0xBB2D66CFE83152 DUP7 0xE1 0xED SIGNEXTEND 0xEC 0xB0 CALLVALUE PUSH21 0xB8E97964736F6C6343000813003300000000000000 ","sourceMap":"763:5947:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5373:208;;;;;;;;;;-1:-1:-1;5373:208:26;;;;;:::i;:::-;;:::i;:::-;;;565:14:28;;558:22;540:41;;528:2;513:18;5373:208:26;;;;;;;;2932:98:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2094:280:26:-;;;;;;;;;;-1:-1:-1;2094:280:26;;;;;:::i;:::-;;:::i;:::-;;4407:167:9;;;;;;;;;;-1:-1:-1;4407:167:9;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3606:32:28;;;3588:51;;3576:2;3561:18;4407:167:9;3442:203:28;3929:417:9;;;;;;;;;;-1:-1:-1;3929:417:9;;;;;:::i;:::-;;:::i;5141:97:26:-;;;;;;;;;;;;;:::i;:::-;;;4055:25:28;;;4043:2;4028:18;5141:97:26;3909:177:28;4388:236:26;;;;;;;;;;-1:-1:-1;4388:236:26;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5587:262::-;;;;;;;;;;-1:-1:-1;5587:262:26;;;;;:::i;:::-;;:::i;4834:129:0:-;;;;;;;;;;-1:-1:-1;4834:129:0;;;;;:::i;:::-;4908:7;4934:12;;;:6;:12;;;;;:22;;;;4834:129;5244:123:26;;;;;;;;;;-1:-1:-1;5244:123:26;;;;;:::i;:::-;;:::i;5259:145:0:-;;;;;;;;;;-1:-1:-1;5259:145:0;;;;;:::i;:::-;;:::i;6368:214::-;;;;;;;;;;-1:-1:-1;6368:214:0;;;;;:::i;:::-;;:::i;3387:195:8:-;;;;;;;;;;-1:-1:-1;3387:195:8;;;;;:::i;:::-;;:::i;3817:565:26:-;;;:::i;3901:220:8:-;;;;;;:::i;:::-;;:::i;3006:131::-;;;;;;;;;;;;;:::i;6402:216:26:-;;;;;;;;;;-1:-1:-1;6402:216:26;;;;;:::i;:::-;;:::i;4978:157::-;;;;;;;;;;-1:-1:-1;4978:157:26;;;;;:::i;:::-;;:::i;4630:182::-;;;;;;;;;;-1:-1:-1;4630:182:26;;;;;:::i;:::-;;:::i;2064:101:2:-;;;;;;;;;;;;;:::i;4818:154:26:-;;;;;;;;;;-1:-1:-1;4818:154:26;;;;;:::i;:::-;;:::i;1441:85:2:-;;;;;;;;;;-1:-1:-1;1513:6:2;;-1:-1:-1;;;;;1513:6:2;1441:85;;3329:145:0;;;;;;;;;;-1:-1:-1;3329:145:0;;;;;:::i;:::-;;:::i;3094:102:9:-;;;;;;;;;;;;;:::i;2450:49:0:-;;;;;;;;;;-1:-1:-1;2450:49:0;2495:4;2450:49;;4641:153:9;;;;;;;;;;-1:-1:-1;4641:153:9;;;;;:::i;:::-;;:::i;6097:299:26:-;;;;;;;;;;-1:-1:-1;6097:299:26;;;;;:::i;:::-;;:::i;2380:266::-;;;;;;;;;;-1:-1:-1;2380:266:26;;;;;:::i;:::-;;:::i;5684:147:0:-;;;;;;;;;;-1:-1:-1;5684:147:0;;;;;:::i;:::-;;:::i;4860:162:9:-;;;;;;;;;;-1:-1:-1;4860:162:9;;;;;:::i;:::-;-1:-1:-1;;;;;4980:25:9;;;4957:4;4980:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4860:162;2314:198:2;;;;;;;;;;-1:-1:-1;2314:198:2;;;;;:::i;:::-;;:::i;2652:1159:26:-;;;;;;:::i;:::-;;:::i;5373:208::-;5511:4;5538:36;5562:11;5538:23;:36::i;:::-;5531:43;5373:208;-1:-1:-1;;5373:208:26:o;2932:98:9:-;2986:13;3018:5;3011:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2932:98;:::o;2094:280:26:-;3279:19:7;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:7;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:7;1713:19:15;:23;;;3387:66:7;;-1:-1:-1;3436:12:7;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:7;;9818:2:28;3325:201:7;;;9800:21:28;9857:2;9837:18;;;9830:30;9896:34;9876:18;;;9869:62;-1:-1:-1;;;9947:18:28;;;9940:44;10001:19;;3325:201:7;;;;;;;;;3536:12;:16;;-1:-1:-1;;3536:16:7;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:7;;;;;3562:65;2200:16:26::1;:14;:16::i;:::-;2226:22;:20;:22::i;:::-;2258:27;2272:4;2278:6;2258:13;:27::i;:::-;2295:24;:22;:24::i;:::-;2330:37;2495:4:0;2361:5:26::0;2330:10:::1;:37::i;:::-;3651:14:7::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:7;;;3721:14;;-1:-1:-1;10183:36:28;;3721:14:7;;10171:2:28;10156:18;3721:14:7;;;;;;;3647:99;3269:483;2094:280:26;;;:::o;4407:167:9:-;4483:7;4502:23;4517:7;4502:14;:23::i;:::-;-1:-1:-1;4543:24:9;;;;:15;:24;;;;;;-1:-1:-1;;;;;4543:24:9;;4407:167::o;3929:417::-;4009:13;4025:34;4051:7;4025:25;:34::i;:::-;4009:50;;4083:5;-1:-1:-1;;;;;4077:11:9;:2;-1:-1:-1;;;;;4077:11:9;;4069:57;;;;-1:-1:-1;;;4069:57:9;;10432:2:28;4069:57:9;;;10414:21:28;10471:2;10451:18;;;10444:30;10510:34;10490:18;;;10483:62;-1:-1:-1;;;10561:18:28;;;10554:31;10602:19;;4069:57:9;10230:397:28;4069:57:9;929:10:16;-1:-1:-1;;;;;4158:21:9;;;;:62;;-1:-1:-1;4183:37:9;4200:5;929:10:16;4860:162:9;:::i;4183:37::-;4137:170;;;;-1:-1:-1;;;4137:170:9;;10834:2:28;4137:170:9;;;10816:21:28;10873:2;10853:18;;;10846:30;10912:34;10892:18;;;10885:62;10983:31;10963:18;;;10956:59;11032:19;;4137:170:9;10632:425:28;4137:170:9;4318:21;4327:2;4331:7;4318:8;:21::i;:::-;3999:347;3929:417;;:::o;5141:97:26:-;5187:7;5213:18;:9;:16;:18::i;:::-;5206:25;;5141:97;:::o;4388:236::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4497:41:26;;;;;;;;;;;-1:-1:-1;;;4497:41:26;;;;-1:-1:-1;;4497:41:26;;:9;;4511:7;;4497:13;:41::i;:::-;-1:-1:-1;;;;;4577:16:26;;;4548:26;4577:16;;;:9;:16;;;;;;;;4548:45;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4548:45:26;;;;;;;;;;;;;;4577:16;;-1:-1:-1;4548:26:26;;:45;;4577:16;4548:45;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4548:45:26;;;-1:-1:-1;;4548:45:26;;;;;;-1:-1:-1;;;;;4548:45:26;;;;;;;4388:236;-1:-1:-1;;;;4388:236:26:o;5587:262::-;-1:-1:-1;;;;;5739:18:26;;;5735:56;;5766:25;;-1:-1:-1;;;5766:25:26;;;;;;;;;;;5735:56;5801:41;5824:4;5830:2;5834:7;5801:22;:41::i;5244:123::-;5301:4;5324:36;5301:4;5352:7;5324;:36::i;5259:145:0:-;4908:7;4934:12;;;:6;:12;;;;;:22;;;2928:16;2939:4;2928:10;:16::i;:::-;5372:25:::1;5383:4;5389:7;5372:10;:25::i;6368:214::-:0;-1:-1:-1;;;;;6463:23:0;;929:10:16;6463:23:0;6455:83;;;;-1:-1:-1;;;6455:83:0;;11264:2:28;6455:83:0;;;11246:21:28;11303:2;11283:18;;;11276:30;11342:34;11322:18;;;11315:62;-1:-1:-1;;;11393:18:28;;;11386:45;11448:19;;6455:83:0;11062:411:28;6455:83:0;6549:26;6561:4;6567:7;6549:11;:26::i;:::-;6368:214;;:::o;3387:195:8:-;-1:-1:-1;;;;;1898:6:8;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:8;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:8;:20;-1:-1:-1;;;;;;;;;;;1536:65:5;-1:-1:-1;;;;;1536:65:5;;1457:151;1971:20:8;-1:-1:-1;;;;;1971:30:8;;1963:87;;;;-1:-1:-1;;;1963:87:8;;;;;;;:::i;:::-;3468:36:::1;3486:17;3468;:36::i;:::-;3555:12;::::0;;3565:1:::1;3555:12:::0;;;::::1;::::0;::::1;::::0;;;3514:61:::1;::::0;3536:17;;3555:12;3514:21:::1;:61::i;:::-;3387:195:::0;:::o;3817:565:26:-;3868:30;:9;3887:10;3868:18;:30::i;:::-;3860:76;;;;-1:-1:-1;;;3860:76:26;;12506:2:28;3860:76:26;;;12488:21:28;12545:2;12525:18;;;12518:30;12584:34;12564:18;;;12557:62;-1:-1:-1;;;12635:18:28;;;12628:31;12676:19;;3860:76:26;12304:397:28;3860:76:26;3947:15;3965:25;:9;3979:10;3965:13;:25::i;:::-;3947:43;-1:-1:-1;4001:28:26;:9;4018:10;4001:16;:28::i;:::-;-1:-1:-1;4039:25:26;:9;4056:7;4039:16;:25::i;:::-;-1:-1:-1;4114:10:26;4075:26;4104:21;;;:9;:21;;;;;;;;4075:50;;;;;;;;;;;;;;;-1:-1:-1;;;;;4075:50:26;;;;;;;;;-1:-1:-1;;;4075:50:26;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4075:50:26;;;-1:-1:-1;;4075:50:26;;;;;;-1:-1:-1;;;;;4075:50:26;;;;;;;;4171:22;;;;4149:45;;-1:-1:-1;4149:45:26;;;:21;:45;;;;;;;4202:22;;4213:10;4202:22;;;3588:51:28;4202:22:26;;;;;;;;;;3561:18:28;;;4202:22:26;;;;-1:-1:-1;;;4149:76:26;;;4171:22;;-1:-1:-1;;;4149:45:26;;;;:52;;:76;;4202:22;4149:76;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4135:90;-1:-1:-1;4253:4:26;4243:14;;;;4235:61;;;;-1:-1:-1;;;4235:61:26;;;;;;;:::i;:::-;4323:10;4313:21;;;;:9;:21;;;;;4306:28;;;;;;;;-1:-1:-1;;;;;;4306:28:26;;;4313:21;4306:28;;;;4313:21;4306:28;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;4306:28:26;;;;-1:-1:-1;;;;;;4306:28:26;;;4350:25;;4055::28;;;4355:10:26;;4350:25;;4043:2:28;4028:18;4350:25:26;;;;;;;3850:532;;;3817:565::o;3901:220:8:-;-1:-1:-1;;;;;1898:6:8;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:8;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:8;:20;-1:-1:-1;;;;;;;;;;;1536:65:5;-1:-1:-1;;;;;1536:65:5;;1457:151;1971:20:8;-1:-1:-1;;;;;1971:30:8;;1963:87;;;;-1:-1:-1;;;1963:87:8;;;;;;;:::i;:::-;4016:36:::1;4034:17;4016;:36::i;:::-;4062:52;4084:17;4103:4;4109;4062:21;:52::i;3006:131::-:0;3084:7;2324:4;-1:-1:-1;;;;;2333:6:8;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:8;;13784:2:28;2308:92:8;;;13766:21:28;13823:2;13803:18;;;13796:30;13862:34;13842:18;;;13835:62;13933:26;13913:18;;;13906:54;13977:19;;2308:92:8;13582:420:28;2308:92:8;-1:-1:-1;;;;;;;;;;;;3006:131:8;:::o;6402:216:26:-;1334:13:2;:11;:13::i;:::-;-1:-1:-1;;;;;6489:22:26;::::1;6481:55;;;::::0;-1:-1:-1;;;6481:55:26;;14209:2:28;6481:55:26::1;::::0;::::1;14191:21:28::0;14248:2;14228:18;;;14221:30;-1:-1:-1;;;14267:18:28;;;14260:50;14327:18;;6481:55:26::1;14007:344:28::0;6481:55:26::1;-1:-1:-1::0;;;;;6546:31:26::1;;::::0;;;:21:::1;:31;::::0;;;;:65;;-1:-1:-1;;;;;;6546:65:26::1;::::0;;::::1;::::0;;6402:216::o;4978:157::-;5061:7;5087:41;5101:7;5087:41;;;;;;;;;;;;;-1:-1:-1;;;5087:41:26;;;:9;:13;;:41;;;;;:::i;4630:182::-;4713:7;;4750:23;:9;4767:5;4750:16;:23::i;:::-;4732:41;;;4790:7;:15;;4804:1;4790:15;;;4800:1;4790:15;4783:22;;;4630:182;-1:-1:-1;;;4630:182:26:o;2064:101:2:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;:::-;2064:101::o:0;4818:154:26:-;4872:7;4898:67;4912:4;4898:67;;;;;;;;;;;;;;;;;:9;;:67;:13;:67::i;3329:145:0:-;3415:4;3438:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3438:29:0;;;;;;;;;;;;;;;3329:145::o;3094:102:9:-;3150:13;3182:7;3175:14;;;;;:::i;4641:153::-;4735:52;929:10:16;4768:8:9;4778;4735:18;:52::i;6097:299:26:-;-1:-1:-1;;;;;6280:18:26;;;6276:56;;6307:25;;-1:-1:-1;;;6307:25:26;;;;;;;;;;;6276:56;6342:47;6365:4;6371:2;6375:7;6384:4;6342:22;:47::i;2380:266::-;2464:13;2489;2505:41;2519:7;2505:41;;;;;;;;;;;;;-1:-1:-1;;;2505:41:26;;;:9;:13;;:41;;;;;:::i;:::-;-1:-1:-1;;;;;2569:16:26;;2605:1;2569:16;;;:9;:16;;;;;:25;;2563:39;;2489:57;;-1:-1:-1;2605:1:26;;2563:39;;;:::i;:::-;;;:43;:76;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2609:16:26;;;;;;:9;:16;;;;;:25;;2563:76;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2556:83;2380:266;-1:-1:-1;;;2380:266:26:o;5684:147:0:-;4908:7;4934:12;;;:6;:12;;;;;:22;;;2928:16;2939:4;2928:10;:16::i;:::-;5798:26:::1;5810:4;5816:7;5798:11;:26::i;2314:198:2:-:0;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:2;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:2;;14558:2:28;2394:73:2::1;::::0;::::1;14540:21:28::0;14597:2;14577:18;;;14570:30;14636:34;14616:18;;;14609:62;-1:-1:-1;;;14687:18:28;;;14680:36;14733:19;;2394:73:2::1;14356:402:28::0;2394:73:2::1;2477:28;2496:8;2477:18;:28::i;2652:1159:26:-:0;2764:22;;;;2740:7;;-1:-1:-1;;;;;2764:36:26;2760:69;;2809:20;;-1:-1:-1;;;2809:20:26;;;;;;;;;;;2760:69;2877:22;;;;-1:-1:-1;;;;;2855:45:26;;;2913:1;2855:45;;;:21;:45;;;;;;;2839:104;;;;-1:-1:-1;;;2839:104:26;;14965:2:28;2839:104:26;;;14947:21:28;15004:2;14984:18;;;14977:30;15043:25;15023:18;;;15016:53;15086:18;;2839:104:26;14763:347:28;2839:104:26;2954:15;2987:30;:9;3006:10;2987:18;:30::i;:::-;2983:537;;;3043:25;:9;3057:10;3043:13;:25::i;:::-;3125:10;3082:30;3115:21;;;:9;:21;;;;;;;;3082:54;;;;;;;;;;;;;;;-1:-1:-1;;;;;3082:54:26;;;;;;;;;-1:-1:-1;;;3082:54:26;;;;;;;;;;;;;;;;;3033:35;;-1:-1:-1;3082:30:26;;:54;;3115:21;;3082:54;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3082:54:26;;;-1:-1:-1;;3082:54:26;;;;;;-1:-1:-1;;;;;3082:54:26;;;;;;;;;;;3184:22;;;;;3154:26;;;;;;-1:-1:-1;3154:52:26;;;;;3150:171;;3248:26;;;;-1:-1:-1;;;;;3226:49:26;;;;;;;:21;:49;;;;;;;;;;3283:22;;3294:10;3283:22;;;3588:51:28;3283:22:26;;;;;;;;;;3561:18:28;;;3283:22:26;;;;-1:-1:-1;;;3226:80:26;;;:49;;;;:56;;:80;;3283:22;3226:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3150:171;3019:312;2983:537;;;3351:20;:8;1043:19:17;;1061:1;1043:19;;;956:123;3351:20:26;-1:-1:-1;3395:8:26;929:14:17;3427:34:26;:9;3441:10;929:14:17;3427:13:26;:34::i;:::-;-1:-1:-1;3475:34:26;:9;3489:7;3498:10;3475:13;:34::i;:::-;;2983:537;3540:10;3530:21;;;;:9;:21;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3530:31:26;-1:-1:-1;;;;;;3530:31:26;;;-1:-1:-1;;;;;3530:31:26;;;;;;;;;;;;;;;;;;;3554:7;;3530:21;:31;;;;;;;;:::i;:::-;-1:-1:-1;3530:31:26;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3530:31:26;;;;;;;;;;;;-1:-1:-1;;;;;;3530:31:26;-1:-1:-1;;;;;3530:31:26;;;;;;3607:22;;;;3585:45;;-1:-1:-1;3585:45:26;;;:21;:45;;;;;;;;;3638:28;;-1:-1:-1;;3585:45:26;;:52;;3638:28;;3649:10;;3661:4;;3638:28;;:::i;:::-;;;;;;;;;;;;;3585:82;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3571:96;-1:-1:-1;3695:4:26;3685:14;;;;3677:61;;;;-1:-1:-1;;;3677:61:26;;;;;;;:::i;:::-;3754:25;;4055::28;;;3759:10:26;;3754:25;;4043:2:28;4028:18;3754:25:26;;;;;;;-1:-1:-1;3797:7:26;2652:1159;-1:-1:-1;;;2652:1159:26:o;3029:213:0:-;3114:4;-1:-1:-1;;;;;;3137:58:0;;-1:-1:-1;;;3137:58:0;;:98;;;3199:36;3223:11;3199:23;:36::i;1003:95:2:-;5374:13:7;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:7;;;;;;;:::i;:::-;1065:26:2::1;:24;:26::i;2151:65:0:-:0;5374:13:7;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:7;;;;;;;:::i;1605:149:9:-;5374:13:7;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:7;;;;;;;:::i;:::-;1708:39:9::1;1732:5;1739:7;1708:23;:39::i;7917:233:0:-:0;8000:22;8008:4;8014:7;8000;:22::i;:::-;7995:149;;8038:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8038:29:0;;;;;;;;;:36;;-1:-1:-1;;8038:36:0;8070:4;8038:36;;;8120:12;929:10:16;;850:96;8120:12:0;-1:-1:-1;;;;;8093:40:0;8111:7;-1:-1:-1;;;;;8093:40:0;8105:4;8093:40;;;;;;;;;;7917:233;;:::o;13778:133:9:-;7657:4;7266:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7266:16:9;13851:53;;;;-1:-1:-1;;;13851:53:9;;19604:2:28;13851:53:9;;;19586:21:28;19643:2;19623:18;;;19616:30;-1:-1:-1;;;19662:18:28;;;19655:54;19726:18;;13851:53:9;19402:348:28;2651:219:9;2723:7;7266:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7266:16:9;;2785:56;;;;-1:-1:-1;;;2785:56:9;;19604:2:28;2785:56:9;;;19586:21:28;19643:2;19623:18;;;19616:30;-1:-1:-1;;;19662:18:28;;;19655:54;19726:18;;2785:56:9;19402:348:28;13099:182:9;13173:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;13173:29:9;-1:-1:-1;;;;;13173:29:9;;;;;;;;:24;;13226:34;13173:24;13226:25;:34::i;:::-;-1:-1:-1;;;;;13217:57:9;;;;;;;;;;;13099:182;;:::o;14906:120:24:-;14975:7;15001:18;15008:3;15001:6;:18::i;12664:240::-;12801:7;12851:43;12855:3;12875;12881:12;12851:3;:43::i;:::-;12843:52;12664:240;-1:-1:-1;;;;12664:240:24:o;5446:149:9:-;5549:39;5566:4;5572:2;5576:7;5549:39;;;;;;;;;;;;:16;:39::i;3768:103:0:-;3834:30;3845:4;929:10:16;3834::0;:30::i;8321:234::-;8404:22;8412:4;8418:7;8404;:22::i;:::-;8400:149;;;8474:5;8442:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8442:29:0;;;;;;;;;;:37;;-1:-1:-1;;8442:37:0;;;8498:40;929:10:16;;8442:12:0;;8498:40;;8474:5;8498:40;8321:234;;:::o;6624:84:26:-;1334:13:2;:11;:13::i;2820:944:5:-;971:66;3236:59;;;3232:526;;;3311:37;3330:17;3311:18;:37::i;3232:526::-;3412:17;-1:-1:-1;;;;;3383:61:5;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3383:63:5;;;;;;;;-1:-1:-1;;3383:63:5;;;;;;;;;;;;:::i;:::-;;;3379:302;;3610:56;;-1:-1:-1;;;3610:56:5;;20146:2:28;3610:56:5;;;20128:21:28;20185:2;20165:18;;;20158:30;20224:34;20204:18;;;20197:62;-1:-1:-1;;;20275:18:28;;;20268:44;20329:19;;3610:56:5;19944:410:28;3379:302:5;-1:-1:-1;;;;;;;;;;;3496:28:5;;3488:82;;;;-1:-1:-1;;;3488:82:5;;20561:2:28;3488:82:5;;;20543:21:28;20600:2;20580:18;;;20573:30;20639:34;20619:18;;;20612:62;-1:-1:-1;;;20690:18:28;;;20683:39;20739:19;;3488:82:5;20359:405:28;3488:82:5;3447:138;3694:53;3712:17;3731:4;3737:9;3694:17;:53::i;14657:166:24:-;14741:4;14764:52;14773:3;-1:-1:-1;;;;;14793:21:24;;14764:8;:52::i;16125:168::-;16204:7;16238:47;16242:3;-1:-1:-1;;;;;16262:21:24;;16238:3;:47::i;14421:157::-;14498:4;14521:50;14528:3;-1:-1:-1;;;;;14548:21:24;;14521:6;:50::i;10548:139::-;10625:4;10648:32;10655:3;10675;10648:6;:32::i;1599:130:2:-;1513:6;;-1:-1:-1;;;;;1513:6:2;929:10:16;1662:23:2;1654:68;;;;-1:-1:-1;;;1654:68:2;;20971:2:28;1654:68:2;;;20953:21:28;;;20990:18;;;20983:30;21049:34;21029:18;;;21022:62;21101:18;;1654:68:2;20769:356:28;15736:238:24;15818:4;;;;15875:50;15882:3;-1:-1:-1;;;;;15902:21:24;;15875:6;:50::i;:::-;15843:82;;-1:-1:-1;15843:82:24;-1:-1:-1;;;15736:238:24;;;;;;:::o;2666:187:2:-;2758:6;;;-1:-1:-1;;;;;2774:17:2;;;-1:-1:-1;;;;;;2774:17:2;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;16573:240:24:-;16710:7;16744:61;16748:3;-1:-1:-1;;;;;16768:21:24;;16792:12;16744:3;:61::i;13417:277:9:-;13537:8;-1:-1:-1;;;;;13528:17:9;:5;-1:-1:-1;;;;;13528:17:9;;13520:55;;;;-1:-1:-1;;;13520:55:9;;21332:2:28;13520:55:9;;;21314:21:28;21371:2;21351:18;;;21344:30;21410:27;21390:18;;;21383:55;21455:18;;13520:55:9;21130:349:28;13520:55:9;-1:-1:-1;;;;;13585:25:9;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13585:46:9;;;;;;;;;;13646:41;;540::28;;;13646::9;;513:18:28;13646:41:9;;;;;;;13417:277;;;:::o;5661:276::-;5791:41;929:10:16;5824:7:9;5791:18;:41::i;:::-;5783:99;;;;-1:-1:-1;;;5783:99:9;;21686:2:28;5783:99:9;;;21668:21:28;21725:2;21705:18;;;21698:30;21764:34;21744:18;;;21737:62;-1:-1:-1;;;21815:18:28;;;21808:43;21868:19;;5783:99:9;21484:409:28;5783:99:9;5892:38;5906:4;5912:2;5916:7;5925:4;5892:13;:38::i;14080:182:24:-;14169:4;14192:63;14196:3;-1:-1:-1;;;;;14216:21:24;;14248:5;14192:3;:63::i;10207:182::-;10296:4;10319:63;10323:3;10343;-1:-1:-1;;;;;10357:23:24;;10319:3;:63::i;1987:344:9:-;2111:4;-1:-1:-1;;;;;;2146:51:9;;-1:-1:-1;;;2146:51:9;;:126;;-1:-1:-1;;;;;;;2213:59:9;;-1:-1:-1;;;2213:59:9;2146:126;:178;;;-1:-1:-1;;;;;;;;;;1168:51:20;;;2288:36:9;1060:166:20;1104:111:2;5374:13:7;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:7;;;;;;;:::i;:::-;1176:32:2::1;929:10:16::0;1176:18:2::1;:32::i;1760:160:9:-:0;5374:13:7;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:7;;;;;;;:::i;:::-;1873:5:9::1;:13;1881:5:::0;1873;:13:::1;:::i;:::-;-1:-1:-1::0;1896:7:9::1;:17;1906:7:::0;1896;:17:::1;:::i;3413:123:24:-:0;3485:7;3511:18;:3;:16;:18::i;5197:285::-;5337:7;5372:16;;;:11;;;:16;;;;;;5406:10;;;;:32;;;5420:18;5429:3;5434;5420:8;:18::i;:::-;5440:12;5398:55;;;;;-1:-1:-1;;;5398:55:24;;;;;;;;:::i;:::-;-1:-1:-1;5470:5:24;5197:285;-1:-1:-1;;;;5197:285:24:o;4152:501:0:-;4240:22;4248:4;4254:7;4240;:22::i;:::-;4235:412;;4423:39;4454:7;4423:30;:39::i;:::-;4533:49;4572:4;4579:2;4533:30;:49::i;:::-;4330:274;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4330:274:0;;;;;;;;;;-1:-1:-1;;;4278:358:0;;;;;;;:::i;1699:281:5:-;-1:-1:-1;;;;;1713:19:15;;;1772:106:5;;;;-1:-1:-1;;;1772:106:5;;22917:2:28;1772:106:5;;;22899:21:28;22956:2;22936:18;;;22929:30;22995:34;22975:18;;;22968:62;-1:-1:-1;;;23046:18:28;;;23039:43;23099:19;;1772:106:5;22715:409:28;1772:106:5;-1:-1:-1;;;;;;;;;;;1888:85:5;;-1:-1:-1;;;;;;1888:85:5;-1:-1:-1;;;;;1888:85:5;;;;;;;;;;1699:281::o;2372:276::-;2480:29;2491:17;2480:10;:29::i;:::-;2537:1;2523:4;:11;:15;:28;;;;2542:9;2523:28;2519:123;;;2567:64;2607:17;2626:4;2567:39;:64::i;3183:140:24:-;3270:4;3293:23;:3;3312;3293:18;:23::i;4670:247::-;4752:7;4787:16;;;:11;;;:16;;;;;;4821:10;;;;:32;;;4835:18;4844:3;4849;4835:8;:18::i;:::-;4813:75;;;;-1:-1:-1;;;4813:75:24;;23331:2:28;4813:75:24;;;23313:21:28;23370:2;23350:18;;;23343:30;23409:32;23389:18;;;23382:60;23459:18;;4813:75:24;23129:354:28;2940:164:24;3020:4;3043:16;;;:11;;;:16;;;;;3036:23;;;3076:21;3043:3;3055;3076:16;:21::i;4221:298::-;4306:4;4347:16;;;:11;;;:16;;;;;;4306:4;;4347:16;4373:140;;4420:18;4429:3;4434;4420:8;:18::i;:::-;4412:39;-1:-1:-1;4448:1:24;;-1:-1:-1;4412:39:24;;-1:-1:-1;4412:39:24;4373:140;4490:4;;-1:-1:-1;4496:5:24;-1:-1:-1;4482:20:24;;7876:272:9;7969:4;7985:13;8001:34;8027:7;8001:25;:34::i;:::-;7985:50;;8064:5;-1:-1:-1;;;;;8053:16:9;:7;-1:-1:-1;;;;;8053:16:9;;:52;;;-1:-1:-1;;;;;;4980:25:9;;;4957:4;4980:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;8073:32;8053:87;;;;8133:7;-1:-1:-1;;;;;8109:31:9;:20;8121:7;8109:11;:20::i;:::-;-1:-1:-1;;;;;8109:31:9;;8045:96;7876:272;-1:-1:-1;;;;7876:272:9:o;6798:267::-;6910:28;6920:4;6926:2;6930:7;6910:9;:28::i;:::-;6956:47;6979:4;6985:2;6989:7;6998:4;6956:22;:47::i;:::-;6948:110;;;;-1:-1:-1;;;6948:110:9;;;;;;;:::i;2598:174:24:-;2690:4;2706:16;;;:11;;;:16;;;;;:24;;;2747:18;2706:3;2718;2747:13;:18::i;6650:115:25:-;6713:7;6739:19;6747:3;4556:18;;4474:107;2473:149:19;2531:13;2563:52;-1:-1:-1;;;;;2575:22:19;;376:2;1884:437;1959:13;1984:19;2016:10;2020:6;2016:1;:10;:::i;:::-;:14;;2029:1;2016:14;:::i;:::-;2006:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2006:25:19;;1984:47;;-1:-1:-1;;;2041:6:19;2048:1;2041:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2041:15:19;;;;;;;;;-1:-1:-1;;;2066:6:19;2073:1;2066:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2066:15:19;;;;;;;;-1:-1:-1;2096:9:19;2108:10;2112:6;2108:1;:10;:::i;:::-;:14;;2121:1;2108:14;:::i;:::-;2096:26;;2091:128;2128:1;2124;:5;2091:128;;;-1:-1:-1;;;2171:5:19;2179:3;2171:11;2162:21;;;;;;;:::i;:::-;;;;2150:6;2157:1;2150:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2150:33:19;;;;;;;;-1:-1:-1;2207:1:19;2197:11;;;;;2131:3;;;:::i;:::-;;;2091:128;;;-1:-1:-1;2236:10:19;;2228:55;;;;-1:-1:-1;;;2228:55:19;;24817:2:28;2228:55:19;;;24799:21:28;;;24836:18;;;24829:30;24895:34;24875:18;;;24868:62;24947:18;;2228:55:19;24615:356:28;2086:152:5;2152:37;2171:17;2152:18;:37::i;:::-;2204:27;;-1:-1:-1;;;;;2204:27:5;;;;;;;;2086:152;:::o;6685:198:15:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;:20;:77::i;6431:138:25:-;6511:4;4362:19;;;:12;;;:19;;;;;;:24;;6534:28;4266:127;6221:129;6294:4;6317:26;6325:3;6337:5;6317:7;:26::i;11762:1225:9:-;11897:4;-1:-1:-1;;;;;11859:42:9;:34;11885:7;11859:25;:34::i;:::-;-1:-1:-1;;;;;11859:42:9;;11851:92;;;;-1:-1:-1;;;11851:92:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;11961:16:9;;11953:65;;;;-1:-1:-1;;;11953:65:9;;25584:2:28;11953:65:9;;;25566:21:28;25623:2;25603:18;;;25596:30;25662:34;25642:18;;;25635:62;-1:-1:-1;;;25713:18:28;;;25706:34;25757:19;;11953:65:9;25382:400:28;11953:65:9;12209:4;-1:-1:-1;;;;;12171:42:9;:34;12197:7;12171:25;:34::i;:::-;-1:-1:-1;;;;;12171:42:9;;12163:92;;;;-1:-1:-1;;;12163:92:9;;;;;;;:::i;:::-;12324:24;;;;:15;:24;;;;;;;;12317:31;;-1:-1:-1;;;;;;12317:31:9;;;;;;-1:-1:-1;;;;;12792:15:9;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12792:20:9;;;12826:13;;;;;;;;;:18;;12317:31;12826:18;;;12864:16;;;:7;:16;;;;;;:21;;;;;;;;;;12901:27;;12340:7;;12901:27;;;3999:347;3929:417;;:::o;14463:853::-;14612:4;-1:-1:-1;;;;;14632:13:9;;1713:19:15;:23;14628:682:9;;14667:82;;-1:-1:-1;;;14667:82:9;;-1:-1:-1;;;;;14667:47:9;;;;;:82;;929:10:16;;14729:4:9;;14735:7;;14744:4;;14667:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14667:82:9;;;;;;;;-1:-1:-1;;14667:82:9;;;;;;;;;;;;:::i;:::-;;;14663:595;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14927:6;:13;14944:1;14927:18;14923:321;;14969:60;;-1:-1:-1;;;14969:60:9;;;;;;;:::i;14923:321::-;15196:6;15190:13;15181:6;15177:2;15173:15;15166:38;14663:595;-1:-1:-1;;;;;;14799:62:9;-1:-1:-1;;;14799:62:9;;-1:-1:-1;14792:69:9;;14628:682;-1:-1:-1;15295:4:9;14463:853;;;;;;:::o;5930:123:25:-;6000:4;6023:23;6028:3;6040:5;6023:4;:23::i;7069:325:15:-;7210:12;7235;7249:23;7276:6;-1:-1:-1;;;;;7276:19:15;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;:::-;7311:76;7069:325;-1:-1:-1;;;;;;7069:325:15:o;2797:1388:25:-;2863:4;3000:19;;;:12;;;:19;;;;;;3034:15;;3030:1149;;3403:21;3427:14;3440:1;3427:10;:14;:::i;:::-;3475:18;;3403:38;;-1:-1:-1;3455:17:25;;3475:22;;3496:1;;3475:22;:::i;:::-;3455:42;;3529:13;3516:9;:26;3512:398;;3562:17;3582:3;:11;;3594:9;3582:22;;;;;;;;:::i;:::-;;;;;;;;;3562:42;;3733:9;3704:3;:11;;3716:13;3704:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3816:23;;;:12;;;:23;;;;;:36;;;3512:398;3988:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4080:3;:12;;:19;4093:5;4080:19;;;;;;;;;;;4073:26;;;4121:4;4114:11;;;;;;;3030:1149;4163:5;4156:12;;;;;2225:404;2288:4;4362:19;;;:12;;;:19;;;;;;2304:319;;-1:-1:-1;2346:23:25;;;;;;;;:11;:23;;;;;;;;;;;;;2526:18;;2504:19;;;:12;;;:19;;;;;;:40;;;;2558:11;;2304:319;-1:-1:-1;2607:5:25;2600:12;;7682:628:15;7862:12;7890:7;7886:418;;;7917:10;:17;7938:1;7917:22;7913:286;;-1:-1:-1;;;;;1713:19:15;;;8124:60;;;;-1:-1:-1;;;8124:60:15;;27294:2:28;8124:60:15;;;27276:21:28;27333:2;27313:18;;;27306:30;27372:31;27352:18;;;27345:59;27421:18;;8124:60:15;27092:353:28;8124:60:15;-1:-1:-1;8219:10:15;8212:17;;7886:418;8260:33;8268:10;8280:12;8991:17;;:21;8987:379;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;-1:-1:-1;;;9335:20:15;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:28:-;-1:-1:-1;;;;;;88:32:28;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:28;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:28;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:28:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:127::-;1409:10;1404:3;1400:20;1397:1;1390:31;1440:4;1437:1;1430:15;1464:4;1461:1;1454:15;1480:248;1547:2;1541:9;1589:4;1577:17;;1624:18;1609:34;;1645:22;;;1606:62;1603:88;;;1671:18;;:::i;:::-;1707:2;1700:22;1480:248;:::o;1733:719::-;1776:5;1829:3;1822:4;1814:6;1810:17;1806:27;1796:55;;1847:1;1844;1837:12;1796:55;1883:6;1870:20;1909:18;1946:2;1942;1939:10;1936:36;;;1952:18;;:::i;:::-;2027:2;2021:9;1995:2;2081:13;;-1:-1:-1;;2077:22:28;;;2101:2;2073:31;2069:40;2057:53;;;2125:18;;;2145:22;;;2122:46;2119:72;;;2171:18;;:::i;:::-;2211:10;2207:2;2200:22;2246:2;2238:6;2231:18;2292:3;2285:4;2280:2;2272:6;2268:15;2264:26;2261:35;2258:55;;;2309:1;2306;2299:12;2258:55;2373:2;2366:4;2358:6;2354:17;2347:4;2339:6;2335:17;2322:54;2420:1;2413:4;2408:2;2400:6;2396:15;2392:26;2385:37;2440:6;2431:15;;;;;;1733:719;;;;:::o;2457:173::-;2525:20;;-1:-1:-1;;;;;2574:31:28;;2564:42;;2554:70;;2620:1;2617;2610:12;2554:70;2457:173;;;:::o;2635:617::-;2732:6;2740;2748;2801:2;2789:9;2780:7;2776:23;2772:32;2769:52;;;2817:1;2814;2807:12;2769:52;2857:9;2844:23;2886:18;2927:2;2919:6;2916:14;2913:34;;;2943:1;2940;2933:12;2913:34;2966:50;3008:7;2999:6;2988:9;2984:22;2966:50;:::i;:::-;2956:60;;3069:2;3058:9;3054:18;3041:32;3025:48;;3098:2;3088:8;3085:16;3082:36;;;3114:1;3111;3104:12;3082:36;;3137:52;3181:7;3170:8;3159:9;3155:24;3137:52;:::i;:::-;3127:62;;;3208:38;3242:2;3231:9;3227:18;3208:38;:::i;:::-;3198:48;;2635:617;;;;;:::o;3257:180::-;3316:6;3369:2;3357:9;3348:7;3344:23;3340:32;3337:52;;;3385:1;3382;3375:12;3337:52;-1:-1:-1;3408:23:28;;3257:180;-1:-1:-1;3257:180:28:o;3650:254::-;3718:6;3726;3779:2;3767:9;3758:7;3754:23;3750:32;3747:52;;;3795:1;3792;3785:12;3747:52;3818:29;3837:9;3818:29;:::i;:::-;3808:39;3894:2;3879:18;;;;3866:32;;-1:-1:-1;;;3650:254:28:o;4091:927::-;4278:2;4267:9;4260:21;4323:6;4317:13;4312:2;4301:9;4297:18;4290:41;4241:4;4378:2;4370:6;4366:15;4360:22;4418:1;4414;4409:3;4405:11;4401:19;4474:2;4460:12;4456:21;4451:2;4440:9;4436:18;4429:49;4542:10;4536:2;4528:6;4524:15;4518:22;4514:39;4509:2;4498:9;4494:18;4487:67;4603:2;4595:6;4591:15;4585:22;4563:44;;4644:4;4638:3;4627:9;4623:19;4616:33;4672:54;4721:3;4710:9;4706:19;4690:14;4672:54;:::i;:::-;4658:68;;4775:3;4767:6;4763:16;4757:23;4849:2;4845:7;4833:9;4825:6;4821:22;4817:36;4811:3;4800:9;4796:19;4789:65;4877:41;4911:6;4895:14;4877:41;:::i;:::-;4863:55;;;4985:2;4978:3;4970:6;4966:16;4960:23;4956:32;4949:4;4938:9;4934:20;4927:62;;5006:6;4998:14;;;4091:927;;;;:::o;5023:328::-;5100:6;5108;5116;5169:2;5157:9;5148:7;5144:23;5140:32;5137:52;;;5185:1;5182;5175:12;5137:52;5208:29;5227:9;5208:29;:::i;:::-;5198:39;;5256:38;5290:2;5279:9;5275:18;5256:38;:::i;:::-;5246:48;;5341:2;5330:9;5326:18;5313:32;5303:42;;5023:328;;;;;:::o;5723:186::-;5782:6;5835:2;5823:9;5814:7;5810:23;5806:32;5803:52;;;5851:1;5848;5841:12;5803:52;5874:29;5893:9;5874:29;:::i;5914:254::-;5982:6;5990;6043:2;6031:9;6022:7;6018:23;6014:32;6011:52;;;6059:1;6056;6049:12;6011:52;6095:9;6082:23;6072:33;;6124:38;6158:2;6147:9;6143:18;6124:38;:::i;:::-;6114:48;;5914:254;;;;;:::o;6173:395::-;6250:6;6258;6311:2;6299:9;6290:7;6286:23;6282:32;6279:52;;;6327:1;6324;6317:12;6279:52;6350:29;6369:9;6350:29;:::i;:::-;6340:39;;6430:2;6419:9;6415:18;6402:32;6457:18;6449:6;6446:30;6443:50;;;6489:1;6486;6479:12;6443:50;6512;6554:7;6545:6;6534:9;6530:22;6512:50;:::i;:::-;6502:60;;;6173:395;;;;;:::o;6573:118::-;6659:5;6652:13;6645:21;6638:5;6635:32;6625:60;;6681:1;6678;6671:12;6696:315;6761:6;6769;6822:2;6810:9;6801:7;6797:23;6793:32;6790:52;;;6838:1;6835;6828:12;6790:52;6861:29;6880:9;6861:29;:::i;:::-;6851:39;;6940:2;6929:9;6925:18;6912:32;6953:28;6975:5;6953:28;:::i;:::-;7000:5;6990:15;;;6696:315;;;;;:::o;7016:538::-;7111:6;7119;7127;7135;7188:3;7176:9;7167:7;7163:23;7159:33;7156:53;;;7205:1;7202;7195:12;7156:53;7228:29;7247:9;7228:29;:::i;:::-;7218:39;;7276:38;7310:2;7299:9;7295:18;7276:38;:::i;:::-;7266:48;;7361:2;7350:9;7346:18;7333:32;7323:42;;7416:2;7405:9;7401:18;7388:32;7443:18;7435:6;7432:30;7429:50;;;7475:1;7472;7465:12;7429:50;7498;7540:7;7531:6;7520:9;7516:22;7498:50;:::i;:::-;7488:60;;;7016:538;;;;;;;:::o;7559:260::-;7627:6;7635;7688:2;7676:9;7667:7;7663:23;7659:32;7656:52;;;7704:1;7701;7694:12;7656:52;7727:29;7746:9;7727:29;:::i;:::-;7717:39;;7775:38;7809:2;7798:9;7794:18;7775:38;:::i;7824:163::-;7891:20;;7951:10;7940:22;;7930:33;;7920:61;;7977:1;7974;7967:12;7992:1234;8099:6;8107;8160:2;8148:9;8139:7;8135:23;8131:32;8128:52;;;8176:1;8173;8166:12;8128:52;8216:9;8203:23;8245:18;8286:2;8278:6;8275:14;8272:34;;;8302:1;8299;8292:12;8272:34;8325:22;;;;8381:4;8363:16;;;8359:27;8356:47;;;8399:1;8396;8389:12;8356:47;8425:17;;:::i;:::-;8478:2;8465:16;8458:5;8451:31;8514;8541:2;8537;8533:11;8514:31;:::i;:::-;8509:2;8502:5;8498:14;8491:55;8578:30;8604:2;8600;8596:11;8578:30;:::i;:::-;8573:2;8566:5;8562:14;8555:54;8655:2;8651;8647:11;8634:25;8684:2;8674:8;8671:16;8668:36;;;8700:1;8697;8690:12;8668:36;8736:45;8773:7;8762:8;8758:2;8754:17;8736:45;:::i;:::-;8731:2;8724:5;8720:14;8713:69;;8828:3;8824:2;8820:12;8807:26;8858:2;8848:8;8845:16;8842:36;;;8874:1;8871;8864:12;8842:36;8911:45;8948:7;8937:8;8933:2;8929:17;8911:45;:::i;:::-;8905:3;8898:5;8894:15;8887:70;;8990:32;9017:3;9013:2;9009:12;8990:32;:::i;:::-;8984:3;8973:15;;8966:57;8977:5;-1:-1:-1;9100:2:28;9085:18;;9072:32;;-1:-1:-1;9116:16:28;;;9113:36;;;9145:1;9142;9135:12;9113:36;;9168:52;9212:7;9201:8;9190:9;9186:24;9168:52;:::i;9231:380::-;9310:1;9306:12;;;;9353;;;9374:61;;9428:4;9420:6;9416:17;9406:27;;9374:61;9481:2;9473:6;9470:14;9450:18;9447:38;9444:161;;9527:10;9522:3;9518:20;9515:1;9508:31;9562:4;9559:1;9552:15;9590:4;9587:1;9580:15;9444:161;;9231:380;;;:::o;11478:408::-;11680:2;11662:21;;;11719:2;11699:18;;;11692:30;11758:34;11753:2;11738:18;;11731:62;-1:-1:-1;;;11824:2:28;11809:18;;11802:42;11876:3;11861:19;;11478:408::o;11891:::-;12093:2;12075:21;;;12132:2;12112:18;;;12105:30;12171:34;12166:2;12151:18;;12144:62;-1:-1:-1;;;12237:2:28;12222:18;;12215:42;12289:3;12274:19;;11891:408::o;12929:245::-;12996:6;13049:2;13037:9;13028:7;13024:23;13020:32;13017:52;;;13065:1;13062;13055:12;13017:52;13097:9;13091:16;13116:28;13138:5;13116:28;:::i;13179:398::-;13381:2;13363:21;;;13420:2;13400:18;;;13393:30;13459:34;13454:2;13439:18;;13432:62;-1:-1:-1;;;13525:2:28;13510:18;;13503:32;13567:3;13552:19;;13179:398::o;15240:544::-;15341:2;15336:3;15333:11;15330:448;;;15377:1;15402:5;15398:2;15391:17;15447:4;15443:2;15433:19;15517:2;15505:10;15501:19;15498:1;15494:27;15488:4;15484:38;15553:4;15541:10;15538:20;15535:47;;;-1:-1:-1;15576:4:28;15535:47;15631:2;15626:3;15622:12;15619:1;15615:20;15609:4;15605:31;15595:41;;15686:82;15704:2;15697:5;15694:13;15686:82;;;15749:17;;;15730:1;15719:13;15686:82;;;15690:3;;;15240:544;;;:::o;15960:1348::-;16084:3;16078:10;16111:18;16103:6;16100:30;16097:56;;;16133:18;;:::i;:::-;16162:96;16251:6;16211:38;16243:4;16237:11;16211:38;:::i;:::-;16205:4;16162:96;:::i;:::-;16313:4;;16377:2;16366:14;;16394:1;16389:662;;;;17095:1;17112:6;17109:89;;;-1:-1:-1;17164:19:28;;;17158:26;17109:89;-1:-1:-1;;15917:1:28;15913:11;;;15909:24;15905:29;15895:40;15941:1;15937:11;;;15892:57;17211:81;;16359:943;;16389:662;15187:1;15180:14;;;15224:4;15211:18;;-1:-1:-1;;16425:20:28;;;16542:236;16556:7;16553:1;16550:14;16542:236;;;16645:19;;;16639:26;16624:42;;16737:27;;;;16705:1;16693:14;;;;16572:19;;16542:236;;;16546:3;16806:6;16797:7;16794:19;16791:201;;;16867:19;;;16861:26;-1:-1:-1;;16950:1:28;16946:14;;;16962:3;16942:24;16938:37;16934:42;16919:58;16904:74;;16791:201;-1:-1:-1;;;;;17038:1:28;17022:14;;;17018:22;17005:36;;-1:-1:-1;15960:1348:28:o;18668:317::-;-1:-1:-1;;;;;18845:32:28;;18827:51;;18914:2;18909;18894:18;;18887:30;;;-1:-1:-1;;18934:45:28;;18960:18;;18952:6;18934:45;:::i;18990:407::-;19192:2;19174:21;;;19231:2;19211:18;;;19204:30;19270:34;19265:2;19250:18;;19243:62;-1:-1:-1;;;19336:2:28;19321:18;;19314:41;19387:3;19372:19;;18990:407::o;19755:184::-;19825:6;19878:2;19866:9;19857:7;19853:23;19849:32;19846:52;;;19894:1;19891;19884:12;19846:52;-1:-1:-1;19917:16:28;;19755:184;-1:-1:-1;19755:184:28:o;21898:812::-;22309:25;22304:3;22297:38;22279:3;22364:6;22358:13;22380:75;22448:6;22443:2;22438:3;22434:12;22427:4;22419:6;22415:17;22380:75;:::i;:::-;-1:-1:-1;;;22514:2:28;22474:16;;;22506:11;;;22499:40;22564:13;;22586:76;22564:13;22648:2;22640:11;;22633:4;22621:17;;22586:76;:::i;:::-;22682:17;22701:2;22678:26;;21898:812;-1:-1:-1;;;;21898:812:28:o;23488:414::-;23690:2;23672:21;;;23729:2;23709:18;;;23702:30;23768:34;23763:2;23748:18;;23741:62;-1:-1:-1;;;23834:2:28;23819:18;;23812:48;23892:3;23877:19;;23488:414::o;23907:127::-;23968:10;23963:3;23959:20;23956:1;23949:31;23999:4;23996:1;23989:15;24023:4;24020:1;24013:15;24039:168;24112:9;;;24143;;24160:15;;;24154:22;;24140:37;24130:71;;24181:18;;:::i;24212:125::-;24277:9;;;24298:10;;;24295:36;;;24311:18;;:::i;24342:127::-;24403:10;24398:3;24394:20;24391:1;24384:31;24434:4;24431:1;24424:15;24458:4;24455:1;24448:15;24474:136;24513:3;24541:5;24531:39;;24550:18;;:::i;:::-;-1:-1:-1;;;24586:18:28;;24474:136::o;24976:401::-;25178:2;25160:21;;;25217:2;25197:18;;;25190:30;25256:34;25251:2;25236:18;;25229:62;-1:-1:-1;;;25322:2:28;25307:18;;25300:35;25367:3;25352:19;;24976:401::o;25787:489::-;-1:-1:-1;;;;;26056:15:28;;;26038:34;;26108:15;;26103:2;26088:18;;26081:43;26155:2;26140:18;;26133:34;;;26203:3;26198:2;26183:18;;26176:31;;;25981:4;;26224:46;;26250:19;;26242:6;26224:46;:::i;26281:249::-;26350:6;26403:2;26391:9;26382:7;26378:23;26374:32;26371:52;;;26419:1;26416;26409:12;26371:52;26451:9;26445:16;26470:30;26494:5;26470:30;:::i;26535:287::-;26664:3;26702:6;26696:13;26718:66;26777:6;26772:3;26765:4;26757:6;26753:17;26718:66;:::i;:::-;26800:16;;;;;26535:287;-1:-1:-1;;26535:287:28:o;26827:128::-;26894:9;;;26915:11;;;26912:37;;;26929:18;;:::i;26960:127::-;27021:10;27016:3;27012:20;27009:1;27002:31;27052:4;27049:1;27042:15;27076:4;27073:1;27066:15"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn()":"44df8e70","getApproved(uint256)":"081812fc","getRoleAdmin(bytes32)":"248a9ca3","getUserProfile(uint256)":"1f52b76c","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(string,string,address)":"077f224a","isAdmin(address)":"24d7806c","isApprovedForAll(address,address)":"e985e9c5","mint((bytes32,address,uint32,bytes,string,address),string)":"faf4a931","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","proxiableUUID()":"52d1902d","renounceOwnership()":"715018a6","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setDataStorageProvider(address)":"5dc4fe7e","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenIdOf(address)":"773c02d4","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"StorageZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenTransferProhibited\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getUserProfile\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"checksum\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"issuedBy\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"issuedAt\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"storageAddress\",\"type\":\"address\"}],\"internalType\":\"struct Profile.UserProfile\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"checksum\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"issuedBy\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"issuedAt\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"storageAddress\",\"type\":\"address\"}],\"internalType\":\"struct Profile.UserProfile\",\"name\":\"profile\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setDataStorageProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"tokenIdOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"the constructor is not used since the contract is upgradeable except to disable initializers in the implementations that are deployed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Profile.sol\":\"Profile\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709\",\"dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x09fa60c34ff9b067e5ad3af7719d490a12e0ca39132df6f870746eb0d32308ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acebbc807a56154030015434db278d821bca9a5316fbc3626b3f51f14403819a\",\"dweb:/ipfs/QmPacbrj1Hqzrw6b657EXuyMAazLFh1VAo9c66ZJNmfhR3\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol\":{\"keccak256\":\"0x2c98457c4171d86094adf9a4fd8cd2402b7e3e309e961f07910a60a576dd100f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04d2ed5d0fc239e80a6b3f3044b423d4b5b1d1d5d9a08ba3454ea98b556760f9\",\"dweb:/ipfs/QmQQNic6ZcSqH6HZXLvm4woYbZ59er2szVQMdouwJPouhv\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721EnumerableUpgradeable.sol\":{\"keccak256\":\"0xf1870306db8391db9cf14b41be0da76857a88df0e5c623d2b2338fb30a3bd5ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://466149e3f8e96b81781b18dbb7b00a20d7172ddee599ef9d51b64c7e78ddfb1d\",\"dweb:/ipfs/QmTvLPy7ZF2Vm7JLSrknWm1Z2fyVaNhoXY2RFcRkmSKFAe\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableMapUpgradeable.sol\":{\"keccak256\":\"0xdfa041144ad3a40abcdc6f97fd9e9b467448206722b0c9b9bd13f343891ae447\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f74d375967e813aacc9ab924ea9dd07a9dbf149b5c93a2cf968f89269fd942ca\",\"dweb:/ipfs/QmeNAiboecuK4CGjFkr1gqBmk3UbTdr1w41R31AaVtMJXf\"]},\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://876afb75e0d5615b07f70a0bc69ae7f098df8ef058251b5934b9d05c9c7e0d1f\",\"dweb:/ipfs/Qmay4sdoBJQtP2cC1EDyQ8GzNPJZzo3v5soRRy8rDNLfBJ\"]},\"contracts/Profile.sol\":{\"keccak256\":\"0xaf8be7bb586dfbf9fbe51b659b03a896ec41cb80836aee1cce665c0eee6f0bec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3691d0095b35ffd40381ebdfc8abfee8cd39a086adbc3df370b950b2e2c919fa\",\"dweb:/ipfs/Qmc7oq96dytqwi8JRxMwg8LjxFReDZ9sVSAZ7c26F9DZFP\"]},\"contracts/interfaces/IDataStorageCartridge.sol\":{\"keccak256\":\"0x168e00cfc9ed7c26265b2d1fe8b5f45418f7e6732b1e130cdc1694ea8f8181f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2b0a6a891519b18ce1870da9f2f8f59d5ea4c58f2d9a138390eb788b5929ea8\",\"dweb:/ipfs/QmWMvE4vm6sJ43QzUmLhkGttPN69iGFYsBYqGNgu3AgkiK\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":912,"contract":"contracts/Profile.sol:Profile","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":915,"contract":"contracts/Profile.sol:Profile","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3099,"contract":"contracts/Profile.sol:Profile","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":3556,"contract":"contracts/Profile.sol:Profile","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":1239,"contract":"contracts/Profile.sol:Profile","label":"_name","offset":0,"slot":"101","type":"t_string_storage"},{"astId":1241,"contract":"contracts/Profile.sol:Profile","label":"_symbol","offset":0,"slot":"102","type":"t_string_storage"},{"astId":1245,"contract":"contracts/Profile.sol:Profile","label":"_owners","offset":0,"slot":"103","type":"t_mapping(t_uint256,t_address)"},{"astId":1249,"contract":"contracts/Profile.sol:Profile","label":"_balances","offset":0,"slot":"104","type":"t_mapping(t_address,t_uint256)"},{"astId":1253,"contract":"contracts/Profile.sol:Profile","label":"_tokenApprovals","offset":0,"slot":"105","type":"t_mapping(t_uint256,t_address)"},{"astId":1259,"contract":"contracts/Profile.sol:Profile","label":"_operatorApprovals","offset":0,"slot":"106","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":2161,"contract":"contracts/Profile.sol:Profile","label":"__gap","offset":0,"slot":"107","type":"t_array(t_uint256)44_storage"},{"astId":419,"contract":"contracts/Profile.sol:Profile","label":"_owner","offset":0,"slot":"151","type":"t_address"},{"astId":539,"contract":"contracts/Profile.sol:Profile","label":"__gap","offset":0,"slot":"152","type":"t_array(t_uint256)49_storage"},{"astId":39,"contract":"contracts/Profile.sol:Profile","label":"_roles","offset":0,"slot":"201","type":"t_mapping(t_bytes32,t_struct(RoleData)34_storage)"},{"astId":334,"contract":"contracts/Profile.sol:Profile","label":"__gap","offset":0,"slot":"202","type":"t_array(t_uint256)49_storage"},{"astId":894,"contract":"contracts/Profile.sol:Profile","label":"__gap","offset":0,"slot":"251","type":"t_array(t_uint256)50_storage"},{"astId":1209,"contract":"contracts/Profile.sol:Profile","label":"__gap","offset":0,"slot":"301","type":"t_array(t_uint256)50_storage"},{"astId":6453,"contract":"contracts/Profile.sol:Profile","label":"_ownerMap","offset":0,"slot":"351","type":"t_struct(UintToAddressMap)5039_storage"},{"astId":6456,"contract":"contracts/Profile.sol:Profile","label":"_tokenMap","offset":0,"slot":"354","type":"t_struct(AddressToUintMap)5306_storage"},{"astId":6459,"contract":"contracts/Profile.sol:Profile","label":"_tokenId","offset":0,"slot":"357","type":"t_struct(Counter)3106_storage"},{"astId":6464,"contract":"contracts/Profile.sol:Profile","label":"_dataStorageProviders","offset":0,"slot":"358","type":"t_mapping(t_address,t_contract(IDataStorageCartridge)7065)"},{"astId":6482,"contract":"contracts/Profile.sol:Profile","label":"_profiles","offset":0,"slot":"359","type":"t_mapping(t_address,t_struct(UserProfile)6477_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_array(t_uint256)44_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[44]","numberOfBytes":"1408"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_contract(IDataStorageCartridge)7065":{"encoding":"inplace","label":"contract IDataStorageCartridge","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_contract(IDataStorageCartridge)7065)":{"encoding":"mapping","key":"t_address","label":"mapping(address => contract IDataStorageCartridge)","numberOfBytes":"32","value":"t_contract(IDataStorageCartridge)7065"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_struct(UserProfile)6477_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct Profile.UserProfile)","numberOfBytes":"32","value":"t_struct(UserProfile)6477_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_bytes32)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_mapping(t_bytes32,t_struct(RoleData)34_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)34_storage"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(AddressToUintMap)5306_storage":{"encoding":"inplace","label":"struct EnumerableMapUpgradeable.AddressToUintMap","members":[{"astId":5305,"contract":"contracts/Profile.sol:Profile","label":"_inner","offset":0,"slot":"0","type":"t_struct(Bytes32ToBytes32Map)4556_storage"}],"numberOfBytes":"96"},"t_struct(Bytes32Set)6003_storage":{"encoding":"inplace","label":"struct EnumerableSetUpgradeable.Bytes32Set","members":[{"astId":6002,"contract":"contracts/Profile.sol:Profile","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)5809_storage"}],"numberOfBytes":"64"},"t_struct(Bytes32ToBytes32Map)4556_storage":{"encoding":"inplace","label":"struct EnumerableMapUpgradeable.Bytes32ToBytes32Map","members":[{"astId":4551,"contract":"contracts/Profile.sol:Profile","label":"_keys","offset":0,"slot":"0","type":"t_struct(Bytes32Set)6003_storage"},{"astId":4555,"contract":"contracts/Profile.sol:Profile","label":"_values","offset":0,"slot":"2","type":"t_mapping(t_bytes32,t_bytes32)"}],"numberOfBytes":"96"},"t_struct(Counter)3106_storage":{"encoding":"inplace","label":"struct CountersUpgradeable.Counter","members":[{"astId":3105,"contract":"contracts/Profile.sol:Profile","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_struct(RoleData)34_storage":{"encoding":"inplace","label":"struct AccessControlUpgradeable.RoleData","members":[{"astId":31,"contract":"contracts/Profile.sol:Profile","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":33,"contract":"contracts/Profile.sol:Profile","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_struct(Set)5809_storage":{"encoding":"inplace","label":"struct EnumerableSetUpgradeable.Set","members":[{"astId":5804,"contract":"contracts/Profile.sol:Profile","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":5808,"contract":"contracts/Profile.sol:Profile","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_struct(UintToAddressMap)5039_storage":{"encoding":"inplace","label":"struct EnumerableMapUpgradeable.UintToAddressMap","members":[{"astId":5038,"contract":"contracts/Profile.sol:Profile","label":"_inner","offset":0,"slot":"0","type":"t_struct(Bytes32ToBytes32Map)4556_storage"}],"numberOfBytes":"96"},"t_struct(UserProfile)6477_storage":{"encoding":"inplace","label":"struct Profile.UserProfile","members":[{"astId":6466,"contract":"contracts/Profile.sol:Profile","label":"checksum","offset":0,"slot":"0","type":"t_bytes32"},{"astId":6468,"contract":"contracts/Profile.sol:Profile","label":"issuedBy","offset":0,"slot":"1","type":"t_address"},{"astId":6470,"contract":"contracts/Profile.sol:Profile","label":"issuedAt","offset":20,"slot":"1","type":"t_uint32"},{"astId":6472,"contract":"contracts/Profile.sol:Profile","label":"signature","offset":0,"slot":"2","type":"t_bytes_storage"},{"astId":6474,"contract":"contracts/Profile.sol:Profile","label":"metadata","offset":0,"slot":"3","type":"t_string_storage"},{"astId":6476,"contract":"contracts/Profile.sol:Profile","label":"storageAddress","offset":0,"slot":"4","type":"t_address"}],"numberOfBytes":"160"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"contracts/interfaces/IDataStorageCartridge.sol":{"IDataStorageCartridge":{"abi":[{"inputs":[{"internalType":"bytes","name":"args","type":"bytes"}],"name":"create","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"fetch","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"args","type":"bytes"}],"name":"remove","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"typeOf","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"create(bytes)":"cf5ba53f","fetch()":"a95c372d","remove(bytes)":"58edef4c","typeOf()":"57fc69d5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetch\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"remove\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"typeOf\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDataStorageCartridge.sol\":\"IDataStorageCartridge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IDataStorageCartridge.sol\":{\"keccak256\":\"0x168e00cfc9ed7c26265b2d1fe8b5f45418f7e6732b1e130cdc1694ea8f8181f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2b0a6a891519b18ce1870da9f2f8f59d5ea4c58f2d9a138390eb788b5929ea8\",\"dweb:/ipfs/QmWMvE4vm6sJ43QzUmLhkGttPN69iGFYsBYqGNgu3AgkiK\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}}}}}